Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> var_declaration
Rule 5     statement -> assignment
Rule 6     statement -> if_statement
Rule 7     statement -> while_statement
Rule 8     statement -> for_statement
Rule 9     statement -> print_statement
Rule 10    statement -> model_declaration
Rule 11    statement -> model_operation
Rule 12    statement -> model_operation_with_params
Rule 13    statement -> model_assign_r
Rule 14    statement -> function_declaration
Rule 15    statement -> return_statement
Rule 16    statement -> continue_statement
Rule 17    statement -> break_statement
Rule 18    statement -> variable_query
Rule 19    statement -> comment_expression
Rule 20    var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON
Rule 21    var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON
Rule 22    var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON
Rule 23    var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON
Rule 24    var_declaration -> VAR IDENTIFIER EQ array SEMICOLON
Rule 25    var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON
Rule 26    var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON
Rule 27    assignment -> IDENTIFIER EQ numvar_expression SEMICOLON
Rule 28    assignment -> IDENTIFIER EQ bool_expression SEMICOLON
Rule 29    assignment -> IDENTIFIER EQ string_expression SEMICOLON
Rule 30    assignment -> IDENTIFIER EQ identifier_expression SEMICOLON
Rule 31    assignment -> IDENTIFIER EQ array SEMICOLON
Rule 32    assignment -> IDENTIFIER EQ matrix SEMICOLON
Rule 33    variable_query -> IDENTIFIER SEMICOLON
Rule 34    if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
Rule 35    elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause
Rule 36    elif_clause -> empty
Rule 37    else_clause -> ELSE LBRACE statement_list RBRACE
Rule 38    else_clause -> empty
Rule 39    while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
Rule 40    for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
Rule 41    for_initialization -> var_declaration
Rule 42    for_update -> IDENTIFIER EQ numvar_expression
Rule 43    for_update -> empty
Rule 44    print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON
Rule 45    print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON
Rule 46    print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON
Rule 47    print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON
Rule 48    model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
Rule 49    model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
Rule 50    model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
Rule 51    param_list -> param_list COMMA param
Rule 52    param_list -> param
Rule 53    param_list -> empty
Rule 54    param -> numvar_expression
Rule 55    param -> bool_expression
Rule 56    param -> string_expression
Rule 57    param -> identifier_expression
Rule 58    model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
Rule 59    model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
Rule 60    function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
Rule 61    parameter_list -> parameter_list COMMA IDENTIFIER
Rule 62    parameter_list -> IDENTIFIER
Rule 63    parameter_list -> empty
Rule 64    return_statement -> RETURN numvar_expression SEMICOLON
Rule 65    return_statement -> RETURN bool_expression SEMICOLON
Rule 66    return_statement -> RETURN string_expression SEMICOLON
Rule 67    return_statement -> RETURN identifier_expression SEMICOLON
Rule 68    continue_statement -> CONTINUE SEMICOLON
Rule 69    break_statement -> BREAK SEMICOLON
Rule 70    numvar_expression -> numvar_expression PLUS numvar_expression
Rule 71    numvar_expression -> numvar_expression MINUS numvar_expression
Rule 72    numvar_expression -> numvar_expression MUL numvar_expression
Rule 73    numvar_expression -> numvar_expression DIV numvar_expression
Rule 74    numvar_expression -> numvar_expression POW numvar_expression
Rule 75    numvar_expression -> numvar
Rule 76    numvar -> NUMBER
Rule 77    numvar -> IDENTIFIER
Rule 78    bool_expression -> bool_expression AND bool_expression
Rule 79    bool_expression -> bool_expression OR bool_expression
Rule 80    bool_expression -> NOT bool_expression
Rule 81    bool_expression -> BOOL
Rule 82    comparison_expression -> numvar_expression EQ numvar_expression
Rule 83    comparison_expression -> numvar_expression NE numvar_expression
Rule 84    comparison_expression -> numvar_expression EE numvar_expression
Rule 85    comparison_expression -> numvar_expression LT numvar_expression
Rule 86    comparison_expression -> numvar_expression LTE numvar_expression
Rule 87    comparison_expression -> numvar_expression GT numvar_expression
Rule 88    comparison_expression -> numvar_expression GTE numvar_expression
Rule 89    comparison_expression -> bool_expression EQ bool_expression
Rule 90    comparison_expression -> bool_expression NE bool_expression
Rule 91    comparison_expression -> bool_expression EE bool_expression
Rule 92    string_expression -> STRING
Rule 93    identifier_expression -> IDENTIFIER
Rule 94    condition -> comparison_expression
Rule 95    condition -> bool_expression
Rule 96    array -> LBRACKET elements RBRACKET
Rule 97    elements -> elements COMMA numvar_expression
Rule 98    elements -> numvar_expression
Rule 99    elements -> empty
Rule 100   matrixs -> LBRACKET matrixs COMMA matrix RBRACKET
Rule 101   matrixs -> matrix
Rule 102   matrixs -> empty
Rule 103   matrix -> LBRACKET arrays RBRACKET
Rule 104   arrays -> arrays COMMA array
Rule 105   arrays -> array
Rule 106   arrays -> empty
Rule 107   comment_expression -> COMMENT STRING
Rule 108   empty -> <empty>

Terminals, with rules where they appear

AND                  : 78
BOOL                 : 81
BREAK                : 69
COMMA                : 48 48 48 51 61 97 100 104
COMMENT              : 107
CONTINUE             : 68
DIV                  : 73
DOT                  : 49 50 58 59
EE                   : 84 91
ELIF                 : 35
ELSE                 : 37
EQ                   : 20 21 22 23 24 25 26 27 28 29 30 31 32 42 48 58 59 82 89
FOR                  : 40
FUN                  : 60
GT                   : 87
GTE                  : 88
IDENTIFIER           : 20 21 22 23 24 25 26 27 28 29 30 31 32 33 42 48 49 49 50 50 58 58 59 59 60 61 62 77 93
IF                   : 34
LBRACE               : 34 35 37 39 40 60
LBRACKET             : 96 100 103
LPAREN               : 34 35 39 40 44 45 46 47 48 49 50 60
LT                   : 85
LTE                  : 86
MINUS                : 71
MODEL                : 48
MUL                  : 72
NE                   : 83 90
NOT                  : 80
NUMBER               : 48 76
OR                   : 79
PLUS                 : 70
POW                  : 74
PRINT                : 44 45 46 47
RBRACE               : 34 35 37 39 40 60
RBRACKET             : 96 100 103
RETURN               : 64 65 66 67
RPAREN               : 34 35 39 40 44 45 46 47 48 49 50 60
SEMICOLON            : 20 21 22 23 24 25 26 27 28 29 30 31 32 33 40 44 45 46 47 48 49 50 58 59 64 65 66 67 68 69
STRING               : 92 107
VAR                  : 20 21 22 23 24 25 26
WHILE                : 39
error                : 

Nonterminals, with rules where they appear

array                : 24 31 48 48 58 104 105
arrays               : 103 104
assignment           : 5
bool_expression      : 21 28 45 55 65 78 78 79 79 80 89 89 90 90 91 91 95
break_statement      : 17
comment_expression   : 19
comparison_expression : 94
condition            : 34 35 39 40
continue_statement   : 16
elements             : 96 97
elif_clause          : 34 35
else_clause          : 34
empty                : 36 38 43 53 63 99 102 106
for_initialization   : 40
for_statement        : 8
for_update           : 40
function_declaration : 14
identifier_expression : 23 30 47 57 67
if_statement         : 6
matrix               : 25 32 59 100 101
matrixs              : 26 48 100
model_assign_r       : 13
model_declaration    : 10
model_operation      : 11
model_operation_with_params : 12
numvar               : 75
numvar_expression    : 20 27 42 44 54 64 70 70 71 71 72 72 73 73 74 74 82 82 83 83 84 84 85 85 86 86 87 87 88 88 97 98
param                : 51 52
param_list           : 50 51
parameter_list       : 60 61
print_statement      : 9
program              : 0
return_statement     : 15
statement            : 2 3
statement_list       : 1 2 34 35 37 39 40 60
string_expression    : 22 29 46 56 66
var_declaration      : 4 41
variable_query       : 18
while_statement      : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    $end            reduce using rule 1 (program -> statement_list .)
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 3

    (3) statement_list -> statement .

    VAR             reduce using rule 3 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    WHILE           reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    PRINT           reduce using rule 3 (statement_list -> statement .)
    MODEL           reduce using rule 3 (statement_list -> statement .)
    FUN             reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    CONTINUE        reduce using rule 3 (statement_list -> statement .)
    BREAK           reduce using rule 3 (statement_list -> statement .)
    COMMENT         reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> var_declaration .

    VAR             reduce using rule 4 (statement -> var_declaration .)
    IDENTIFIER      reduce using rule 4 (statement -> var_declaration .)
    IF              reduce using rule 4 (statement -> var_declaration .)
    WHILE           reduce using rule 4 (statement -> var_declaration .)
    FOR             reduce using rule 4 (statement -> var_declaration .)
    PRINT           reduce using rule 4 (statement -> var_declaration .)
    MODEL           reduce using rule 4 (statement -> var_declaration .)
    FUN             reduce using rule 4 (statement -> var_declaration .)
    RETURN          reduce using rule 4 (statement -> var_declaration .)
    CONTINUE        reduce using rule 4 (statement -> var_declaration .)
    BREAK           reduce using rule 4 (statement -> var_declaration .)
    COMMENT         reduce using rule 4 (statement -> var_declaration .)
    $end            reduce using rule 4 (statement -> var_declaration .)
    RBRACE          reduce using rule 4 (statement -> var_declaration .)


state 5

    (5) statement -> assignment .

    VAR             reduce using rule 5 (statement -> assignment .)
    IDENTIFIER      reduce using rule 5 (statement -> assignment .)
    IF              reduce using rule 5 (statement -> assignment .)
    WHILE           reduce using rule 5 (statement -> assignment .)
    FOR             reduce using rule 5 (statement -> assignment .)
    PRINT           reduce using rule 5 (statement -> assignment .)
    MODEL           reduce using rule 5 (statement -> assignment .)
    FUN             reduce using rule 5 (statement -> assignment .)
    RETURN          reduce using rule 5 (statement -> assignment .)
    CONTINUE        reduce using rule 5 (statement -> assignment .)
    BREAK           reduce using rule 5 (statement -> assignment .)
    COMMENT         reduce using rule 5 (statement -> assignment .)
    $end            reduce using rule 5 (statement -> assignment .)
    RBRACE          reduce using rule 5 (statement -> assignment .)


state 6

    (6) statement -> if_statement .

    VAR             reduce using rule 6 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    WHILE           reduce using rule 6 (statement -> if_statement .)
    FOR             reduce using rule 6 (statement -> if_statement .)
    PRINT           reduce using rule 6 (statement -> if_statement .)
    MODEL           reduce using rule 6 (statement -> if_statement .)
    FUN             reduce using rule 6 (statement -> if_statement .)
    RETURN          reduce using rule 6 (statement -> if_statement .)
    CONTINUE        reduce using rule 6 (statement -> if_statement .)
    BREAK           reduce using rule 6 (statement -> if_statement .)
    COMMENT         reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RBRACE          reduce using rule 6 (statement -> if_statement .)


state 7

    (7) statement -> while_statement .

    VAR             reduce using rule 7 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 7 (statement -> while_statement .)
    IF              reduce using rule 7 (statement -> while_statement .)
    WHILE           reduce using rule 7 (statement -> while_statement .)
    FOR             reduce using rule 7 (statement -> while_statement .)
    PRINT           reduce using rule 7 (statement -> while_statement .)
    MODEL           reduce using rule 7 (statement -> while_statement .)
    FUN             reduce using rule 7 (statement -> while_statement .)
    RETURN          reduce using rule 7 (statement -> while_statement .)
    CONTINUE        reduce using rule 7 (statement -> while_statement .)
    BREAK           reduce using rule 7 (statement -> while_statement .)
    COMMENT         reduce using rule 7 (statement -> while_statement .)
    $end            reduce using rule 7 (statement -> while_statement .)
    RBRACE          reduce using rule 7 (statement -> while_statement .)


state 8

    (8) statement -> for_statement .

    VAR             reduce using rule 8 (statement -> for_statement .)
    IDENTIFIER      reduce using rule 8 (statement -> for_statement .)
    IF              reduce using rule 8 (statement -> for_statement .)
    WHILE           reduce using rule 8 (statement -> for_statement .)
    FOR             reduce using rule 8 (statement -> for_statement .)
    PRINT           reduce using rule 8 (statement -> for_statement .)
    MODEL           reduce using rule 8 (statement -> for_statement .)
    FUN             reduce using rule 8 (statement -> for_statement .)
    RETURN          reduce using rule 8 (statement -> for_statement .)
    CONTINUE        reduce using rule 8 (statement -> for_statement .)
    BREAK           reduce using rule 8 (statement -> for_statement .)
    COMMENT         reduce using rule 8 (statement -> for_statement .)
    $end            reduce using rule 8 (statement -> for_statement .)
    RBRACE          reduce using rule 8 (statement -> for_statement .)


state 9

    (9) statement -> print_statement .

    VAR             reduce using rule 9 (statement -> print_statement .)
    IDENTIFIER      reduce using rule 9 (statement -> print_statement .)
    IF              reduce using rule 9 (statement -> print_statement .)
    WHILE           reduce using rule 9 (statement -> print_statement .)
    FOR             reduce using rule 9 (statement -> print_statement .)
    PRINT           reduce using rule 9 (statement -> print_statement .)
    MODEL           reduce using rule 9 (statement -> print_statement .)
    FUN             reduce using rule 9 (statement -> print_statement .)
    RETURN          reduce using rule 9 (statement -> print_statement .)
    CONTINUE        reduce using rule 9 (statement -> print_statement .)
    BREAK           reduce using rule 9 (statement -> print_statement .)
    COMMENT         reduce using rule 9 (statement -> print_statement .)
    $end            reduce using rule 9 (statement -> print_statement .)
    RBRACE          reduce using rule 9 (statement -> print_statement .)


state 10

    (10) statement -> model_declaration .

    VAR             reduce using rule 10 (statement -> model_declaration .)
    IDENTIFIER      reduce using rule 10 (statement -> model_declaration .)
    IF              reduce using rule 10 (statement -> model_declaration .)
    WHILE           reduce using rule 10 (statement -> model_declaration .)
    FOR             reduce using rule 10 (statement -> model_declaration .)
    PRINT           reduce using rule 10 (statement -> model_declaration .)
    MODEL           reduce using rule 10 (statement -> model_declaration .)
    FUN             reduce using rule 10 (statement -> model_declaration .)
    RETURN          reduce using rule 10 (statement -> model_declaration .)
    CONTINUE        reduce using rule 10 (statement -> model_declaration .)
    BREAK           reduce using rule 10 (statement -> model_declaration .)
    COMMENT         reduce using rule 10 (statement -> model_declaration .)
    $end            reduce using rule 10 (statement -> model_declaration .)
    RBRACE          reduce using rule 10 (statement -> model_declaration .)


state 11

    (11) statement -> model_operation .

    VAR             reduce using rule 11 (statement -> model_operation .)
    IDENTIFIER      reduce using rule 11 (statement -> model_operation .)
    IF              reduce using rule 11 (statement -> model_operation .)
    WHILE           reduce using rule 11 (statement -> model_operation .)
    FOR             reduce using rule 11 (statement -> model_operation .)
    PRINT           reduce using rule 11 (statement -> model_operation .)
    MODEL           reduce using rule 11 (statement -> model_operation .)
    FUN             reduce using rule 11 (statement -> model_operation .)
    RETURN          reduce using rule 11 (statement -> model_operation .)
    CONTINUE        reduce using rule 11 (statement -> model_operation .)
    BREAK           reduce using rule 11 (statement -> model_operation .)
    COMMENT         reduce using rule 11 (statement -> model_operation .)
    $end            reduce using rule 11 (statement -> model_operation .)
    RBRACE          reduce using rule 11 (statement -> model_operation .)


state 12

    (12) statement -> model_operation_with_params .

    VAR             reduce using rule 12 (statement -> model_operation_with_params .)
    IDENTIFIER      reduce using rule 12 (statement -> model_operation_with_params .)
    IF              reduce using rule 12 (statement -> model_operation_with_params .)
    WHILE           reduce using rule 12 (statement -> model_operation_with_params .)
    FOR             reduce using rule 12 (statement -> model_operation_with_params .)
    PRINT           reduce using rule 12 (statement -> model_operation_with_params .)
    MODEL           reduce using rule 12 (statement -> model_operation_with_params .)
    FUN             reduce using rule 12 (statement -> model_operation_with_params .)
    RETURN          reduce using rule 12 (statement -> model_operation_with_params .)
    CONTINUE        reduce using rule 12 (statement -> model_operation_with_params .)
    BREAK           reduce using rule 12 (statement -> model_operation_with_params .)
    COMMENT         reduce using rule 12 (statement -> model_operation_with_params .)
    $end            reduce using rule 12 (statement -> model_operation_with_params .)
    RBRACE          reduce using rule 12 (statement -> model_operation_with_params .)


state 13

    (13) statement -> model_assign_r .

    VAR             reduce using rule 13 (statement -> model_assign_r .)
    IDENTIFIER      reduce using rule 13 (statement -> model_assign_r .)
    IF              reduce using rule 13 (statement -> model_assign_r .)
    WHILE           reduce using rule 13 (statement -> model_assign_r .)
    FOR             reduce using rule 13 (statement -> model_assign_r .)
    PRINT           reduce using rule 13 (statement -> model_assign_r .)
    MODEL           reduce using rule 13 (statement -> model_assign_r .)
    FUN             reduce using rule 13 (statement -> model_assign_r .)
    RETURN          reduce using rule 13 (statement -> model_assign_r .)
    CONTINUE        reduce using rule 13 (statement -> model_assign_r .)
    BREAK           reduce using rule 13 (statement -> model_assign_r .)
    COMMENT         reduce using rule 13 (statement -> model_assign_r .)
    $end            reduce using rule 13 (statement -> model_assign_r .)
    RBRACE          reduce using rule 13 (statement -> model_assign_r .)


state 14

    (14) statement -> function_declaration .

    VAR             reduce using rule 14 (statement -> function_declaration .)
    IDENTIFIER      reduce using rule 14 (statement -> function_declaration .)
    IF              reduce using rule 14 (statement -> function_declaration .)
    WHILE           reduce using rule 14 (statement -> function_declaration .)
    FOR             reduce using rule 14 (statement -> function_declaration .)
    PRINT           reduce using rule 14 (statement -> function_declaration .)
    MODEL           reduce using rule 14 (statement -> function_declaration .)
    FUN             reduce using rule 14 (statement -> function_declaration .)
    RETURN          reduce using rule 14 (statement -> function_declaration .)
    CONTINUE        reduce using rule 14 (statement -> function_declaration .)
    BREAK           reduce using rule 14 (statement -> function_declaration .)
    COMMENT         reduce using rule 14 (statement -> function_declaration .)
    $end            reduce using rule 14 (statement -> function_declaration .)
    RBRACE          reduce using rule 14 (statement -> function_declaration .)


state 15

    (15) statement -> return_statement .

    VAR             reduce using rule 15 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 15 (statement -> return_statement .)
    IF              reduce using rule 15 (statement -> return_statement .)
    WHILE           reduce using rule 15 (statement -> return_statement .)
    FOR             reduce using rule 15 (statement -> return_statement .)
    PRINT           reduce using rule 15 (statement -> return_statement .)
    MODEL           reduce using rule 15 (statement -> return_statement .)
    FUN             reduce using rule 15 (statement -> return_statement .)
    RETURN          reduce using rule 15 (statement -> return_statement .)
    CONTINUE        reduce using rule 15 (statement -> return_statement .)
    BREAK           reduce using rule 15 (statement -> return_statement .)
    COMMENT         reduce using rule 15 (statement -> return_statement .)
    $end            reduce using rule 15 (statement -> return_statement .)
    RBRACE          reduce using rule 15 (statement -> return_statement .)


state 16

    (16) statement -> continue_statement .

    VAR             reduce using rule 16 (statement -> continue_statement .)
    IDENTIFIER      reduce using rule 16 (statement -> continue_statement .)
    IF              reduce using rule 16 (statement -> continue_statement .)
    WHILE           reduce using rule 16 (statement -> continue_statement .)
    FOR             reduce using rule 16 (statement -> continue_statement .)
    PRINT           reduce using rule 16 (statement -> continue_statement .)
    MODEL           reduce using rule 16 (statement -> continue_statement .)
    FUN             reduce using rule 16 (statement -> continue_statement .)
    RETURN          reduce using rule 16 (statement -> continue_statement .)
    CONTINUE        reduce using rule 16 (statement -> continue_statement .)
    BREAK           reduce using rule 16 (statement -> continue_statement .)
    COMMENT         reduce using rule 16 (statement -> continue_statement .)
    $end            reduce using rule 16 (statement -> continue_statement .)
    RBRACE          reduce using rule 16 (statement -> continue_statement .)


state 17

    (17) statement -> break_statement .

    VAR             reduce using rule 17 (statement -> break_statement .)
    IDENTIFIER      reduce using rule 17 (statement -> break_statement .)
    IF              reduce using rule 17 (statement -> break_statement .)
    WHILE           reduce using rule 17 (statement -> break_statement .)
    FOR             reduce using rule 17 (statement -> break_statement .)
    PRINT           reduce using rule 17 (statement -> break_statement .)
    MODEL           reduce using rule 17 (statement -> break_statement .)
    FUN             reduce using rule 17 (statement -> break_statement .)
    RETURN          reduce using rule 17 (statement -> break_statement .)
    CONTINUE        reduce using rule 17 (statement -> break_statement .)
    BREAK           reduce using rule 17 (statement -> break_statement .)
    COMMENT         reduce using rule 17 (statement -> break_statement .)
    $end            reduce using rule 17 (statement -> break_statement .)
    RBRACE          reduce using rule 17 (statement -> break_statement .)


state 18

    (18) statement -> variable_query .

    VAR             reduce using rule 18 (statement -> variable_query .)
    IDENTIFIER      reduce using rule 18 (statement -> variable_query .)
    IF              reduce using rule 18 (statement -> variable_query .)
    WHILE           reduce using rule 18 (statement -> variable_query .)
    FOR             reduce using rule 18 (statement -> variable_query .)
    PRINT           reduce using rule 18 (statement -> variable_query .)
    MODEL           reduce using rule 18 (statement -> variable_query .)
    FUN             reduce using rule 18 (statement -> variable_query .)
    RETURN          reduce using rule 18 (statement -> variable_query .)
    CONTINUE        reduce using rule 18 (statement -> variable_query .)
    BREAK           reduce using rule 18 (statement -> variable_query .)
    COMMENT         reduce using rule 18 (statement -> variable_query .)
    $end            reduce using rule 18 (statement -> variable_query .)
    RBRACE          reduce using rule 18 (statement -> variable_query .)


state 19

    (19) statement -> comment_expression .

    VAR             reduce using rule 19 (statement -> comment_expression .)
    IDENTIFIER      reduce using rule 19 (statement -> comment_expression .)
    IF              reduce using rule 19 (statement -> comment_expression .)
    WHILE           reduce using rule 19 (statement -> comment_expression .)
    FOR             reduce using rule 19 (statement -> comment_expression .)
    PRINT           reduce using rule 19 (statement -> comment_expression .)
    MODEL           reduce using rule 19 (statement -> comment_expression .)
    FUN             reduce using rule 19 (statement -> comment_expression .)
    RETURN          reduce using rule 19 (statement -> comment_expression .)
    CONTINUE        reduce using rule 19 (statement -> comment_expression .)
    BREAK           reduce using rule 19 (statement -> comment_expression .)
    COMMENT         reduce using rule 19 (statement -> comment_expression .)
    $end            reduce using rule 19 (statement -> comment_expression .)
    RBRACE          reduce using rule 19 (statement -> comment_expression .)


state 20

    (20) var_declaration -> VAR . IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> VAR . IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> VAR . IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> VAR . IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> VAR . IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> VAR . IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> VAR . IDENTIFIER EQ matrixs SEMICOLON

    IDENTIFIER      shift and go to state 33


state 21

    (27) assignment -> IDENTIFIER . EQ numvar_expression SEMICOLON
    (28) assignment -> IDENTIFIER . EQ bool_expression SEMICOLON
    (29) assignment -> IDENTIFIER . EQ string_expression SEMICOLON
    (30) assignment -> IDENTIFIER . EQ identifier_expression SEMICOLON
    (31) assignment -> IDENTIFIER . EQ array SEMICOLON
    (32) assignment -> IDENTIFIER . EQ matrix SEMICOLON
    (49) model_operation -> IDENTIFIER . DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> IDENTIFIER . DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> IDENTIFIER . DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> IDENTIFIER . DOT IDENTIFIER EQ matrix SEMICOLON
    (33) variable_query -> IDENTIFIER . SEMICOLON

    EQ              shift and go to state 34
    DOT             shift and go to state 36
    SEMICOLON       shift and go to state 35


state 22

    (34) if_statement -> IF . LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause

    LPAREN          shift and go to state 37


state 23

    (39) while_statement -> WHILE . LPAREN condition RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 38


state 24

    (40) for_statement -> FOR . LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 39


state 25

    (44) print_statement -> PRINT . LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> PRINT . LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> PRINT . LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> PRINT . LPAREN identifier_expression RPAREN SEMICOLON

    LPAREN          shift and go to state 40


state 26

    (48) model_declaration -> MODEL . IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON

    IDENTIFIER      shift and go to state 41


state 27

    (60) function_declaration -> FUN . IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE

    IDENTIFIER      shift and go to state 42


state 28

    (64) return_statement -> RETURN . numvar_expression SEMICOLON
    (65) return_statement -> RETURN . bool_expression SEMICOLON
    (66) return_statement -> RETURN . string_expression SEMICOLON
    (67) return_statement -> RETURN . identifier_expression SEMICOLON
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL
    (92) string_expression -> . STRING
    (93) identifier_expression -> . IDENTIFIER
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    STRING          shift and go to state 50
    IDENTIFIER      shift and go to state 51
    NUMBER          shift and go to state 52

    numvar_expression              shift and go to state 43
    bool_expression                shift and go to state 44
    string_expression              shift and go to state 45
    identifier_expression          shift and go to state 46
    numvar                         shift and go to state 47

state 29

    (68) continue_statement -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 53


state 30

    (69) break_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 54


state 31

    (107) comment_expression -> COMMENT . STRING

    STRING          shift and go to state 55


state 32

    (2) statement_list -> statement_list statement .

    VAR             reduce using rule 2 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    MODEL           reduce using rule 2 (statement_list -> statement_list statement .)
    FUN             reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 2 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 2 (statement_list -> statement_list statement .)
    COMMENT         reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)


state 33

    (20) var_declaration -> VAR IDENTIFIER . EQ numvar_expression SEMICOLON
    (21) var_declaration -> VAR IDENTIFIER . EQ bool_expression SEMICOLON
    (22) var_declaration -> VAR IDENTIFIER . EQ string_expression SEMICOLON
    (23) var_declaration -> VAR IDENTIFIER . EQ identifier_expression SEMICOLON
    (24) var_declaration -> VAR IDENTIFIER . EQ array SEMICOLON
    (25) var_declaration -> VAR IDENTIFIER . EQ matrix SEMICOLON
    (26) var_declaration -> VAR IDENTIFIER . EQ matrixs SEMICOLON

    EQ              shift and go to state 56


state 34

    (27) assignment -> IDENTIFIER EQ . numvar_expression SEMICOLON
    (28) assignment -> IDENTIFIER EQ . bool_expression SEMICOLON
    (29) assignment -> IDENTIFIER EQ . string_expression SEMICOLON
    (30) assignment -> IDENTIFIER EQ . identifier_expression SEMICOLON
    (31) assignment -> IDENTIFIER EQ . array SEMICOLON
    (32) assignment -> IDENTIFIER EQ . matrix SEMICOLON
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL
    (92) string_expression -> . STRING
    (93) identifier_expression -> . IDENTIFIER
    (96) array -> . LBRACKET elements RBRACKET
    (103) matrix -> . LBRACKET arrays RBRACKET
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    STRING          shift and go to state 50
    IDENTIFIER      shift and go to state 51
    LBRACKET        shift and go to state 63
    NUMBER          shift and go to state 52

    numvar_expression              shift and go to state 57
    bool_expression                shift and go to state 58
    string_expression              shift and go to state 59
    identifier_expression          shift and go to state 60
    array                          shift and go to state 61
    matrix                         shift and go to state 62
    numvar                         shift and go to state 47

state 35

    (33) variable_query -> IDENTIFIER SEMICOLON .

    VAR             reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    IF              reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    MODEL           reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    FUN             reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    CONTINUE        reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    COMMENT         reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    $end            reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 33 (variable_query -> IDENTIFIER SEMICOLON .)


state 36

    (49) model_operation -> IDENTIFIER DOT . IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> IDENTIFIER DOT . IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> IDENTIFIER DOT . IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> IDENTIFIER DOT . IDENTIFIER EQ matrix SEMICOLON

    IDENTIFIER      shift and go to state 64


state 37

    (34) if_statement -> IF LPAREN . condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (94) condition -> . comparison_expression
    (95) condition -> . bool_expression
    (82) comparison_expression -> . numvar_expression EQ numvar_expression
    (83) comparison_expression -> . numvar_expression NE numvar_expression
    (84) comparison_expression -> . numvar_expression EE numvar_expression
    (85) comparison_expression -> . numvar_expression LT numvar_expression
    (86) comparison_expression -> . numvar_expression LTE numvar_expression
    (87) comparison_expression -> . numvar_expression GT numvar_expression
    (88) comparison_expression -> . numvar_expression GTE numvar_expression
    (89) comparison_expression -> . bool_expression EQ bool_expression
    (90) comparison_expression -> . bool_expression NE bool_expression
    (91) comparison_expression -> . bool_expression EE bool_expression
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    condition                      shift and go to state 65
    comparison_expression          shift and go to state 66
    bool_expression                shift and go to state 67
    numvar_expression              shift and go to state 68
    numvar                         shift and go to state 47

state 38

    (39) while_statement -> WHILE LPAREN . condition RPAREN LBRACE statement_list RBRACE
    (94) condition -> . comparison_expression
    (95) condition -> . bool_expression
    (82) comparison_expression -> . numvar_expression EQ numvar_expression
    (83) comparison_expression -> . numvar_expression NE numvar_expression
    (84) comparison_expression -> . numvar_expression EE numvar_expression
    (85) comparison_expression -> . numvar_expression LT numvar_expression
    (86) comparison_expression -> . numvar_expression LTE numvar_expression
    (87) comparison_expression -> . numvar_expression GT numvar_expression
    (88) comparison_expression -> . numvar_expression GTE numvar_expression
    (89) comparison_expression -> . bool_expression EQ bool_expression
    (90) comparison_expression -> . bool_expression NE bool_expression
    (91) comparison_expression -> . bool_expression EE bool_expression
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    condition                      shift and go to state 70
    comparison_expression          shift and go to state 66
    bool_expression                shift and go to state 67
    numvar_expression              shift and go to state 68
    numvar                         shift and go to state 47

state 39

    (40) for_statement -> FOR LPAREN . for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (41) for_initialization -> . var_declaration
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON

    VAR             shift and go to state 20

    for_initialization             shift and go to state 71
    var_declaration                shift and go to state 72

state 40

    (44) print_statement -> PRINT LPAREN . numvar_expression RPAREN SEMICOLON
    (45) print_statement -> PRINT LPAREN . bool_expression RPAREN SEMICOLON
    (46) print_statement -> PRINT LPAREN . string_expression RPAREN SEMICOLON
    (47) print_statement -> PRINT LPAREN . identifier_expression RPAREN SEMICOLON
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL
    (92) string_expression -> . STRING
    (93) identifier_expression -> . IDENTIFIER
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    STRING          shift and go to state 50
    IDENTIFIER      shift and go to state 51
    NUMBER          shift and go to state 52

    numvar_expression              shift and go to state 73
    bool_expression                shift and go to state 74
    string_expression              shift and go to state 75
    identifier_expression          shift and go to state 76
    numvar                         shift and go to state 47

state 41

    (48) model_declaration -> MODEL IDENTIFIER . EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON

    EQ              shift and go to state 77


state 42

    (60) function_declaration -> FUN IDENTIFIER . LPAREN parameter_list RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 78


state 43

    (64) return_statement -> RETURN numvar_expression . SEMICOLON
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       shift and go to state 79
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 44

    (65) return_statement -> RETURN bool_expression . SEMICOLON
    (78) bool_expression -> bool_expression . AND bool_expression
    (79) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       shift and go to state 85
    AND             shift and go to state 86
    OR              shift and go to state 87


state 45

    (66) return_statement -> RETURN string_expression . SEMICOLON

    SEMICOLON       shift and go to state 88


state 46

    (67) return_statement -> RETURN identifier_expression . SEMICOLON

    SEMICOLON       shift and go to state 89


state 47

    (75) numvar_expression -> numvar .

    SEMICOLON       reduce using rule 75 (numvar_expression -> numvar .)
    PLUS            reduce using rule 75 (numvar_expression -> numvar .)
    MINUS           reduce using rule 75 (numvar_expression -> numvar .)
    MUL             reduce using rule 75 (numvar_expression -> numvar .)
    DIV             reduce using rule 75 (numvar_expression -> numvar .)
    POW             reduce using rule 75 (numvar_expression -> numvar .)
    EQ              reduce using rule 75 (numvar_expression -> numvar .)
    NE              reduce using rule 75 (numvar_expression -> numvar .)
    EE              reduce using rule 75 (numvar_expression -> numvar .)
    LT              reduce using rule 75 (numvar_expression -> numvar .)
    LTE             reduce using rule 75 (numvar_expression -> numvar .)
    GT              reduce using rule 75 (numvar_expression -> numvar .)
    GTE             reduce using rule 75 (numvar_expression -> numvar .)
    RPAREN          reduce using rule 75 (numvar_expression -> numvar .)
    RBRACKET        reduce using rule 75 (numvar_expression -> numvar .)
    COMMA           reduce using rule 75 (numvar_expression -> numvar .)


state 48

    (80) bool_expression -> NOT . bool_expression
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL

    NOT             shift and go to state 48
    BOOL            shift and go to state 49

    bool_expression                shift and go to state 90

state 49

    (81) bool_expression -> BOOL .

    SEMICOLON       reduce using rule 81 (bool_expression -> BOOL .)
    AND             reduce using rule 81 (bool_expression -> BOOL .)
    OR              reduce using rule 81 (bool_expression -> BOOL .)
    EQ              reduce using rule 81 (bool_expression -> BOOL .)
    NE              reduce using rule 81 (bool_expression -> BOOL .)
    EE              reduce using rule 81 (bool_expression -> BOOL .)
    RPAREN          reduce using rule 81 (bool_expression -> BOOL .)
    COMMA           reduce using rule 81 (bool_expression -> BOOL .)


state 50

    (92) string_expression -> STRING .

    SEMICOLON       reduce using rule 92 (string_expression -> STRING .)
    RPAREN          reduce using rule 92 (string_expression -> STRING .)
    COMMA           reduce using rule 92 (string_expression -> STRING .)


state 51

    (93) identifier_expression -> IDENTIFIER .
    (77) numvar -> IDENTIFIER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 77 (numvar -> IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 77 (numvar -> IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 77 (numvar -> IDENTIFIER .)
    SEMICOLON       reduce using rule 77 (numvar -> IDENTIFIER .)
    PLUS            reduce using rule 77 (numvar -> IDENTIFIER .)
    MINUS           reduce using rule 77 (numvar -> IDENTIFIER .)
    MUL             reduce using rule 77 (numvar -> IDENTIFIER .)
    DIV             reduce using rule 77 (numvar -> IDENTIFIER .)
    POW             reduce using rule 77 (numvar -> IDENTIFIER .)
    RPAREN          reduce using rule 77 (numvar -> IDENTIFIER .)
    COMMA           reduce using rule 77 (numvar -> IDENTIFIER .)

  ! SEMICOLON       [ reduce using rule 93 (identifier_expression -> IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 93 (identifier_expression -> IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 93 (identifier_expression -> IDENTIFIER .) ]


state 52

    (76) numvar -> NUMBER .

    SEMICOLON       reduce using rule 76 (numvar -> NUMBER .)
    PLUS            reduce using rule 76 (numvar -> NUMBER .)
    MINUS           reduce using rule 76 (numvar -> NUMBER .)
    MUL             reduce using rule 76 (numvar -> NUMBER .)
    DIV             reduce using rule 76 (numvar -> NUMBER .)
    POW             reduce using rule 76 (numvar -> NUMBER .)
    EQ              reduce using rule 76 (numvar -> NUMBER .)
    NE              reduce using rule 76 (numvar -> NUMBER .)
    EE              reduce using rule 76 (numvar -> NUMBER .)
    LT              reduce using rule 76 (numvar -> NUMBER .)
    LTE             reduce using rule 76 (numvar -> NUMBER .)
    GT              reduce using rule 76 (numvar -> NUMBER .)
    GTE             reduce using rule 76 (numvar -> NUMBER .)
    RPAREN          reduce using rule 76 (numvar -> NUMBER .)
    RBRACKET        reduce using rule 76 (numvar -> NUMBER .)
    COMMA           reduce using rule 76 (numvar -> NUMBER .)


state 53

    (68) continue_statement -> CONTINUE SEMICOLON .

    VAR             reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    IDENTIFIER      reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    IF              reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    PRINT           reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    MODEL           reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    FUN             reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    COMMENT         reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    $end            reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)
    RBRACE          reduce using rule 68 (continue_statement -> CONTINUE SEMICOLON .)


state 54

    (69) break_statement -> BREAK SEMICOLON .

    VAR             reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    IF              reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    PRINT           reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    MODEL           reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    FUN             reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    COMMENT         reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    $end            reduce using rule 69 (break_statement -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 69 (break_statement -> BREAK SEMICOLON .)


state 55

    (107) comment_expression -> COMMENT STRING .

    VAR             reduce using rule 107 (comment_expression -> COMMENT STRING .)
    IDENTIFIER      reduce using rule 107 (comment_expression -> COMMENT STRING .)
    IF              reduce using rule 107 (comment_expression -> COMMENT STRING .)
    WHILE           reduce using rule 107 (comment_expression -> COMMENT STRING .)
    FOR             reduce using rule 107 (comment_expression -> COMMENT STRING .)
    PRINT           reduce using rule 107 (comment_expression -> COMMENT STRING .)
    MODEL           reduce using rule 107 (comment_expression -> COMMENT STRING .)
    FUN             reduce using rule 107 (comment_expression -> COMMENT STRING .)
    RETURN          reduce using rule 107 (comment_expression -> COMMENT STRING .)
    CONTINUE        reduce using rule 107 (comment_expression -> COMMENT STRING .)
    BREAK           reduce using rule 107 (comment_expression -> COMMENT STRING .)
    COMMENT         reduce using rule 107 (comment_expression -> COMMENT STRING .)
    $end            reduce using rule 107 (comment_expression -> COMMENT STRING .)
    RBRACE          reduce using rule 107 (comment_expression -> COMMENT STRING .)


state 56

    (20) var_declaration -> VAR IDENTIFIER EQ . numvar_expression SEMICOLON
    (21) var_declaration -> VAR IDENTIFIER EQ . bool_expression SEMICOLON
    (22) var_declaration -> VAR IDENTIFIER EQ . string_expression SEMICOLON
    (23) var_declaration -> VAR IDENTIFIER EQ . identifier_expression SEMICOLON
    (24) var_declaration -> VAR IDENTIFIER EQ . array SEMICOLON
    (25) var_declaration -> VAR IDENTIFIER EQ . matrix SEMICOLON
    (26) var_declaration -> VAR IDENTIFIER EQ . matrixs SEMICOLON
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL
    (92) string_expression -> . STRING
    (93) identifier_expression -> . IDENTIFIER
    (96) array -> . LBRACKET elements RBRACKET
    (103) matrix -> . LBRACKET arrays RBRACKET
    (100) matrixs -> . LBRACKET matrixs COMMA matrix RBRACKET
    (101) matrixs -> . matrix
    (102) matrixs -> . empty
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER
    (108) empty -> .

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    STRING          shift and go to state 50
    IDENTIFIER      shift and go to state 51
    LBRACKET        shift and go to state 98
    NUMBER          shift and go to state 52
    SEMICOLON       reduce using rule 108 (empty -> .)

    numvar_expression              shift and go to state 91
    bool_expression                shift and go to state 92
    string_expression              shift and go to state 93
    identifier_expression          shift and go to state 94
    array                          shift and go to state 95
    matrix                         shift and go to state 96
    matrixs                        shift and go to state 97
    numvar                         shift and go to state 47
    empty                          shift and go to state 99

state 57

    (27) assignment -> IDENTIFIER EQ numvar_expression . SEMICOLON
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       shift and go to state 100
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 58

    (28) assignment -> IDENTIFIER EQ bool_expression . SEMICOLON
    (78) bool_expression -> bool_expression . AND bool_expression
    (79) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       shift and go to state 101
    AND             shift and go to state 86
    OR              shift and go to state 87


state 59

    (29) assignment -> IDENTIFIER EQ string_expression . SEMICOLON

    SEMICOLON       shift and go to state 102


state 60

    (30) assignment -> IDENTIFIER EQ identifier_expression . SEMICOLON

    SEMICOLON       shift and go to state 103


state 61

    (31) assignment -> IDENTIFIER EQ array . SEMICOLON

    SEMICOLON       shift and go to state 104


state 62

    (32) assignment -> IDENTIFIER EQ matrix . SEMICOLON

    SEMICOLON       shift and go to state 105


state 63

    (96) array -> LBRACKET . elements RBRACKET
    (103) matrix -> LBRACKET . arrays RBRACKET
    (97) elements -> . elements COMMA numvar_expression
    (98) elements -> . numvar_expression
    (99) elements -> . empty
    (104) arrays -> . arrays COMMA array
    (105) arrays -> . array
    (106) arrays -> . empty
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (108) empty -> .
    (96) array -> . LBRACKET elements RBRACKET
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    RBRACKET        reduce using rule 108 (empty -> .)
    COMMA           reduce using rule 108 (empty -> .)
    LBRACKET        shift and go to state 106
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    elements                       shift and go to state 107
    arrays                         shift and go to state 108
    numvar_expression              shift and go to state 109
    empty                          shift and go to state 110
    array                          shift and go to state 111
    numvar                         shift and go to state 47

state 64

    (49) model_operation -> IDENTIFIER DOT IDENTIFIER . LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> IDENTIFIER DOT IDENTIFIER . LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> IDENTIFIER DOT IDENTIFIER . EQ array SEMICOLON
    (59) model_assign_r -> IDENTIFIER DOT IDENTIFIER . EQ matrix SEMICOLON

    LPAREN          shift and go to state 112
    EQ              shift and go to state 113


state 65

    (34) if_statement -> IF LPAREN condition . RPAREN LBRACE statement_list RBRACE elif_clause else_clause

    RPAREN          shift and go to state 114


state 66

    (94) condition -> comparison_expression .

    RPAREN          reduce using rule 94 (condition -> comparison_expression .)
    SEMICOLON       reduce using rule 94 (condition -> comparison_expression .)


state 67

    (95) condition -> bool_expression .
    (89) comparison_expression -> bool_expression . EQ bool_expression
    (90) comparison_expression -> bool_expression . NE bool_expression
    (91) comparison_expression -> bool_expression . EE bool_expression
    (78) bool_expression -> bool_expression . AND bool_expression
    (79) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 95 (condition -> bool_expression .)
    SEMICOLON       reduce using rule 95 (condition -> bool_expression .)
    EQ              shift and go to state 115
    NE              shift and go to state 116
    EE              shift and go to state 117
    AND             shift and go to state 86
    OR              shift and go to state 87


state 68

    (82) comparison_expression -> numvar_expression . EQ numvar_expression
    (83) comparison_expression -> numvar_expression . NE numvar_expression
    (84) comparison_expression -> numvar_expression . EE numvar_expression
    (85) comparison_expression -> numvar_expression . LT numvar_expression
    (86) comparison_expression -> numvar_expression . LTE numvar_expression
    (87) comparison_expression -> numvar_expression . GT numvar_expression
    (88) comparison_expression -> numvar_expression . GTE numvar_expression
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    EQ              shift and go to state 118
    NE              shift and go to state 119
    EE              shift and go to state 120
    LT              shift and go to state 121
    LTE             shift and go to state 122
    GT              shift and go to state 123
    GTE             shift and go to state 124
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 69

    (77) numvar -> IDENTIFIER .

    EQ              reduce using rule 77 (numvar -> IDENTIFIER .)
    NE              reduce using rule 77 (numvar -> IDENTIFIER .)
    EE              reduce using rule 77 (numvar -> IDENTIFIER .)
    LT              reduce using rule 77 (numvar -> IDENTIFIER .)
    LTE             reduce using rule 77 (numvar -> IDENTIFIER .)
    GT              reduce using rule 77 (numvar -> IDENTIFIER .)
    GTE             reduce using rule 77 (numvar -> IDENTIFIER .)
    PLUS            reduce using rule 77 (numvar -> IDENTIFIER .)
    MINUS           reduce using rule 77 (numvar -> IDENTIFIER .)
    MUL             reduce using rule 77 (numvar -> IDENTIFIER .)
    DIV             reduce using rule 77 (numvar -> IDENTIFIER .)
    POW             reduce using rule 77 (numvar -> IDENTIFIER .)
    RBRACKET        reduce using rule 77 (numvar -> IDENTIFIER .)
    COMMA           reduce using rule 77 (numvar -> IDENTIFIER .)
    SEMICOLON       reduce using rule 77 (numvar -> IDENTIFIER .)
    RPAREN          reduce using rule 77 (numvar -> IDENTIFIER .)


state 70

    (39) while_statement -> WHILE LPAREN condition . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 125


state 71

    (40) for_statement -> FOR LPAREN for_initialization . condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (94) condition -> . comparison_expression
    (95) condition -> . bool_expression
    (82) comparison_expression -> . numvar_expression EQ numvar_expression
    (83) comparison_expression -> . numvar_expression NE numvar_expression
    (84) comparison_expression -> . numvar_expression EE numvar_expression
    (85) comparison_expression -> . numvar_expression LT numvar_expression
    (86) comparison_expression -> . numvar_expression LTE numvar_expression
    (87) comparison_expression -> . numvar_expression GT numvar_expression
    (88) comparison_expression -> . numvar_expression GTE numvar_expression
    (89) comparison_expression -> . bool_expression EQ bool_expression
    (90) comparison_expression -> . bool_expression NE bool_expression
    (91) comparison_expression -> . bool_expression EE bool_expression
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    condition                      shift and go to state 126
    comparison_expression          shift and go to state 66
    bool_expression                shift and go to state 67
    numvar_expression              shift and go to state 68
    numvar                         shift and go to state 47

state 72

    (41) for_initialization -> var_declaration .

    NOT             reduce using rule 41 (for_initialization -> var_declaration .)
    BOOL            reduce using rule 41 (for_initialization -> var_declaration .)
    NUMBER          reduce using rule 41 (for_initialization -> var_declaration .)
    IDENTIFIER      reduce using rule 41 (for_initialization -> var_declaration .)


state 73

    (44) print_statement -> PRINT LPAREN numvar_expression . RPAREN SEMICOLON
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          shift and go to state 127
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 74

    (45) print_statement -> PRINT LPAREN bool_expression . RPAREN SEMICOLON
    (78) bool_expression -> bool_expression . AND bool_expression
    (79) bool_expression -> bool_expression . OR bool_expression

    RPAREN          shift and go to state 128
    AND             shift and go to state 86
    OR              shift and go to state 87


state 75

    (46) print_statement -> PRINT LPAREN string_expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 129


state 76

    (47) print_statement -> PRINT LPAREN identifier_expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 130


state 77

    (48) model_declaration -> MODEL IDENTIFIER EQ . LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON

    LPAREN          shift and go to state 131


state 78

    (60) function_declaration -> FUN IDENTIFIER LPAREN . parameter_list RPAREN LBRACE statement_list RBRACE
    (61) parameter_list -> . parameter_list COMMA IDENTIFIER
    (62) parameter_list -> . IDENTIFIER
    (63) parameter_list -> . empty
    (108) empty -> .

    IDENTIFIER      shift and go to state 132
    RPAREN          reduce using rule 108 (empty -> .)
    COMMA           reduce using rule 108 (empty -> .)

    parameter_list                 shift and go to state 133
    empty                          shift and go to state 134

state 79

    (64) return_statement -> RETURN numvar_expression SEMICOLON .

    VAR             reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    IF              reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    WHILE           reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    FOR             reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    PRINT           reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    MODEL           reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    FUN             reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    RETURN          reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    CONTINUE        reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    BREAK           reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    COMMENT         reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    $end            reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)
    RBRACE          reduce using rule 64 (return_statement -> RETURN numvar_expression SEMICOLON .)


state 80

    (70) numvar_expression -> numvar_expression PLUS . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 135
    numvar                         shift and go to state 47

state 81

    (71) numvar_expression -> numvar_expression MINUS . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 136
    numvar                         shift and go to state 47

state 82

    (72) numvar_expression -> numvar_expression MUL . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 137
    numvar                         shift and go to state 47

state 83

    (73) numvar_expression -> numvar_expression DIV . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 138
    numvar                         shift and go to state 47

state 84

    (74) numvar_expression -> numvar_expression POW . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 139
    numvar                         shift and go to state 47

state 85

    (65) return_statement -> RETURN bool_expression SEMICOLON .

    VAR             reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    IF              reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    WHILE           reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    FOR             reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    PRINT           reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    MODEL           reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    FUN             reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    RETURN          reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    CONTINUE        reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    BREAK           reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    COMMENT         reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    $end            reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)
    RBRACE          reduce using rule 65 (return_statement -> RETURN bool_expression SEMICOLON .)


state 86

    (78) bool_expression -> bool_expression AND . bool_expression
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL

    NOT             shift and go to state 48
    BOOL            shift and go to state 49

    bool_expression                shift and go to state 140

state 87

    (79) bool_expression -> bool_expression OR . bool_expression
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL

    NOT             shift and go to state 48
    BOOL            shift and go to state 49

    bool_expression                shift and go to state 141

state 88

    (66) return_statement -> RETURN string_expression SEMICOLON .

    VAR             reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    IF              reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    WHILE           reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    FOR             reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    PRINT           reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    MODEL           reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    FUN             reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    RETURN          reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    CONTINUE        reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    BREAK           reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    COMMENT         reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    $end            reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)
    RBRACE          reduce using rule 66 (return_statement -> RETURN string_expression SEMICOLON .)


state 89

    (67) return_statement -> RETURN identifier_expression SEMICOLON .

    VAR             reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    IF              reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    WHILE           reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    FOR             reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    PRINT           reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    MODEL           reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    FUN             reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    RETURN          reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    CONTINUE        reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    BREAK           reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    COMMENT         reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    $end            reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)
    RBRACE          reduce using rule 67 (return_statement -> RETURN identifier_expression SEMICOLON .)


state 90

    (80) bool_expression -> NOT bool_expression .
    (78) bool_expression -> bool_expression . AND bool_expression
    (79) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       reduce using rule 80 (bool_expression -> NOT bool_expression .)
    AND             reduce using rule 80 (bool_expression -> NOT bool_expression .)
    OR              reduce using rule 80 (bool_expression -> NOT bool_expression .)
    EQ              reduce using rule 80 (bool_expression -> NOT bool_expression .)
    NE              reduce using rule 80 (bool_expression -> NOT bool_expression .)
    EE              reduce using rule 80 (bool_expression -> NOT bool_expression .)
    RPAREN          reduce using rule 80 (bool_expression -> NOT bool_expression .)
    COMMA           reduce using rule 80 (bool_expression -> NOT bool_expression .)

  ! AND             [ shift and go to state 86 ]
  ! OR              [ shift and go to state 87 ]


state 91

    (20) var_declaration -> VAR IDENTIFIER EQ numvar_expression . SEMICOLON
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       shift and go to state 142
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 92

    (21) var_declaration -> VAR IDENTIFIER EQ bool_expression . SEMICOLON
    (78) bool_expression -> bool_expression . AND bool_expression
    (79) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       shift and go to state 143
    AND             shift and go to state 86
    OR              shift and go to state 87


state 93

    (22) var_declaration -> VAR IDENTIFIER EQ string_expression . SEMICOLON

    SEMICOLON       shift and go to state 144


state 94

    (23) var_declaration -> VAR IDENTIFIER EQ identifier_expression . SEMICOLON

    SEMICOLON       shift and go to state 145


state 95

    (24) var_declaration -> VAR IDENTIFIER EQ array . SEMICOLON

    SEMICOLON       shift and go to state 146


state 96

    (25) var_declaration -> VAR IDENTIFIER EQ matrix . SEMICOLON
    (101) matrixs -> matrix .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 147

  ! SEMICOLON       [ reduce using rule 101 (matrixs -> matrix .) ]


state 97

    (26) var_declaration -> VAR IDENTIFIER EQ matrixs . SEMICOLON

    SEMICOLON       shift and go to state 148


state 98

    (96) array -> LBRACKET . elements RBRACKET
    (103) matrix -> LBRACKET . arrays RBRACKET
    (100) matrixs -> LBRACKET . matrixs COMMA matrix RBRACKET
    (97) elements -> . elements COMMA numvar_expression
    (98) elements -> . numvar_expression
    (99) elements -> . empty
    (104) arrays -> . arrays COMMA array
    (105) arrays -> . array
    (106) arrays -> . empty
    (100) matrixs -> . LBRACKET matrixs COMMA matrix RBRACKET
    (101) matrixs -> . matrix
    (102) matrixs -> . empty
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (108) empty -> .
    (96) array -> . LBRACKET elements RBRACKET
    (103) matrix -> . LBRACKET arrays RBRACKET
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    LBRACKET        shift and go to state 149
    RBRACKET        reduce using rule 108 (empty -> .)
    COMMA           reduce using rule 108 (empty -> .)
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    elements                       shift and go to state 107
    arrays                         shift and go to state 108
    matrixs                        shift and go to state 150
    matrix                         shift and go to state 151
    numvar_expression              shift and go to state 109
    empty                          shift and go to state 152
    array                          shift and go to state 111
    numvar                         shift and go to state 47

state 99

    (102) matrixs -> empty .

    SEMICOLON       reduce using rule 102 (matrixs -> empty .)
    RPAREN          reduce using rule 102 (matrixs -> empty .)


state 100

    (27) assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .

    VAR             reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    IF              reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    WHILE           reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    FOR             reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    PRINT           reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    MODEL           reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    FUN             reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    RETURN          reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    CONTINUE        reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    BREAK           reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    COMMENT         reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    $end            reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    RBRACE          reduce using rule 27 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)


state 101

    (28) assignment -> IDENTIFIER EQ bool_expression SEMICOLON .

    VAR             reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    IF              reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    WHILE           reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    FOR             reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    PRINT           reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    MODEL           reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    FUN             reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    RETURN          reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    CONTINUE        reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    BREAK           reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    COMMENT         reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    $end            reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    RBRACE          reduce using rule 28 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)


state 102

    (29) assignment -> IDENTIFIER EQ string_expression SEMICOLON .

    VAR             reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    IF              reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    WHILE           reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    FOR             reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    PRINT           reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    MODEL           reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    FUN             reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    RETURN          reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    CONTINUE        reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    BREAK           reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    COMMENT         reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    $end            reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    RBRACE          reduce using rule 29 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)


state 103

    (30) assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .

    VAR             reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    IF              reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    WHILE           reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    FOR             reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    PRINT           reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    MODEL           reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    FUN             reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    RETURN          reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    CONTINUE        reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    BREAK           reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    COMMENT         reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    $end            reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    RBRACE          reduce using rule 30 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)


state 104

    (31) assignment -> IDENTIFIER EQ array SEMICOLON .

    VAR             reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    IDENTIFIER      reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    IF              reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    WHILE           reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    FOR             reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    PRINT           reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    MODEL           reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    FUN             reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    RETURN          reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    CONTINUE        reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    BREAK           reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    COMMENT         reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    $end            reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    RBRACE          reduce using rule 31 (assignment -> IDENTIFIER EQ array SEMICOLON .)


state 105

    (32) assignment -> IDENTIFIER EQ matrix SEMICOLON .

    VAR             reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    IDENTIFIER      reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    IF              reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    WHILE           reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    FOR             reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    PRINT           reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    MODEL           reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    FUN             reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    RETURN          reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    CONTINUE        reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    BREAK           reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    COMMENT         reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    $end            reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    RBRACE          reduce using rule 32 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)


state 106

    (96) array -> LBRACKET . elements RBRACKET
    (97) elements -> . elements COMMA numvar_expression
    (98) elements -> . numvar_expression
    (99) elements -> . empty
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (108) empty -> .
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    RBRACKET        reduce using rule 108 (empty -> .)
    COMMA           reduce using rule 108 (empty -> .)
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    elements                       shift and go to state 107
    numvar_expression              shift and go to state 109
    empty                          shift and go to state 153
    numvar                         shift and go to state 47

state 107

    (96) array -> LBRACKET elements . RBRACKET
    (97) elements -> elements . COMMA numvar_expression

    RBRACKET        shift and go to state 154
    COMMA           shift and go to state 155


state 108

    (103) matrix -> LBRACKET arrays . RBRACKET
    (104) arrays -> arrays . COMMA array

    RBRACKET        shift and go to state 156
    COMMA           shift and go to state 157


state 109

    (98) elements -> numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    RBRACKET        reduce using rule 98 (elements -> numvar_expression .)
    COMMA           reduce using rule 98 (elements -> numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 110

    (99) elements -> empty .
    (106) arrays -> empty .

  ! reduce/reduce conflict for RBRACKET resolved using rule 99 (elements -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 99 (elements -> empty .)
    RBRACKET        reduce using rule 99 (elements -> empty .)
    COMMA           reduce using rule 99 (elements -> empty .)

  ! RBRACKET        [ reduce using rule 106 (arrays -> empty .) ]
  ! COMMA           [ reduce using rule 106 (arrays -> empty .) ]


state 111

    (105) arrays -> array .

    RBRACKET        reduce using rule 105 (arrays -> array .)
    COMMA           reduce using rule 105 (arrays -> array .)


state 112

    (49) model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN . RPAREN SEMICOLON
    (50) model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN . param_list RPAREN SEMICOLON
    (51) param_list -> . param_list COMMA param
    (52) param_list -> . param
    (53) param_list -> . empty
    (54) param -> . numvar_expression
    (55) param -> . bool_expression
    (56) param -> . string_expression
    (57) param -> . identifier_expression
    (108) empty -> .
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL
    (92) string_expression -> . STRING
    (93) identifier_expression -> . IDENTIFIER
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 158
    COMMA           reduce using rule 108 (empty -> .)
    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    STRING          shift and go to state 50
    IDENTIFIER      shift and go to state 51
    NUMBER          shift and go to state 52

  ! RPAREN          [ reduce using rule 108 (empty -> .) ]

    param_list                     shift and go to state 159
    param                          shift and go to state 160
    empty                          shift and go to state 161
    numvar_expression              shift and go to state 162
    bool_expression                shift and go to state 163
    string_expression              shift and go to state 164
    identifier_expression          shift and go to state 165
    numvar                         shift and go to state 47

state 113

    (58) model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ . array SEMICOLON
    (59) model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ . matrix SEMICOLON
    (96) array -> . LBRACKET elements RBRACKET
    (103) matrix -> . LBRACKET arrays RBRACKET

    LBRACKET        shift and go to state 63

    array                          shift and go to state 166
    matrix                         shift and go to state 167

state 114

    (34) if_statement -> IF LPAREN condition RPAREN . LBRACE statement_list RBRACE elif_clause else_clause

    LBRACE          shift and go to state 168


state 115

    (89) comparison_expression -> bool_expression EQ . bool_expression
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL

    NOT             shift and go to state 48
    BOOL            shift and go to state 49

    bool_expression                shift and go to state 169

state 116

    (90) comparison_expression -> bool_expression NE . bool_expression
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL

    NOT             shift and go to state 48
    BOOL            shift and go to state 49

    bool_expression                shift and go to state 170

state 117

    (91) comparison_expression -> bool_expression EE . bool_expression
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL

    NOT             shift and go to state 48
    BOOL            shift and go to state 49

    bool_expression                shift and go to state 171

state 118

    (82) comparison_expression -> numvar_expression EQ . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 172
    numvar                         shift and go to state 47

state 119

    (83) comparison_expression -> numvar_expression NE . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 173
    numvar                         shift and go to state 47

state 120

    (84) comparison_expression -> numvar_expression EE . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 174
    numvar                         shift and go to state 47

state 121

    (85) comparison_expression -> numvar_expression LT . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 175
    numvar                         shift and go to state 47

state 122

    (86) comparison_expression -> numvar_expression LTE . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 176
    numvar                         shift and go to state 47

state 123

    (87) comparison_expression -> numvar_expression GT . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 177
    numvar                         shift and go to state 47

state 124

    (88) comparison_expression -> numvar_expression GTE . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 178
    numvar                         shift and go to state 47

state 125

    (39) while_statement -> WHILE LPAREN condition RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 179


state 126

    (40) for_statement -> FOR LPAREN for_initialization condition . SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    SEMICOLON       shift and go to state 180


state 127

    (44) print_statement -> PRINT LPAREN numvar_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 181


state 128

    (45) print_statement -> PRINT LPAREN bool_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 182


state 129

    (46) print_statement -> PRINT LPAREN string_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 183


state 130

    (47) print_statement -> PRINT LPAREN identifier_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 184


state 131

    (48) model_declaration -> MODEL IDENTIFIER EQ LPAREN . NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON

    NUMBER          shift and go to state 185


state 132

    (62) parameter_list -> IDENTIFIER .

    RPAREN          reduce using rule 62 (parameter_list -> IDENTIFIER .)
    COMMA           reduce using rule 62 (parameter_list -> IDENTIFIER .)


state 133

    (60) function_declaration -> FUN IDENTIFIER LPAREN parameter_list . RPAREN LBRACE statement_list RBRACE
    (61) parameter_list -> parameter_list . COMMA IDENTIFIER

    RPAREN          shift and go to state 186
    COMMA           shift and go to state 187


state 134

    (63) parameter_list -> empty .

    RPAREN          reduce using rule 63 (parameter_list -> empty .)
    COMMA           reduce using rule 63 (parameter_list -> empty .)


state 135

    (70) numvar_expression -> numvar_expression PLUS numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    PLUS            reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    MINUS           reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    EQ              reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    NE              reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    EE              reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    LT              reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    LTE             reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    GT              reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    GTE             reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    RPAREN          reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    RBRACKET        reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    COMMA           reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84

  ! MUL             [ reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .) ]
  ! DIV             [ reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .) ]
  ! POW             [ reduce using rule 70 (numvar_expression -> numvar_expression PLUS numvar_expression .) ]
  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]


state 136

    (71) numvar_expression -> numvar_expression MINUS numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    PLUS            reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    MINUS           reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    EQ              reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    NE              reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    EE              reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    LT              reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    LTE             reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    GT              reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    GTE             reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    RPAREN          reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    RBRACKET        reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    COMMA           reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84

  ! MUL             [ reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .) ]
  ! DIV             [ reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .) ]
  ! POW             [ reduce using rule 71 (numvar_expression -> numvar_expression MINUS numvar_expression .) ]
  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]


state 137

    (72) numvar_expression -> numvar_expression MUL numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    PLUS            reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    MINUS           reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    MUL             reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    DIV             reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    EQ              reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    NE              reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    EE              reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    LT              reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    LTE             reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    GT              reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    GTE             reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    RPAREN          reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    RBRACKET        reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    COMMA           reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .)
    POW             shift and go to state 84

  ! POW             [ reduce using rule 72 (numvar_expression -> numvar_expression MUL numvar_expression .) ]
  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]
  ! MUL             [ shift and go to state 82 ]
  ! DIV             [ shift and go to state 83 ]


state 138

    (73) numvar_expression -> numvar_expression DIV numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    PLUS            reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    MINUS           reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    MUL             reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    DIV             reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    EQ              reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    NE              reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    EE              reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    LT              reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    LTE             reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    GT              reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    GTE             reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    RPAREN          reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    RBRACKET        reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    COMMA           reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .)
    POW             shift and go to state 84

  ! POW             [ reduce using rule 73 (numvar_expression -> numvar_expression DIV numvar_expression .) ]
  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]
  ! MUL             [ shift and go to state 82 ]
  ! DIV             [ shift and go to state 83 ]


state 139

    (74) numvar_expression -> numvar_expression POW numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    PLUS            reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    MINUS           reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    MUL             reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    DIV             reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    EQ              reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    NE              reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    EE              reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    LT              reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    LTE             reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    GT              reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    GTE             reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    RPAREN          reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    RBRACKET        reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    COMMA           reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .)
    POW             shift and go to state 84

  ! POW             [ reduce using rule 74 (numvar_expression -> numvar_expression POW numvar_expression .) ]
  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]
  ! MUL             [ shift and go to state 82 ]
  ! DIV             [ shift and go to state 83 ]


state 140

    (78) bool_expression -> bool_expression AND bool_expression .
    (78) bool_expression -> bool_expression . AND bool_expression
    (79) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       reduce using rule 78 (bool_expression -> bool_expression AND bool_expression .)
    AND             reduce using rule 78 (bool_expression -> bool_expression AND bool_expression .)
    OR              reduce using rule 78 (bool_expression -> bool_expression AND bool_expression .)
    EQ              reduce using rule 78 (bool_expression -> bool_expression AND bool_expression .)
    NE              reduce using rule 78 (bool_expression -> bool_expression AND bool_expression .)
    EE              reduce using rule 78 (bool_expression -> bool_expression AND bool_expression .)
    RPAREN          reduce using rule 78 (bool_expression -> bool_expression AND bool_expression .)
    COMMA           reduce using rule 78 (bool_expression -> bool_expression AND bool_expression .)

  ! AND             [ shift and go to state 86 ]
  ! OR              [ shift and go to state 87 ]


state 141

    (79) bool_expression -> bool_expression OR bool_expression .
    (78) bool_expression -> bool_expression . AND bool_expression
    (79) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       reduce using rule 79 (bool_expression -> bool_expression OR bool_expression .)
    OR              reduce using rule 79 (bool_expression -> bool_expression OR bool_expression .)
    EQ              reduce using rule 79 (bool_expression -> bool_expression OR bool_expression .)
    NE              reduce using rule 79 (bool_expression -> bool_expression OR bool_expression .)
    EE              reduce using rule 79 (bool_expression -> bool_expression OR bool_expression .)
    RPAREN          reduce using rule 79 (bool_expression -> bool_expression OR bool_expression .)
    COMMA           reduce using rule 79 (bool_expression -> bool_expression OR bool_expression .)
    AND             shift and go to state 86

  ! AND             [ reduce using rule 79 (bool_expression -> bool_expression OR bool_expression .) ]
  ! OR              [ shift and go to state 87 ]


state 142

    (20) var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .

    VAR             reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    IF              reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    WHILE           reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    FOR             reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    PRINT           reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    MODEL           reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    FUN             reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    RETURN          reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    CONTINUE        reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    BREAK           reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    COMMENT         reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    $end            reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    NOT             reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    BOOL            reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    NUMBER          reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    RBRACE          reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)


state 143

    (21) var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .

    VAR             reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    IF              reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    WHILE           reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    FOR             reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    PRINT           reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    MODEL           reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    FUN             reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    RETURN          reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    CONTINUE        reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    BREAK           reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    COMMENT         reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    $end            reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    NOT             reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    BOOL            reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    NUMBER          reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    RBRACE          reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)


state 144

    (22) var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .

    VAR             reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    IF              reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    WHILE           reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    FOR             reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    PRINT           reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    MODEL           reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    FUN             reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    RETURN          reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    CONTINUE        reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    BREAK           reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    COMMENT         reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    $end            reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    NOT             reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    BOOL            reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    NUMBER          reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    RBRACE          reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)


state 145

    (23) var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .

    VAR             reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    IF              reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    WHILE           reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    FOR             reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    PRINT           reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    MODEL           reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    FUN             reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    RETURN          reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    CONTINUE        reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    BREAK           reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    COMMENT         reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    $end            reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    NOT             reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    BOOL            reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    NUMBER          reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    RBRACE          reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)


state 146

    (24) var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .

    VAR             reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    IDENTIFIER      reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    IF              reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    WHILE           reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    FOR             reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    PRINT           reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    MODEL           reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    FUN             reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    RETURN          reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    CONTINUE        reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    BREAK           reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    COMMENT         reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    $end            reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    NOT             reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    BOOL            reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    NUMBER          reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    RBRACE          reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)


state 147

    (25) var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .

    VAR             reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    IDENTIFIER      reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    IF              reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    WHILE           reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    FOR             reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    PRINT           reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    MODEL           reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    FUN             reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    RETURN          reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    CONTINUE        reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    BREAK           reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    COMMENT         reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    $end            reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    NOT             reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    BOOL            reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    NUMBER          reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    RBRACE          reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)


state 148

    (26) var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .

    VAR             reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    IDENTIFIER      reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    IF              reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    WHILE           reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    FOR             reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    PRINT           reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    MODEL           reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    FUN             reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    RETURN          reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    CONTINUE        reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    BREAK           reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    COMMENT         reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    $end            reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    NOT             reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    BOOL            reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    NUMBER          reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)
    RBRACE          reduce using rule 26 (var_declaration -> VAR IDENTIFIER EQ matrixs SEMICOLON .)


state 149

    (100) matrixs -> LBRACKET . matrixs COMMA matrix RBRACKET
    (96) array -> LBRACKET . elements RBRACKET
    (103) matrix -> LBRACKET . arrays RBRACKET
    (100) matrixs -> . LBRACKET matrixs COMMA matrix RBRACKET
    (101) matrixs -> . matrix
    (102) matrixs -> . empty
    (97) elements -> . elements COMMA numvar_expression
    (98) elements -> . numvar_expression
    (99) elements -> . empty
    (104) arrays -> . arrays COMMA array
    (105) arrays -> . array
    (106) arrays -> . empty
    (103) matrix -> . LBRACKET arrays RBRACKET
    (108) empty -> .
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (96) array -> . LBRACKET elements RBRACKET
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    LBRACKET        shift and go to state 188
    COMMA           reduce using rule 108 (empty -> .)
    RBRACKET        reduce using rule 108 (empty -> .)
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    matrixs                        shift and go to state 150
    matrix                         shift and go to state 151
    elements                       shift and go to state 107
    arrays                         shift and go to state 108
    empty                          shift and go to state 189
    numvar_expression              shift and go to state 109
    array                          shift and go to state 111
    numvar                         shift and go to state 47

state 150

    (100) matrixs -> LBRACKET matrixs . COMMA matrix RBRACKET

    COMMA           shift and go to state 190


state 151

    (101) matrixs -> matrix .

    COMMA           reduce using rule 101 (matrixs -> matrix .)
    RPAREN          reduce using rule 101 (matrixs -> matrix .)


state 152

    (99) elements -> empty .
    (106) arrays -> empty .
    (102) matrixs -> empty .

  ! reduce/reduce conflict for RBRACKET resolved using rule 99 (elements -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 99 (elements -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 99 (elements -> empty .)
    RBRACKET        reduce using rule 99 (elements -> empty .)
    COMMA           reduce using rule 99 (elements -> empty .)

  ! RBRACKET        [ reduce using rule 106 (arrays -> empty .) ]
  ! COMMA           [ reduce using rule 106 (arrays -> empty .) ]
  ! COMMA           [ reduce using rule 102 (matrixs -> empty .) ]


state 153

    (99) elements -> empty .

    RBRACKET        reduce using rule 99 (elements -> empty .)
    COMMA           reduce using rule 99 (elements -> empty .)


state 154

    (96) array -> LBRACKET elements RBRACKET .

    SEMICOLON       reduce using rule 96 (array -> LBRACKET elements RBRACKET .)
    RBRACKET        reduce using rule 96 (array -> LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 96 (array -> LBRACKET elements RBRACKET .)


state 155

    (97) elements -> elements COMMA . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 191
    numvar                         shift and go to state 47

state 156

    (103) matrix -> LBRACKET arrays RBRACKET .

    SEMICOLON       reduce using rule 103 (matrix -> LBRACKET arrays RBRACKET .)
    COMMA           reduce using rule 103 (matrix -> LBRACKET arrays RBRACKET .)
    RBRACKET        reduce using rule 103 (matrix -> LBRACKET arrays RBRACKET .)
    RPAREN          reduce using rule 103 (matrix -> LBRACKET arrays RBRACKET .)


state 157

    (104) arrays -> arrays COMMA . array
    (96) array -> . LBRACKET elements RBRACKET

    LBRACKET        shift and go to state 106

    array                          shift and go to state 192

state 158

    (49) model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 193


state 159

    (50) model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list . RPAREN SEMICOLON
    (51) param_list -> param_list . COMMA param

    RPAREN          shift and go to state 194
    COMMA           shift and go to state 195


state 160

    (52) param_list -> param .

    RPAREN          reduce using rule 52 (param_list -> param .)
    COMMA           reduce using rule 52 (param_list -> param .)


state 161

    (53) param_list -> empty .

    RPAREN          reduce using rule 53 (param_list -> empty .)
    COMMA           reduce using rule 53 (param_list -> empty .)


state 162

    (54) param -> numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 54 (param -> numvar_expression .)
    COMMA           reduce using rule 54 (param -> numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 163

    (55) param -> bool_expression .
    (78) bool_expression -> bool_expression . AND bool_expression
    (79) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 55 (param -> bool_expression .)
    COMMA           reduce using rule 55 (param -> bool_expression .)
    AND             shift and go to state 86
    OR              shift and go to state 87


state 164

    (56) param -> string_expression .

    RPAREN          reduce using rule 56 (param -> string_expression .)
    COMMA           reduce using rule 56 (param -> string_expression .)


state 165

    (57) param -> identifier_expression .

    RPAREN          reduce using rule 57 (param -> identifier_expression .)
    COMMA           reduce using rule 57 (param -> identifier_expression .)


state 166

    (58) model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array . SEMICOLON

    SEMICOLON       shift and go to state 196


state 167

    (59) model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix . SEMICOLON

    SEMICOLON       shift and go to state 197


state 168

    (34) if_statement -> IF LPAREN condition RPAREN LBRACE . statement_list RBRACE elif_clause else_clause
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement_list                 shift and go to state 198
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 169

    (89) comparison_expression -> bool_expression EQ bool_expression .
    (78) bool_expression -> bool_expression . AND bool_expression
    (79) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 89 (comparison_expression -> bool_expression EQ bool_expression .)
    SEMICOLON       reduce using rule 89 (comparison_expression -> bool_expression EQ bool_expression .)
    AND             shift and go to state 86
    OR              shift and go to state 87


state 170

    (90) comparison_expression -> bool_expression NE bool_expression .
    (78) bool_expression -> bool_expression . AND bool_expression
    (79) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 90 (comparison_expression -> bool_expression NE bool_expression .)
    SEMICOLON       reduce using rule 90 (comparison_expression -> bool_expression NE bool_expression .)
    AND             shift and go to state 86
    OR              shift and go to state 87


state 171

    (91) comparison_expression -> bool_expression EE bool_expression .
    (78) bool_expression -> bool_expression . AND bool_expression
    (79) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 91 (comparison_expression -> bool_expression EE bool_expression .)
    SEMICOLON       reduce using rule 91 (comparison_expression -> bool_expression EE bool_expression .)
    AND             shift and go to state 86
    OR              shift and go to state 87


state 172

    (82) comparison_expression -> numvar_expression EQ numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 82 (comparison_expression -> numvar_expression EQ numvar_expression .)
    SEMICOLON       reduce using rule 82 (comparison_expression -> numvar_expression EQ numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 173

    (83) comparison_expression -> numvar_expression NE numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 83 (comparison_expression -> numvar_expression NE numvar_expression .)
    SEMICOLON       reduce using rule 83 (comparison_expression -> numvar_expression NE numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 174

    (84) comparison_expression -> numvar_expression EE numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 84 (comparison_expression -> numvar_expression EE numvar_expression .)
    SEMICOLON       reduce using rule 84 (comparison_expression -> numvar_expression EE numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 175

    (85) comparison_expression -> numvar_expression LT numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 85 (comparison_expression -> numvar_expression LT numvar_expression .)
    SEMICOLON       reduce using rule 85 (comparison_expression -> numvar_expression LT numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 176

    (86) comparison_expression -> numvar_expression LTE numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 86 (comparison_expression -> numvar_expression LTE numvar_expression .)
    SEMICOLON       reduce using rule 86 (comparison_expression -> numvar_expression LTE numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 177

    (87) comparison_expression -> numvar_expression GT numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 87 (comparison_expression -> numvar_expression GT numvar_expression .)
    SEMICOLON       reduce using rule 87 (comparison_expression -> numvar_expression GT numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 178

    (88) comparison_expression -> numvar_expression GTE numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 88 (comparison_expression -> numvar_expression GTE numvar_expression .)
    SEMICOLON       reduce using rule 88 (comparison_expression -> numvar_expression GTE numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 179

    (39) while_statement -> WHILE LPAREN condition RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement_list                 shift and go to state 199
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 180

    (40) for_statement -> FOR LPAREN for_initialization condition SEMICOLON . for_update RPAREN LBRACE statement_list RBRACE
    (42) for_update -> . IDENTIFIER EQ numvar_expression
    (43) for_update -> . empty
    (108) empty -> .

    IDENTIFIER      shift and go to state 201
    RPAREN          reduce using rule 108 (empty -> .)

    for_update                     shift and go to state 200
    empty                          shift and go to state 202

state 181

    (44) print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .

    VAR             reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    IF              reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    FOR             reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    MODEL           reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    FUN             reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    $end            reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 44 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)


state 182

    (45) print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .

    VAR             reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    IF              reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    FOR             reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    MODEL           reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    FUN             reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    $end            reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 45 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)


state 183

    (46) print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .

    VAR             reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    IF              reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    FOR             reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    MODEL           reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    FUN             reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    $end            reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 46 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)


state 184

    (47) print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .

    VAR             reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    IF              reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    FOR             reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    MODEL           reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    FUN             reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    $end            reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 47 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)


state 185

    (48) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER . COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON

    COMMA           shift and go to state 203


state 186

    (60) function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 204


state 187

    (61) parameter_list -> parameter_list COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 205


state 188

    (100) matrixs -> LBRACKET . matrixs COMMA matrix RBRACKET
    (103) matrix -> LBRACKET . arrays RBRACKET
    (96) array -> LBRACKET . elements RBRACKET
    (100) matrixs -> . LBRACKET matrixs COMMA matrix RBRACKET
    (101) matrixs -> . matrix
    (102) matrixs -> . empty
    (104) arrays -> . arrays COMMA array
    (105) arrays -> . array
    (106) arrays -> . empty
    (97) elements -> . elements COMMA numvar_expression
    (98) elements -> . numvar_expression
    (99) elements -> . empty
    (103) matrix -> . LBRACKET arrays RBRACKET
    (108) empty -> .
    (96) array -> . LBRACKET elements RBRACKET
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    LBRACKET        shift and go to state 188
    COMMA           reduce using rule 108 (empty -> .)
    RBRACKET        reduce using rule 108 (empty -> .)
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    matrixs                        shift and go to state 150
    matrix                         shift and go to state 151
    arrays                         shift and go to state 108
    elements                       shift and go to state 107
    empty                          shift and go to state 206
    array                          shift and go to state 111
    numvar_expression              shift and go to state 109
    numvar                         shift and go to state 47

state 189

    (102) matrixs -> empty .
    (99) elements -> empty .
    (106) arrays -> empty .

  ! reduce/reduce conflict for COMMA resolved using rule 99 (elements -> empty .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 99 (elements -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 99 (elements -> empty .)
    RBRACKET        reduce using rule 99 (elements -> empty .)
    COMMA           reduce using rule 99 (elements -> empty .)

  ! COMMA           [ reduce using rule 102 (matrixs -> empty .) ]
  ! RBRACKET        [ reduce using rule 106 (arrays -> empty .) ]
  ! COMMA           [ reduce using rule 106 (arrays -> empty .) ]


state 190

    (100) matrixs -> LBRACKET matrixs COMMA . matrix RBRACKET
    (103) matrix -> . LBRACKET arrays RBRACKET

    LBRACKET        shift and go to state 207

    matrix                         shift and go to state 208

state 191

    (97) elements -> elements COMMA numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    RBRACKET        reduce using rule 97 (elements -> elements COMMA numvar_expression .)
    COMMA           reduce using rule 97 (elements -> elements COMMA numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 192

    (104) arrays -> arrays COMMA array .

    RBRACKET        reduce using rule 104 (arrays -> arrays COMMA array .)
    COMMA           reduce using rule 104 (arrays -> arrays COMMA array .)


state 193

    (49) model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .

    VAR             reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    MODEL           reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    FUN             reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    COMMENT         reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 49 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)


state 194

    (50) model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 209


state 195

    (51) param_list -> param_list COMMA . param
    (54) param -> . numvar_expression
    (55) param -> . bool_expression
    (56) param -> . string_expression
    (57) param -> . identifier_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL
    (92) string_expression -> . STRING
    (93) identifier_expression -> . IDENTIFIER
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    STRING          shift and go to state 50
    IDENTIFIER      shift and go to state 51
    NUMBER          shift and go to state 52

    param                          shift and go to state 210
    numvar_expression              shift and go to state 162
    bool_expression                shift and go to state 163
    string_expression              shift and go to state 164
    identifier_expression          shift and go to state 165
    numvar                         shift and go to state 47

state 196

    (58) model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .

    VAR             reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    IDENTIFIER      reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    IF              reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    WHILE           reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    FOR             reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    PRINT           reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    MODEL           reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    FUN             reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    RETURN          reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    CONTINUE        reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    BREAK           reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    COMMENT         reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    $end            reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    RBRACE          reduce using rule 58 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)


state 197

    (59) model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .

    VAR             reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    IDENTIFIER      reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    IF              reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    WHILE           reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    FOR             reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    PRINT           reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    MODEL           reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    FUN             reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    RETURN          reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    CONTINUE        reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    BREAK           reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    COMMENT         reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    $end            reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    RBRACE          reduce using rule 59 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)


state 198

    (34) if_statement -> IF LPAREN condition RPAREN LBRACE statement_list . RBRACE elif_clause else_clause
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    RBRACE          shift and go to state 211
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 199

    (39) while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    RBRACE          shift and go to state 212
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 200

    (40) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 213


state 201

    (42) for_update -> IDENTIFIER . EQ numvar_expression

    EQ              shift and go to state 214


state 202

    (43) for_update -> empty .

    RPAREN          reduce using rule 43 (for_update -> empty .)


state 203

    (48) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA . array COMMA array COMMA matrixs RPAREN SEMICOLON
    (96) array -> . LBRACKET elements RBRACKET

    LBRACKET        shift and go to state 106

    array                          shift and go to state 215

state 204

    (60) function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement_list                 shift and go to state 216
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 205

    (61) parameter_list -> parameter_list COMMA IDENTIFIER .

    RPAREN          reduce using rule 61 (parameter_list -> parameter_list COMMA IDENTIFIER .)
    COMMA           reduce using rule 61 (parameter_list -> parameter_list COMMA IDENTIFIER .)


state 206

    (102) matrixs -> empty .
    (106) arrays -> empty .
    (99) elements -> empty .

  ! reduce/reduce conflict for COMMA resolved using rule 102 (matrixs -> empty .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 99 (elements -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 99 (elements -> empty .)
    RBRACKET        reduce using rule 99 (elements -> empty .)
    COMMA           reduce using rule 99 (elements -> empty .)

  ! COMMA           [ reduce using rule 102 (matrixs -> empty .) ]
  ! RBRACKET        [ reduce using rule 106 (arrays -> empty .) ]
  ! COMMA           [ reduce using rule 106 (arrays -> empty .) ]


state 207

    (103) matrix -> LBRACKET . arrays RBRACKET
    (104) arrays -> . arrays COMMA array
    (105) arrays -> . array
    (106) arrays -> . empty
    (96) array -> . LBRACKET elements RBRACKET
    (108) empty -> .

    LBRACKET        shift and go to state 106
    RBRACKET        reduce using rule 108 (empty -> .)
    COMMA           reduce using rule 108 (empty -> .)

    arrays                         shift and go to state 108
    array                          shift and go to state 111
    empty                          shift and go to state 217

state 208

    (100) matrixs -> LBRACKET matrixs COMMA matrix . RBRACKET

    RBRACKET        shift and go to state 218


state 209

    (50) model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .

    VAR             reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    IF              reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    FOR             reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    PRINT           reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    MODEL           reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    FUN             reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    BREAK           reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    COMMENT         reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    $end            reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 50 (model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON .)


state 210

    (51) param_list -> param_list COMMA param .

    RPAREN          reduce using rule 51 (param_list -> param_list COMMA param .)
    COMMA           reduce using rule 51 (param_list -> param_list COMMA param .)


state 211

    (34) if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE . elif_clause else_clause
    (35) elif_clause -> . ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause
    (36) elif_clause -> . empty
    (108) empty -> .

    ELIF            shift and go to state 220
    ELSE            reduce using rule 108 (empty -> .)
    VAR             reduce using rule 108 (empty -> .)
    IDENTIFIER      reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    PRINT           reduce using rule 108 (empty -> .)
    MODEL           reduce using rule 108 (empty -> .)
    FUN             reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    CONTINUE        reduce using rule 108 (empty -> .)
    BREAK           reduce using rule 108 (empty -> .)
    COMMENT         reduce using rule 108 (empty -> .)
    $end            reduce using rule 108 (empty -> .)
    RBRACE          reduce using rule 108 (empty -> .)

    elif_clause                    shift and go to state 219
    empty                          shift and go to state 221

state 212

    (39) while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .

    VAR             reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    MODEL           reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    FUN             reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    COMMENT         reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 39 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)


state 213

    (40) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 222


state 214

    (42) for_update -> IDENTIFIER EQ . numvar_expression
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 223
    numvar                         shift and go to state 47

state 215

    (48) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array . COMMA array COMMA matrixs RPAREN SEMICOLON

    COMMA           shift and go to state 224


state 216

    (60) function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    RBRACE          shift and go to state 225
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 217

    (106) arrays -> empty .

    RBRACKET        reduce using rule 106 (arrays -> empty .)
    COMMA           reduce using rule 106 (arrays -> empty .)


state 218

    (100) matrixs -> LBRACKET matrixs COMMA matrix RBRACKET .

    SEMICOLON       reduce using rule 100 (matrixs -> LBRACKET matrixs COMMA matrix RBRACKET .)
    COMMA           reduce using rule 100 (matrixs -> LBRACKET matrixs COMMA matrix RBRACKET .)
    RPAREN          reduce using rule 100 (matrixs -> LBRACKET matrixs COMMA matrix RBRACKET .)


state 219

    (34) if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause . else_clause
    (37) else_clause -> . ELSE LBRACE statement_list RBRACE
    (38) else_clause -> . empty
    (108) empty -> .

    ELSE            shift and go to state 227
    VAR             reduce using rule 108 (empty -> .)
    IDENTIFIER      reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    PRINT           reduce using rule 108 (empty -> .)
    MODEL           reduce using rule 108 (empty -> .)
    FUN             reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    CONTINUE        reduce using rule 108 (empty -> .)
    BREAK           reduce using rule 108 (empty -> .)
    COMMENT         reduce using rule 108 (empty -> .)
    $end            reduce using rule 108 (empty -> .)
    RBRACE          reduce using rule 108 (empty -> .)

    else_clause                    shift and go to state 226
    empty                          shift and go to state 228

state 220

    (35) elif_clause -> ELIF . LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause

    LPAREN          shift and go to state 229


state 221

    (36) elif_clause -> empty .

    ELSE            reduce using rule 36 (elif_clause -> empty .)
    VAR             reduce using rule 36 (elif_clause -> empty .)
    IDENTIFIER      reduce using rule 36 (elif_clause -> empty .)
    IF              reduce using rule 36 (elif_clause -> empty .)
    WHILE           reduce using rule 36 (elif_clause -> empty .)
    FOR             reduce using rule 36 (elif_clause -> empty .)
    PRINT           reduce using rule 36 (elif_clause -> empty .)
    MODEL           reduce using rule 36 (elif_clause -> empty .)
    FUN             reduce using rule 36 (elif_clause -> empty .)
    RETURN          reduce using rule 36 (elif_clause -> empty .)
    CONTINUE        reduce using rule 36 (elif_clause -> empty .)
    BREAK           reduce using rule 36 (elif_clause -> empty .)
    COMMENT         reduce using rule 36 (elif_clause -> empty .)
    $end            reduce using rule 36 (elif_clause -> empty .)
    RBRACE          reduce using rule 36 (elif_clause -> empty .)


state 222

    (40) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement_list                 shift and go to state 230
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 223

    (42) for_update -> IDENTIFIER EQ numvar_expression .
    (70) numvar_expression -> numvar_expression . PLUS numvar_expression
    (71) numvar_expression -> numvar_expression . MINUS numvar_expression
    (72) numvar_expression -> numvar_expression . MUL numvar_expression
    (73) numvar_expression -> numvar_expression . DIV numvar_expression
    (74) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 42 (for_update -> IDENTIFIER EQ numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 224

    (48) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA . array COMMA matrixs RPAREN SEMICOLON
    (96) array -> . LBRACKET elements RBRACKET

    LBRACKET        shift and go to state 106

    array                          shift and go to state 231

state 225

    (60) function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .

    VAR             reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    MODEL           reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    FUN             reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    COMMENT         reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 60 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)


state 226

    (34) if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .

    VAR             reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    IDENTIFIER      reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    IF              reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    WHILE           reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    FOR             reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    PRINT           reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    MODEL           reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    FUN             reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    RETURN          reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    CONTINUE        reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    BREAK           reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    COMMENT         reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    $end            reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    RBRACE          reduce using rule 34 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)


state 227

    (37) else_clause -> ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 232


state 228

    (38) else_clause -> empty .

    VAR             reduce using rule 38 (else_clause -> empty .)
    IDENTIFIER      reduce using rule 38 (else_clause -> empty .)
    IF              reduce using rule 38 (else_clause -> empty .)
    WHILE           reduce using rule 38 (else_clause -> empty .)
    FOR             reduce using rule 38 (else_clause -> empty .)
    PRINT           reduce using rule 38 (else_clause -> empty .)
    MODEL           reduce using rule 38 (else_clause -> empty .)
    FUN             reduce using rule 38 (else_clause -> empty .)
    RETURN          reduce using rule 38 (else_clause -> empty .)
    CONTINUE        reduce using rule 38 (else_clause -> empty .)
    BREAK           reduce using rule 38 (else_clause -> empty .)
    COMMENT         reduce using rule 38 (else_clause -> empty .)
    $end            reduce using rule 38 (else_clause -> empty .)
    RBRACE          reduce using rule 38 (else_clause -> empty .)


state 229

    (35) elif_clause -> ELIF LPAREN . condition RPAREN LBRACE statement_list RBRACE elif_clause
    (94) condition -> . comparison_expression
    (95) condition -> . bool_expression
    (82) comparison_expression -> . numvar_expression EQ numvar_expression
    (83) comparison_expression -> . numvar_expression NE numvar_expression
    (84) comparison_expression -> . numvar_expression EE numvar_expression
    (85) comparison_expression -> . numvar_expression LT numvar_expression
    (86) comparison_expression -> . numvar_expression LTE numvar_expression
    (87) comparison_expression -> . numvar_expression GT numvar_expression
    (88) comparison_expression -> . numvar_expression GTE numvar_expression
    (89) comparison_expression -> . bool_expression EQ bool_expression
    (90) comparison_expression -> . bool_expression NE bool_expression
    (91) comparison_expression -> . bool_expression EE bool_expression
    (78) bool_expression -> . bool_expression AND bool_expression
    (79) bool_expression -> . bool_expression OR bool_expression
    (80) bool_expression -> . NOT bool_expression
    (81) bool_expression -> . BOOL
    (70) numvar_expression -> . numvar_expression PLUS numvar_expression
    (71) numvar_expression -> . numvar_expression MINUS numvar_expression
    (72) numvar_expression -> . numvar_expression MUL numvar_expression
    (73) numvar_expression -> . numvar_expression DIV numvar_expression
    (74) numvar_expression -> . numvar_expression POW numvar_expression
    (75) numvar_expression -> . numvar
    (76) numvar -> . NUMBER
    (77) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    condition                      shift and go to state 233
    comparison_expression          shift and go to state 66
    bool_expression                shift and go to state 67
    numvar_expression              shift and go to state 68
    numvar                         shift and go to state 47

state 230

    (40) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    RBRACE          shift and go to state 234
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 231

    (48) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array . COMMA matrixs RPAREN SEMICOLON

    COMMA           shift and go to state 235


state 232

    (37) else_clause -> ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement_list                 shift and go to state 236
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 233

    (35) elif_clause -> ELIF LPAREN condition . RPAREN LBRACE statement_list RBRACE elif_clause

    RPAREN          shift and go to state 237


state 234

    (40) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .

    VAR             reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    MODEL           reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    FUN             reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    COMMENT         reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 40 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)


state 235

    (48) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA . matrixs RPAREN SEMICOLON
    (100) matrixs -> . LBRACKET matrixs COMMA matrix RBRACKET
    (101) matrixs -> . matrix
    (102) matrixs -> . empty
    (103) matrix -> . LBRACKET arrays RBRACKET
    (108) empty -> .

    LBRACKET        shift and go to state 239
    RPAREN          reduce using rule 108 (empty -> .)

    matrixs                        shift and go to state 238
    matrix                         shift and go to state 151
    empty                          shift and go to state 99

state 236

    (37) else_clause -> ELSE LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    RBRACE          shift and go to state 240
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 237

    (35) elif_clause -> ELIF LPAREN condition RPAREN . LBRACE statement_list RBRACE elif_clause

    LBRACE          shift and go to state 241


state 238

    (48) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs . RPAREN SEMICOLON

    RPAREN          shift and go to state 242


state 239

    (100) matrixs -> LBRACKET . matrixs COMMA matrix RBRACKET
    (103) matrix -> LBRACKET . arrays RBRACKET
    (100) matrixs -> . LBRACKET matrixs COMMA matrix RBRACKET
    (101) matrixs -> . matrix
    (102) matrixs -> . empty
    (104) arrays -> . arrays COMMA array
    (105) arrays -> . array
    (106) arrays -> . empty
    (103) matrix -> . LBRACKET arrays RBRACKET
    (108) empty -> .
    (96) array -> . LBRACKET elements RBRACKET

    LBRACKET        shift and go to state 188
    COMMA           reduce using rule 108 (empty -> .)
    RBRACKET        reduce using rule 108 (empty -> .)

    matrixs                        shift and go to state 150
    matrix                         shift and go to state 151
    arrays                         shift and go to state 108
    empty                          shift and go to state 243
    array                          shift and go to state 111

state 240

    (37) else_clause -> ELSE LBRACE statement_list RBRACE .

    VAR             reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    MODEL           reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    FUN             reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    COMMENT         reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 37 (else_clause -> ELSE LBRACE statement_list RBRACE .)


state 241

    (35) elif_clause -> ELIF LPAREN condition RPAREN LBRACE . statement_list RBRACE elif_clause
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement_list                 shift and go to state 244
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 242

    (48) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 245


state 243

    (102) matrixs -> empty .
    (106) arrays -> empty .

  ! reduce/reduce conflict for COMMA resolved using rule 102 (matrixs -> empty .)
    COMMA           reduce using rule 102 (matrixs -> empty .)
    RBRACKET        reduce using rule 106 (arrays -> empty .)

  ! COMMA           [ reduce using rule 106 (arrays -> empty .) ]


state 244

    (35) elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list . RBRACE elif_clause
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_operation_with_params
    (13) statement -> . model_assign_r
    (14) statement -> . function_declaration
    (15) statement -> . return_statement
    (16) statement -> . continue_statement
    (17) statement -> . break_statement
    (18) statement -> . variable_query
    (19) statement -> . comment_expression
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) var_declaration -> . VAR IDENTIFIER EQ matrixs SEMICOLON
    (27) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (31) assignment -> . IDENTIFIER EQ array SEMICOLON
    (32) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (34) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (39) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (40) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (44) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (47) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (48) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON
    (49) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (50) model_operation_with_params -> . IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON
    (58) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (59) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (60) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (64) return_statement -> . RETURN numvar_expression SEMICOLON
    (65) return_statement -> . RETURN bool_expression SEMICOLON
    (66) return_statement -> . RETURN string_expression SEMICOLON
    (67) return_statement -> . RETURN identifier_expression SEMICOLON
    (68) continue_statement -> . CONTINUE SEMICOLON
    (69) break_statement -> . BREAK SEMICOLON
    (33) variable_query -> . IDENTIFIER SEMICOLON
    (107) comment_expression -> . COMMENT STRING

    RBRACE          shift and go to state 246
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_operation_with_params    shift and go to state 12
    model_assign_r                 shift and go to state 13
    function_declaration           shift and go to state 14
    return_statement               shift and go to state 15
    continue_statement             shift and go to state 16
    break_statement                shift and go to state 17
    variable_query                 shift and go to state 18
    comment_expression             shift and go to state 19

state 245

    (48) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .

    VAR             reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    IF              reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    WHILE           reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    FOR             reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    PRINT           reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    MODEL           reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    FUN             reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    RETURN          reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    BREAK           reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    COMMENT         reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    $end            reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)
    RBRACE          reduce using rule 48 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON .)


state 246

    (35) elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE . elif_clause
    (35) elif_clause -> . ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause
    (36) elif_clause -> . empty
    (108) empty -> .

    ELIF            shift and go to state 220
    ELSE            reduce using rule 108 (empty -> .)
    VAR             reduce using rule 108 (empty -> .)
    IDENTIFIER      reduce using rule 108 (empty -> .)
    IF              reduce using rule 108 (empty -> .)
    WHILE           reduce using rule 108 (empty -> .)
    FOR             reduce using rule 108 (empty -> .)
    PRINT           reduce using rule 108 (empty -> .)
    MODEL           reduce using rule 108 (empty -> .)
    FUN             reduce using rule 108 (empty -> .)
    RETURN          reduce using rule 108 (empty -> .)
    CONTINUE        reduce using rule 108 (empty -> .)
    BREAK           reduce using rule 108 (empty -> .)
    COMMENT         reduce using rule 108 (empty -> .)
    $end            reduce using rule 108 (empty -> .)
    RBRACE          reduce using rule 108 (empty -> .)

    elif_clause                    shift and go to state 247
    empty                          shift and go to state 221

state 247

    (35) elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .

    ELSE            reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    VAR             reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    IDENTIFIER      reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    IF              reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    WHILE           reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    FOR             reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    PRINT           reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    MODEL           reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    FUN             reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    RETURN          reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    CONTINUE        reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    BREAK           reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    COMMENT         reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    $end            reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    RBRACE          reduce using rule 35 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 96 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 112 resolved as shift
WARNING: reduce/reduce conflict in state 51 resolved using rule (numvar -> IDENTIFIER)
WARNING: rejected rule (identifier_expression -> IDENTIFIER) in state 51
WARNING: reduce/reduce conflict in state 110 resolved using rule (elements -> empty)
WARNING: rejected rule (arrays -> empty) in state 110
WARNING: reduce/reduce conflict in state 152 resolved using rule (elements -> empty)
WARNING: rejected rule (arrays -> empty) in state 152
WARNING: reduce/reduce conflict in state 152 resolved using rule (elements -> empty)
WARNING: rejected rule (matrixs -> empty) in state 152
WARNING: reduce/reduce conflict in state 189 resolved using rule (elements -> empty)
WARNING: rejected rule (matrixs -> empty) in state 189
WARNING: reduce/reduce conflict in state 189 resolved using rule (elements -> empty)
WARNING: rejected rule (arrays -> empty) in state 189
WARNING: reduce/reduce conflict in state 206 resolved using rule (matrixs -> empty)
WARNING: rejected rule (arrays -> empty) in state 206
WARNING: reduce/reduce conflict in state 206 resolved using rule (elements -> empty)
WARNING: rejected rule (arrays -> empty) in state 206
WARNING: reduce/reduce conflict in state 206 resolved using rule (elements -> empty)
WARNING: rejected rule (matrixs -> empty) in state 206
WARNING: reduce/reduce conflict in state 243 resolved using rule (matrixs -> empty)
WARNING: rejected rule (arrays -> empty) in state 243
WARNING: Rule (identifier_expression -> IDENTIFIER) is never reduced
