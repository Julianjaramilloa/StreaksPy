
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEEEleftLTLTEGTGTEleftPLUSMINUSleftMULDIVrightPOWrightNOTAND BOOL BREAK COMMA COMMENT CONTINUE DIV DOT EE ELIF ELSE EQ FOR FUN GT GTE IDENTIFIER IF LBRACE LBRACKET LPAREN LT LTE MINUS MODEL MUL NE NOT NUMBER OR PLUS POW PRINT RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING VAR WHILEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : var_declaration\n                 | assignment\n                 | if_statement\n                 | while_statement\n                 | for_statement\n                 | print_statement\n                 | model_declaration\n                 | model_operation\n                 | model_operation_with_params\n                 | model_assign_r\n                 | function_declaration\n                 | return_statement\n                 | continue_statement\n                 | break_statement\n                 | variable_query\n                 | comment_expressionvar_declaration : VAR IDENTIFIER EQ numvar_expression SEMICOLON\n                       | VAR IDENTIFIER EQ bool_expression SEMICOLON\n                       | VAR IDENTIFIER EQ string_expression SEMICOLON\n                       | VAR IDENTIFIER EQ identifier_expression SEMICOLON\n                       | VAR IDENTIFIER EQ array SEMICOLON\n                       | VAR IDENTIFIER EQ matrix SEMICOLONassignment : IDENTIFIER EQ numvar_expression SEMICOLON\n                  | IDENTIFIER EQ bool_expression SEMICOLON\n                  | IDENTIFIER EQ string_expression SEMICOLON\n                  | IDENTIFIER EQ identifier_expression SEMICOLON\n                  | IDENTIFIER EQ array SEMICOLON\n                  | IDENTIFIER EQ matrix SEMICOLONvariable_query : IDENTIFIER SEMICOLONif_statement : IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clauseelif_clause : ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause\n                   | emptyelse_clause : ELSE LBRACE statement_list RBRACE\n                   | emptywhile_statement : WHILE LPAREN condition RPAREN LBRACE statement_list RBRACEfor_statement : FOR LPAREN for_initialization  condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACEfor_initialization : var_declarationfor_update : IDENTIFIER EQ numvar_expression\n                  | emptyprint_statement : PRINT LPAREN numvar_expression RPAREN SEMICOLON\n                       | PRINT LPAREN bool_expression RPAREN SEMICOLON\n                       | PRINT LPAREN string_expression RPAREN SEMICOLON\n                       | PRINT LPAREN identifier_expression RPAREN SEMICOLONmodel_declaration : MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA  matrixs RPAREN SEMICOLONmodel_operation : IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLONmodel_operation_with_params : IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLONparam_list : param_list COMMA param\n                  | param\n                  | emptyparam : numvar_expression\n             | bool_expression\n             | string_expression\n             | identifier_expressionmodel_assign_r : IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON\n                      | IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLONfunction_declaration : FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACEparameter_list : parameter_list COMMA IDENTIFIER\n                      | IDENTIFIER\n                      | emptyreturn_statement : RETURN numvar_expression SEMICOLON\n                        | RETURN bool_expression SEMICOLON\n                        | RETURN string_expression SEMICOLON\n                        | RETURN identifier_expression SEMICOLONcontinue_statement : CONTINUE SEMICOLONbreak_statement : BREAK SEMICOLONnumvar_expression : numvar_expression PLUS numvar_expression\n                         | numvar_expression MINUS numvar_expression\n                         | numvar_expression MUL numvar_expression\n                         | numvar_expression DIV numvar_expression\n                         | numvar_expression POW numvar_expression\n                         | numvarnumvar : NUMBER\n              | IDENTIFIERbool_expression : bool_expression AND bool_expression\n                       | bool_expression OR bool_expression\n                       | NOT bool_expression\n                       | BOOLcomparison_expression : numvar_expression EQ numvar_expression\n                             | numvar_expression NE numvar_expression\n                             | numvar_expression EE numvar_expression\n                             | numvar_expression LT numvar_expression\n                             | numvar_expression LTE numvar_expression\n                             | numvar_expression GT numvar_expression\n                             | numvar_expression GTE numvar_expression\n                             | bool_expression EQ bool_expression\n                             | bool_expression NE bool_expression\n                             | bool_expression EE bool_expressionstring_expression : STRINGidentifier_expression : IDENTIFIERcondition : comparison_expression\n                 | bool_expressionarray : LBRACKET elements RBRACKETelements : elements COMMA numvar_expression\n                | numvar_expression\n                | emptymatrixs : LBRACKET matrixs COMMA matrix  RBRACKET\n    | matrix\n    | emptymatrix : LBRACKET arrays RBRACKETarrays : arrays COMMA array\n              | array\n              | emptycomment_expression : COMMENT STRINGempty :'
    
_lr_action_items = {'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,39,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,160,171,173,174,175,176,182,185,186,187,188,193,195,197,198,202,203,205,206,209,210,212,214,216,218,220,226,227,232,233,236,239,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,20,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,20,20,-43,-44,-45,-46,-48,-57,-58,20,20,20,-49,-107,-38,20,-107,-35,20,-59,-33,-37,20,20,-39,20,-36,20,20,-47,-107,-34,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,26,27,28,32,34,35,36,37,38,40,53,54,55,56,63,71,72,78,79,80,81,82,83,84,85,88,89,97,98,99,100,101,102,103,109,115,116,117,118,119,120,121,139,140,141,142,143,144,147,160,171,172,173,174,175,176,179,182,184,185,186,187,188,193,195,197,198,200,202,203,205,206,209,210,212,213,214,216,218,220,226,227,229,232,233,236,239,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,33,41,42,51,-2,51,-32,64,69,69,51,-67,-68,-106,51,69,69,-40,129,-63,69,69,69,69,69,-64,-65,-66,-26,-27,-28,-29,-30,-31,69,51,69,69,69,69,69,69,69,-20,-21,-22,-23,-24,-25,69,21,21,190,-43,-44,-45,-46,194,-48,51,-57,-58,21,21,21,-49,-107,-38,69,21,-107,-35,21,-59,-33,-37,69,21,21,-39,21,-36,21,69,21,-47,-107,-34,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,160,171,173,174,175,176,182,185,186,187,188,193,195,197,198,202,203,205,206,209,210,212,214,216,218,220,226,227,232,233,236,239,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,22,22,-43,-44,-45,-46,-48,-57,-58,22,22,22,-49,-107,-38,22,-107,-35,22,-59,-33,-37,22,22,-39,22,-36,22,22,-47,-107,-34,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,160,171,173,174,175,176,182,185,186,187,188,193,195,197,198,202,203,205,206,209,210,212,214,216,218,220,226,227,232,233,236,239,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,23,23,-43,-44,-45,-46,-48,-57,-58,23,23,23,-49,-107,-38,23,-107,-35,23,-59,-33,-37,23,23,-39,23,-36,23,23,-47,-107,-34,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,160,171,173,174,175,176,182,185,186,187,188,193,195,197,198,202,203,205,206,209,210,212,214,216,218,220,226,227,232,233,236,239,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,24,24,-43,-44,-45,-46,-48,-57,-58,24,24,24,-49,-107,-38,24,-107,-35,24,-59,-33,-37,24,24,-39,24,-36,24,24,-47,-107,-34,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,160,171,173,174,175,176,182,185,186,187,188,193,195,197,198,202,203,205,206,209,210,212,214,216,218,220,226,227,232,233,236,239,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,25,25,-43,-44,-45,-46,-48,-57,-58,25,25,25,-49,-107,-38,25,-107,-35,25,-59,-33,-37,25,25,-39,25,-36,25,25,-47,-107,-34,]),'MODEL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,160,171,173,174,175,176,182,185,186,187,188,193,195,197,198,202,203,205,206,209,210,212,214,216,218,220,226,227,232,233,236,239,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,26,26,-43,-44,-45,-46,-48,-57,-58,26,26,26,-49,-107,-38,26,-107,-35,26,-59,-33,-37,26,26,-39,26,-36,26,26,-47,-107,-34,]),'FUN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,160,171,173,174,175,176,182,185,186,187,188,193,195,197,198,202,203,205,206,209,210,212,214,216,218,220,226,227,232,233,236,239,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,27,27,-43,-44,-45,-46,-48,-57,-58,27,27,27,-49,-107,-38,27,-107,-35,27,-59,-33,-37,27,27,-39,27,-36,27,27,-47,-107,-34,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,160,171,173,174,175,176,182,185,186,187,188,193,195,197,198,202,203,205,206,209,210,212,214,216,218,220,226,227,232,233,236,239,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,28,28,-43,-44,-45,-46,-48,-57,-58,28,28,28,-49,-107,-38,28,-107,-35,28,-59,-33,-37,28,28,-39,28,-36,28,28,-47,-107,-34,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,160,171,173,174,175,176,182,185,186,187,188,193,195,197,198,202,203,205,206,209,210,212,214,216,218,220,226,227,232,233,236,239,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,29,29,-43,-44,-45,-46,-48,-57,-58,29,29,29,-49,-107,-38,29,-107,-35,29,-59,-33,-37,29,29,-39,29,-36,29,29,-47,-107,-34,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,160,171,173,174,175,176,182,185,186,187,188,193,195,197,198,202,203,205,206,209,210,212,214,216,218,220,226,227,232,233,236,239,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,30,30,-43,-44,-45,-46,-48,-57,-58,30,30,30,-49,-107,-38,30,-107,-35,30,-59,-33,-37,30,30,-39,30,-36,30,30,-47,-107,-34,]),'COMMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,160,171,173,174,175,176,182,185,186,187,188,193,195,197,198,202,203,205,206,209,210,212,214,216,218,220,226,227,232,233,236,239,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,31,31,-43,-44,-45,-46,-48,-57,-58,31,31,31,-49,-107,-38,31,-107,-35,31,-59,-33,-37,31,31,-39,31,-36,31,31,-47,-107,-34,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,173,174,175,176,182,185,186,195,197,198,203,205,209,210,212,218,226,233,236,239,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,-43,-44,-45,-46,-48,-57,-58,-49,-107,-38,-107,-35,-59,-33,-37,-39,-36,-47,-107,-34,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,32,35,53,54,55,79,85,88,89,97,98,99,100,101,102,139,140,141,142,143,144,173,174,175,176,182,185,186,187,188,195,197,198,202,203,205,209,210,212,214,218,220,226,232,233,236,239,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-2,-32,-67,-68,-106,-63,-64,-65,-66,-26,-27,-28,-29,-30,-31,-20,-21,-22,-23,-24,-25,-43,-44,-45,-46,-48,-57,-58,197,198,-49,-107,-38,209,-107,-35,-59,-33,-37,218,-39,226,-36,236,-47,-107,-34,]),'EQ':([21,33,41,47,49,52,64,67,68,69,90,132,133,134,135,136,137,138,190,],[34,56,77,-74,-80,-75,110,112,115,-76,-79,-69,-70,-71,-72,-73,-77,-78,200,]),'DOT':([21,],[36,]),'SEMICOLON':([21,29,30,43,44,45,46,47,49,50,51,52,57,58,59,60,61,62,66,67,69,90,91,92,93,94,95,96,123,124,125,126,127,132,133,134,135,136,137,138,146,148,150,158,159,161,162,163,164,165,166,167,168,169,170,183,228,],[35,53,54,79,85,88,89,-74,-80,-91,-76,-75,97,98,99,100,101,102,-93,-94,-76,-79,139,140,141,142,143,144,172,173,174,175,176,-69,-70,-71,-72,-73,-77,-78,-95,-102,182,185,186,-88,-89,-90,-81,-82,-83,-84,-85,-86,-87,195,233,]),'LPAREN':([22,23,24,25,42,64,77,204,],[37,38,39,40,78,109,128,213,]),'NOT':([28,34,37,38,40,48,56,71,72,86,87,109,112,113,114,139,140,141,142,143,144,184,213,],[48,48,48,48,48,48,48,48,-40,48,48,48,48,48,48,-20,-21,-22,-23,-24,-25,48,48,]),'BOOL':([28,34,37,38,40,48,56,71,72,86,87,109,112,113,114,139,140,141,142,143,144,184,213,],[49,49,49,49,49,49,49,49,-40,49,49,49,49,49,49,-20,-21,-22,-23,-24,-25,49,49,]),'STRING':([28,31,34,40,56,109,184,],[50,55,50,50,50,50,50,]),'NUMBER':([28,34,37,38,40,56,63,71,72,80,81,82,83,84,103,109,115,116,117,118,119,120,121,128,139,140,141,142,143,144,147,184,200,213,229,],[52,52,52,52,52,52,52,52,-40,52,52,52,52,52,52,52,52,52,52,52,52,52,52,177,-20,-21,-22,-23,-24,-25,52,52,52,52,52,]),'LBRACKET':([34,56,63,110,149,192,208,219,223,229,235,237,],[63,63,103,63,103,103,103,223,229,229,237,103,]),'PLUS':([43,47,51,52,57,68,69,73,91,106,132,133,134,135,136,154,164,165,166,167,168,169,170,180,207,],[80,-74,-76,-75,80,80,-76,80,80,80,-69,-70,-71,-72,-73,80,80,80,80,80,80,80,80,80,80,]),'MINUS':([43,47,51,52,57,68,69,73,91,106,132,133,134,135,136,154,164,165,166,167,168,169,170,180,207,],[81,-74,-76,-75,81,81,-76,81,81,81,-69,-70,-71,-72,-73,81,81,81,81,81,81,81,81,81,81,]),'MUL':([43,47,51,52,57,68,69,73,91,106,132,133,134,135,136,154,164,165,166,167,168,169,170,180,207,],[82,-74,-76,-75,82,82,-76,82,82,82,82,82,-71,-72,-73,82,82,82,82,82,82,82,82,82,82,]),'DIV':([43,47,51,52,57,68,69,73,91,106,132,133,134,135,136,154,164,165,166,167,168,169,170,180,207,],[83,-74,-76,-75,83,83,-76,83,83,83,83,83,-71,-72,-73,83,83,83,83,83,83,83,83,83,83,]),'POW':([43,47,51,52,57,68,69,73,91,106,132,133,134,135,136,154,164,165,166,167,168,169,170,180,207,],[84,-74,-76,-75,84,84,-76,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'AND':([44,49,58,67,74,90,92,137,138,155,161,162,163,],[86,-80,86,86,86,-79,86,-77,86,86,86,86,86,]),'OR':([44,49,58,67,74,90,92,137,138,155,161,162,163,],[87,-80,87,87,87,-79,87,-77,-78,87,87,87,87,]),'NE':([47,49,52,67,68,69,90,132,133,134,135,136,137,138,],[-74,-80,-75,113,116,-76,-79,-69,-70,-71,-72,-73,-77,-78,]),'EE':([47,49,52,67,68,69,90,132,133,134,135,136,137,138,],[-74,-80,-75,114,117,-76,-79,-69,-70,-71,-72,-73,-77,-78,]),'LT':([47,52,68,69,132,133,134,135,136,],[-74,-75,118,-76,-69,-70,-71,-72,-73,]),'LTE':([47,52,68,69,132,133,134,135,136,],[-74,-75,119,-76,-69,-70,-71,-72,-73,]),'GT':([47,52,68,69,132,133,134,135,136,],[-74,-75,120,-76,-69,-70,-71,-72,-73,]),'GTE':([47,52,68,69,132,133,134,135,136,],[-74,-75,121,-76,-69,-70,-71,-72,-73,]),'RPAREN':([47,49,50,51,52,65,66,67,69,70,73,74,75,76,78,90,109,129,130,131,132,133,134,135,136,137,138,148,151,152,153,154,155,156,157,161,162,163,164,165,166,167,168,169,170,172,189,191,194,196,207,217,219,222,224,225,241,],[-74,-80,-91,-76,-75,111,-93,-94,-76,122,124,125,126,127,-107,-79,150,-61,178,-62,-69,-70,-71,-72,-73,-77,-78,-102,183,-51,-52,-53,-54,-55,-56,-88,-89,-90,-81,-82,-83,-84,-85,-86,-87,-107,199,-42,-60,-50,-41,221,-107,228,-100,-101,-99,]),'RBRACKET':([47,52,63,69,103,104,105,106,107,108,132,133,134,135,136,145,146,148,180,181,223,229,231,234,237,238,240,],[-74,-75,-107,-76,-107,146,148,-97,-98,-104,-69,-70,-71,-72,-73,-98,-95,-102,-96,-103,-107,-107,-105,-98,-107,241,-105,]),'COMMA':([47,49,50,51,52,63,69,78,90,103,104,105,106,107,108,109,129,130,131,132,133,134,135,136,137,138,145,146,148,151,152,153,154,155,156,157,177,180,181,194,196,201,215,223,224,229,230,231,234,237,240,241,],[-74,-80,-91,-76,-75,-107,-76,-107,-79,-107,147,149,-97,-98,-104,-107,-61,179,-62,-69,-70,-71,-72,-73,-77,-78,-98,-95,-102,184,-51,-52,-53,-54,-55,-56,192,-96,-103,-60,-50,208,219,-107,-100,-107,235,-101,-98,-107,-105,-99,]),'LBRACE':([111,122,178,199,211,221,],[160,171,193,206,216,227,]),'ELIF':([197,236,],[204,204,]),'ELSE':([197,203,205,236,239,],[-107,211,-35,-107,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,160,171,193,206,216,227,],[2,187,188,202,214,220,232,]),'statement':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[3,32,3,3,32,32,3,32,3,32,3,32,3,32,]),'var_declaration':([0,2,39,160,171,187,188,193,202,206,214,216,220,227,232,],[4,4,72,4,4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'if_statement':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'while_statement':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'for_statement':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'print_statement':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'model_declaration':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'model_operation':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'model_operation_with_params':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'model_assign_r':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'function_declaration':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'return_statement':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'continue_statement':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'break_statement':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'variable_query':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'comment_expression':([0,2,160,171,187,188,193,202,206,214,216,220,227,232,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'numvar_expression':([28,34,37,38,40,56,63,71,80,81,82,83,84,103,109,115,116,117,118,119,120,121,147,184,200,213,229,],[43,57,68,68,73,91,106,68,132,133,134,135,136,106,154,164,165,166,167,168,169,170,180,154,207,68,106,]),'bool_expression':([28,34,37,38,40,48,56,71,86,87,109,112,113,114,184,213,],[44,58,67,67,74,90,92,67,137,138,155,161,162,163,155,67,]),'string_expression':([28,34,40,56,109,184,],[45,59,75,93,156,156,]),'identifier_expression':([28,34,40,56,109,184,],[46,60,76,94,157,157,]),'numvar':([28,34,37,38,40,56,63,71,80,81,82,83,84,103,109,115,116,117,118,119,120,121,147,184,200,213,229,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'array':([34,56,63,110,149,192,208,223,229,237,],[61,95,108,158,181,201,215,108,108,108,]),'matrix':([34,56,110,219,223,229,235,],[62,96,159,224,224,224,238,]),'condition':([37,38,71,213,],[65,70,123,217,]),'comparison_expression':([37,38,71,213,],[66,66,66,66,]),'for_initialization':([39,],[71,]),'elements':([63,103,229,],[104,104,104,]),'arrays':([63,223,229,237,],[105,105,105,105,]),'empty':([63,78,103,109,172,197,203,219,223,229,236,237,],[107,131,145,153,191,205,212,225,231,234,205,240,]),'parameter_list':([78,],[130,]),'param_list':([109,],[151,]),'param':([109,184,],[152,196,]),'for_update':([172,],[189,]),'elif_clause':([197,236,],[203,239,]),'else_clause':([203,],[210,]),'matrixs':([219,223,229,],[222,230,230,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','streaks_parser.py',26),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','streaks_parser.py',31),
  ('statement_list -> statement','statement_list',1,'p_statement_list','streaks_parser.py',32),
  ('statement -> var_declaration','statement',1,'p_statement','streaks_parser.py',40),
  ('statement -> assignment','statement',1,'p_statement','streaks_parser.py',41),
  ('statement -> if_statement','statement',1,'p_statement','streaks_parser.py',42),
  ('statement -> while_statement','statement',1,'p_statement','streaks_parser.py',43),
  ('statement -> for_statement','statement',1,'p_statement','streaks_parser.py',44),
  ('statement -> print_statement','statement',1,'p_statement','streaks_parser.py',45),
  ('statement -> model_declaration','statement',1,'p_statement','streaks_parser.py',46),
  ('statement -> model_operation','statement',1,'p_statement','streaks_parser.py',47),
  ('statement -> model_operation_with_params','statement',1,'p_statement','streaks_parser.py',48),
  ('statement -> model_assign_r','statement',1,'p_statement','streaks_parser.py',49),
  ('statement -> function_declaration','statement',1,'p_statement','streaks_parser.py',50),
  ('statement -> return_statement','statement',1,'p_statement','streaks_parser.py',51),
  ('statement -> continue_statement','statement',1,'p_statement','streaks_parser.py',52),
  ('statement -> break_statement','statement',1,'p_statement','streaks_parser.py',53),
  ('statement -> variable_query','statement',1,'p_statement','streaks_parser.py',54),
  ('statement -> comment_expression','statement',1,'p_statement','streaks_parser.py',55),
  ('var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON','var_declaration',5,'p_var_declaration','streaks_parser.py',60),
  ('var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON','var_declaration',5,'p_var_declaration','streaks_parser.py',61),
  ('var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON','var_declaration',5,'p_var_declaration','streaks_parser.py',62),
  ('var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON','var_declaration',5,'p_var_declaration','streaks_parser.py',63),
  ('var_declaration -> VAR IDENTIFIER EQ array SEMICOLON','var_declaration',5,'p_var_declaration','streaks_parser.py',64),
  ('var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON','var_declaration',5,'p_var_declaration','streaks_parser.py',65),
  ('assignment -> IDENTIFIER EQ numvar_expression SEMICOLON','assignment',4,'p_assignment','streaks_parser.py',70),
  ('assignment -> IDENTIFIER EQ bool_expression SEMICOLON','assignment',4,'p_assignment','streaks_parser.py',71),
  ('assignment -> IDENTIFIER EQ string_expression SEMICOLON','assignment',4,'p_assignment','streaks_parser.py',72),
  ('assignment -> IDENTIFIER EQ identifier_expression SEMICOLON','assignment',4,'p_assignment','streaks_parser.py',73),
  ('assignment -> IDENTIFIER EQ array SEMICOLON','assignment',4,'p_assignment','streaks_parser.py',74),
  ('assignment -> IDENTIFIER EQ matrix SEMICOLON','assignment',4,'p_assignment','streaks_parser.py',75),
  ('variable_query -> IDENTIFIER SEMICOLON','variable_query',2,'p_variable_query','streaks_parser.py',81),
  ('if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause','if_statement',9,'p_if_statement','streaks_parser.py',87),
  ('elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause','elif_clause',8,'p_elif_clause','streaks_parser.py',91),
  ('elif_clause -> empty','elif_clause',1,'p_elif_clause','streaks_parser.py',92),
  ('else_clause -> ELSE LBRACE statement_list RBRACE','else_clause',4,'p_else_clause','streaks_parser.py',99),
  ('else_clause -> empty','else_clause',1,'p_else_clause','streaks_parser.py',100),
  ('while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE','while_statement',7,'p_while_statement','streaks_parser.py',108),
  ('for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE','for_statement',10,'p_for_statement','streaks_parser.py',112),
  ('for_initialization -> var_declaration','for_initialization',1,'p_for_initialization','streaks_parser.py',116),
  ('for_update -> IDENTIFIER EQ numvar_expression','for_update',3,'p_for_update','streaks_parser.py',120),
  ('for_update -> empty','for_update',1,'p_for_update','streaks_parser.py',121),
  ('print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','streaks_parser.py',128),
  ('print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','streaks_parser.py',129),
  ('print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','streaks_parser.py',130),
  ('print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','streaks_parser.py',131),
  ('model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA matrixs RPAREN SEMICOLON','model_declaration',13,'p_model_declaration','streaks_parser.py',137),
  ('model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON','model_operation',6,'p_model_operation','streaks_parser.py',142),
  ('model_operation_with_params -> IDENTIFIER DOT IDENTIFIER LPAREN param_list RPAREN SEMICOLON','model_operation_with_params',7,'p_model_operation_with_params','streaks_parser.py',156),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','streaks_parser.py',170),
  ('param_list -> param','param_list',1,'p_param_list','streaks_parser.py',171),
  ('param_list -> empty','param_list',1,'p_param_list','streaks_parser.py',172),
  ('param -> numvar_expression','param',1,'p_param','streaks_parser.py',181),
  ('param -> bool_expression','param',1,'p_param','streaks_parser.py',182),
  ('param -> string_expression','param',1,'p_param','streaks_parser.py',183),
  ('param -> identifier_expression','param',1,'p_param','streaks_parser.py',184),
  ('model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON','model_assign_r',6,'p_model_assign_r','streaks_parser.py',188),
  ('model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON','model_assign_r',6,'p_model_assign_r','streaks_parser.py',189),
  ('function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE','function_declaration',8,'p_function_declaration','streaks_parser.py',199),
  ('parameter_list -> parameter_list COMMA IDENTIFIER','parameter_list',3,'p_parameter_list','streaks_parser.py',204),
  ('parameter_list -> IDENTIFIER','parameter_list',1,'p_parameter_list','streaks_parser.py',205),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','streaks_parser.py',206),
  ('return_statement -> RETURN numvar_expression SEMICOLON','return_statement',3,'p_return_statement','streaks_parser.py',216),
  ('return_statement -> RETURN bool_expression SEMICOLON','return_statement',3,'p_return_statement','streaks_parser.py',217),
  ('return_statement -> RETURN string_expression SEMICOLON','return_statement',3,'p_return_statement','streaks_parser.py',218),
  ('return_statement -> RETURN identifier_expression SEMICOLON','return_statement',3,'p_return_statement','streaks_parser.py',219),
  ('continue_statement -> CONTINUE SEMICOLON','continue_statement',2,'p_continue_statement','streaks_parser.py',224),
  ('break_statement -> BREAK SEMICOLON','break_statement',2,'p_break_statement','streaks_parser.py',228),
  ('numvar_expression -> numvar_expression PLUS numvar_expression','numvar_expression',3,'p_numvar_expression','streaks_parser.py',233),
  ('numvar_expression -> numvar_expression MINUS numvar_expression','numvar_expression',3,'p_numvar_expression','streaks_parser.py',234),
  ('numvar_expression -> numvar_expression MUL numvar_expression','numvar_expression',3,'p_numvar_expression','streaks_parser.py',235),
  ('numvar_expression -> numvar_expression DIV numvar_expression','numvar_expression',3,'p_numvar_expression','streaks_parser.py',236),
  ('numvar_expression -> numvar_expression POW numvar_expression','numvar_expression',3,'p_numvar_expression','streaks_parser.py',237),
  ('numvar_expression -> numvar','numvar_expression',1,'p_numvar_expression','streaks_parser.py',238),
  ('numvar -> NUMBER','numvar',1,'p_numvar','streaks_parser.py',245),
  ('numvar -> IDENTIFIER','numvar',1,'p_numvar','streaks_parser.py',246),
  ('bool_expression -> bool_expression AND bool_expression','bool_expression',3,'p_bool_expression','streaks_parser.py',254),
  ('bool_expression -> bool_expression OR bool_expression','bool_expression',3,'p_bool_expression','streaks_parser.py',255),
  ('bool_expression -> NOT bool_expression','bool_expression',2,'p_bool_expression','streaks_parser.py',256),
  ('bool_expression -> BOOL','bool_expression',1,'p_bool_expression','streaks_parser.py',257),
  ('comparison_expression -> numvar_expression EQ numvar_expression','comparison_expression',3,'p_comparison_expression','streaks_parser.py',267),
  ('comparison_expression -> numvar_expression NE numvar_expression','comparison_expression',3,'p_comparison_expression','streaks_parser.py',268),
  ('comparison_expression -> numvar_expression EE numvar_expression','comparison_expression',3,'p_comparison_expression','streaks_parser.py',269),
  ('comparison_expression -> numvar_expression LT numvar_expression','comparison_expression',3,'p_comparison_expression','streaks_parser.py',270),
  ('comparison_expression -> numvar_expression LTE numvar_expression','comparison_expression',3,'p_comparison_expression','streaks_parser.py',271),
  ('comparison_expression -> numvar_expression GT numvar_expression','comparison_expression',3,'p_comparison_expression','streaks_parser.py',272),
  ('comparison_expression -> numvar_expression GTE numvar_expression','comparison_expression',3,'p_comparison_expression','streaks_parser.py',273),
  ('comparison_expression -> bool_expression EQ bool_expression','comparison_expression',3,'p_comparison_expression','streaks_parser.py',274),
  ('comparison_expression -> bool_expression NE bool_expression','comparison_expression',3,'p_comparison_expression','streaks_parser.py',275),
  ('comparison_expression -> bool_expression EE bool_expression','comparison_expression',3,'p_comparison_expression','streaks_parser.py',276),
  ('string_expression -> STRING','string_expression',1,'p_string_expression','streaks_parser.py',281),
  ('identifier_expression -> IDENTIFIER','identifier_expression',1,'p_identifier_expression','streaks_parser.py',285),
  ('condition -> comparison_expression','condition',1,'p_condition','streaks_parser.py',290),
  ('condition -> bool_expression','condition',1,'p_condition','streaks_parser.py',291),
  ('array -> LBRACKET elements RBRACKET','array',3,'p_array','streaks_parser.py',296),
  ('elements -> elements COMMA numvar_expression','elements',3,'p_elements','streaks_parser.py',300),
  ('elements -> numvar_expression','elements',1,'p_elements','streaks_parser.py',301),
  ('elements -> empty','elements',1,'p_elements','streaks_parser.py',302),
  ('matrixs -> LBRACKET matrixs COMMA matrix RBRACKET','matrixs',5,'p_matrixs','streaks_parser.py',311),
  ('matrixs -> matrix','matrixs',1,'p_matrixs','streaks_parser.py',312),
  ('matrixs -> empty','matrixs',1,'p_matrixs','streaks_parser.py',313),
  ('matrix -> LBRACKET arrays RBRACKET','matrix',3,'p_matrix','streaks_parser.py',323),
  ('arrays -> arrays COMMA array','arrays',3,'p_arrays','streaks_parser.py',327),
  ('arrays -> array','arrays',1,'p_arrays','streaks_parser.py',328),
  ('arrays -> empty','arrays',1,'p_arrays','streaks_parser.py',329),
  ('comment_expression -> COMMENT STRING','comment_expression',2,'p_comment_expression','streaks_parser.py',339),
  ('empty -> <empty>','empty',0,'p_empty','streaks_parser.py',344),
]
