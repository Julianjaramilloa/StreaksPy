Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> var_declaration
Rule 5     statement -> assignment
Rule 6     statement -> if_statement
Rule 7     statement -> while_statement
Rule 8     statement -> for_statement
Rule 9     statement -> print_statement
Rule 10    statement -> model_declaration
Rule 11    statement -> model_operation
Rule 12    statement -> function_declaration
Rule 13    statement -> return_statement
Rule 14    statement -> continue_statement
Rule 15    statement -> break_statement
Rule 16    statement -> variable_query
Rule 17    statement -> NEWLINE
Rule 18    var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON
Rule 19    var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON
Rule 20    var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON
Rule 21    var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON
Rule 22    assignment -> IDENTIFIER EQ numvar_expression SEMICOLON
Rule 23    assignment -> IDENTIFIER EQ bool_expression SEMICOLON
Rule 24    assignment -> IDENTIFIER EQ string_expression SEMICOLON
Rule 25    assignment -> IDENTIFIER EQ identifier_expression SEMICOLON
Rule 26    variable_query -> IDENTIFIER SEMICOLON
Rule 27    if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
Rule 28    elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause
Rule 29    elif_clause -> empty
Rule 30    else_clause -> ELSE LBRACE statement_list RBRACE
Rule 31    else_clause -> empty
Rule 32    while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
Rule 33    for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
Rule 34    for_initialization -> var_declaration
Rule 35    for_update -> IDENTIFIER EQ numvar_expression
Rule 36    for_update -> empty
Rule 37    print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON
Rule 38    print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON
Rule 39    print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON
Rule 40    print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON
Rule 41    model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
Rule 42    model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
Rule 43    function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
Rule 44    parameter_list -> parameter_list COMMA IDENTIFIER
Rule 45    parameter_list -> IDENTIFIER
Rule 46    parameter_list -> empty
Rule 47    return_statement -> RETURN numvar_expression SEMICOLON
Rule 48    return_statement -> RETURN bool_expression SEMICOLON
Rule 49    return_statement -> RETURN string_expression SEMICOLON
Rule 50    return_statement -> RETURN identifier_expression SEMICOLON
Rule 51    continue_statement -> CONTINUE SEMICOLON
Rule 52    break_statement -> BREAK SEMICOLON
Rule 53    numvar_expression -> numvar_expression PLUS numvar_expression
Rule 54    numvar_expression -> numvar_expression MINUS numvar_expression
Rule 55    numvar_expression -> numvar_expression MUL numvar_expression
Rule 56    numvar_expression -> numvar_expression DIV numvar_expression
Rule 57    numvar_expression -> numvar_expression POW numvar_expression
Rule 58    numvar_expression -> numvar
Rule 59    numvar -> NUMBER
Rule 60    numvar -> IDENTIFIER
Rule 61    bool_expression -> bool_expression AND bool_expression
Rule 62    bool_expression -> bool_expression OR bool_expression
Rule 63    bool_expression -> NOT bool_expression
Rule 64    bool_expression -> BOOL
Rule 65    comparison_expression -> numvar_expression EQ numvar_expression
Rule 66    comparison_expression -> numvar_expression NE numvar_expression
Rule 67    comparison_expression -> numvar_expression EE numvar_expression
Rule 68    comparison_expression -> numvar_expression LT numvar_expression
Rule 69    comparison_expression -> numvar_expression LTE numvar_expression
Rule 70    comparison_expression -> numvar_expression GT numvar_expression
Rule 71    comparison_expression -> numvar_expression GTE numvar_expression
Rule 72    comparison_expression -> bool_expression EQ bool_expression
Rule 73    comparison_expression -> bool_expression NE bool_expression
Rule 74    comparison_expression -> bool_expression EE bool_expression
Rule 75    string_expression -> STRING
Rule 76    identifier_expression -> IDENTIFIER
Rule 77    condition -> comparison_expression
Rule 78    condition -> bool_expression
Rule 79    array -> LBRACKET elements RBRACKET
Rule 80    elements -> elements COMMA numvar_expression
Rule 81    elements -> numvar_expression
Rule 82    elements -> empty
Rule 83    matrix -> LBRACKET arrays RBRACKET
Rule 84    arrays -> arrays COMMA array
Rule 85    arrays -> array
Rule 86    arrays -> empty
Rule 87    comment_expression -> COMMENT STRING
Rule 88    empty -> <empty>

Terminals, with rules where they appear

AND                  : 61
BOOL                 : 64
BREAK                : 52
COMMA                : 41 41 41 44 80 84
COMMENT              : 87
CONTINUE             : 51
DIV                  : 56
DOT                  : 42
EE                   : 67 74
ELIF                 : 28
ELSE                 : 30
EQ                   : 18 19 20 21 22 23 24 25 35 41 65 72
FOR                  : 33
FUN                  : 43
GT                   : 70
GTE                  : 71
IDENTIFIER           : 18 19 20 21 22 23 24 25 26 35 41 42 42 43 44 45 60 76
IF                   : 27
LBRACE               : 27 28 30 32 33 43
LBRACKET             : 79 83
LPAREN               : 27 28 32 33 37 38 39 40 41 42 43
LT                   : 68
LTE                  : 69
MINUS                : 54
MODEL                : 41
MUL                  : 55
NE                   : 66 73
NEWLINE              : 17
NOT                  : 63
NUMBER               : 41 41 41 59
OR                   : 62
PLUS                 : 53
POW                  : 57
PRINT                : 37 38 39 40
RBRACE               : 27 28 30 32 33 43
RBRACKET             : 79 83
RETURN               : 47 48 49 50
RPAREN               : 27 28 32 33 37 38 39 40 41 42 43
SEMICOLON            : 18 19 20 21 22 23 24 25 26 33 37 38 39 40 41 42 47 48 49 50 51 52
STRING               : 75 87
VAR                  : 18 19 20 21
WHILE                : 32
error                : 

Nonterminals, with rules where they appear

array                : 84 85
arrays               : 83 84
assignment           : 5
bool_expression      : 19 23 38 48 61 61 62 62 63 72 72 73 73 74 74 78
break_statement      : 15
comment_expression   : 
comparison_expression : 77
condition            : 27 28 32 33
continue_statement   : 14
elements             : 79 80
elif_clause          : 27 28
else_clause          : 27
empty                : 29 31 36 46 82 86
for_initialization   : 33
for_statement        : 8
for_update           : 33
function_declaration : 12
identifier_expression : 21 25 40 50
if_statement         : 6
matrix               : 41
model_declaration    : 10
model_operation      : 11
numvar               : 58
numvar_expression    : 18 22 35 37 47 53 53 54 54 55 55 56 56 57 57 65 65 66 66 67 67 68 68 69 69 70 70 71 71 80 81
parameter_list       : 43 44
print_statement      : 9
program              : 0
return_statement     : 13
statement            : 2 3
statement_list       : 1 2 27 28 30 32 33 43
string_expression    : 20 24 39 49
var_declaration      : 4 34
variable_query       : 16
while_statement      : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    $end            reduce using rule 1 (program -> statement_list .)
    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement                      shift and go to state 29
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 3

    (3) statement_list -> statement .

    NEWLINE         reduce using rule 3 (statement_list -> statement .)
    VAR             reduce using rule 3 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    WHILE           reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    PRINT           reduce using rule 3 (statement_list -> statement .)
    MODEL           reduce using rule 3 (statement_list -> statement .)
    FUN             reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    CONTINUE        reduce using rule 3 (statement_list -> statement .)
    BREAK           reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> var_declaration .

    NEWLINE         reduce using rule 4 (statement -> var_declaration .)
    VAR             reduce using rule 4 (statement -> var_declaration .)
    IDENTIFIER      reduce using rule 4 (statement -> var_declaration .)
    IF              reduce using rule 4 (statement -> var_declaration .)
    WHILE           reduce using rule 4 (statement -> var_declaration .)
    FOR             reduce using rule 4 (statement -> var_declaration .)
    PRINT           reduce using rule 4 (statement -> var_declaration .)
    MODEL           reduce using rule 4 (statement -> var_declaration .)
    FUN             reduce using rule 4 (statement -> var_declaration .)
    RETURN          reduce using rule 4 (statement -> var_declaration .)
    CONTINUE        reduce using rule 4 (statement -> var_declaration .)
    BREAK           reduce using rule 4 (statement -> var_declaration .)
    $end            reduce using rule 4 (statement -> var_declaration .)
    RBRACE          reduce using rule 4 (statement -> var_declaration .)


state 5

    (5) statement -> assignment .

    NEWLINE         reduce using rule 5 (statement -> assignment .)
    VAR             reduce using rule 5 (statement -> assignment .)
    IDENTIFIER      reduce using rule 5 (statement -> assignment .)
    IF              reduce using rule 5 (statement -> assignment .)
    WHILE           reduce using rule 5 (statement -> assignment .)
    FOR             reduce using rule 5 (statement -> assignment .)
    PRINT           reduce using rule 5 (statement -> assignment .)
    MODEL           reduce using rule 5 (statement -> assignment .)
    FUN             reduce using rule 5 (statement -> assignment .)
    RETURN          reduce using rule 5 (statement -> assignment .)
    CONTINUE        reduce using rule 5 (statement -> assignment .)
    BREAK           reduce using rule 5 (statement -> assignment .)
    $end            reduce using rule 5 (statement -> assignment .)
    RBRACE          reduce using rule 5 (statement -> assignment .)


state 6

    (6) statement -> if_statement .

    NEWLINE         reduce using rule 6 (statement -> if_statement .)
    VAR             reduce using rule 6 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    WHILE           reduce using rule 6 (statement -> if_statement .)
    FOR             reduce using rule 6 (statement -> if_statement .)
    PRINT           reduce using rule 6 (statement -> if_statement .)
    MODEL           reduce using rule 6 (statement -> if_statement .)
    FUN             reduce using rule 6 (statement -> if_statement .)
    RETURN          reduce using rule 6 (statement -> if_statement .)
    CONTINUE        reduce using rule 6 (statement -> if_statement .)
    BREAK           reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RBRACE          reduce using rule 6 (statement -> if_statement .)


state 7

    (7) statement -> while_statement .

    NEWLINE         reduce using rule 7 (statement -> while_statement .)
    VAR             reduce using rule 7 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 7 (statement -> while_statement .)
    IF              reduce using rule 7 (statement -> while_statement .)
    WHILE           reduce using rule 7 (statement -> while_statement .)
    FOR             reduce using rule 7 (statement -> while_statement .)
    PRINT           reduce using rule 7 (statement -> while_statement .)
    MODEL           reduce using rule 7 (statement -> while_statement .)
    FUN             reduce using rule 7 (statement -> while_statement .)
    RETURN          reduce using rule 7 (statement -> while_statement .)
    CONTINUE        reduce using rule 7 (statement -> while_statement .)
    BREAK           reduce using rule 7 (statement -> while_statement .)
    $end            reduce using rule 7 (statement -> while_statement .)
    RBRACE          reduce using rule 7 (statement -> while_statement .)


state 8

    (8) statement -> for_statement .

    NEWLINE         reduce using rule 8 (statement -> for_statement .)
    VAR             reduce using rule 8 (statement -> for_statement .)
    IDENTIFIER      reduce using rule 8 (statement -> for_statement .)
    IF              reduce using rule 8 (statement -> for_statement .)
    WHILE           reduce using rule 8 (statement -> for_statement .)
    FOR             reduce using rule 8 (statement -> for_statement .)
    PRINT           reduce using rule 8 (statement -> for_statement .)
    MODEL           reduce using rule 8 (statement -> for_statement .)
    FUN             reduce using rule 8 (statement -> for_statement .)
    RETURN          reduce using rule 8 (statement -> for_statement .)
    CONTINUE        reduce using rule 8 (statement -> for_statement .)
    BREAK           reduce using rule 8 (statement -> for_statement .)
    $end            reduce using rule 8 (statement -> for_statement .)
    RBRACE          reduce using rule 8 (statement -> for_statement .)


state 9

    (9) statement -> print_statement .

    NEWLINE         reduce using rule 9 (statement -> print_statement .)
    VAR             reduce using rule 9 (statement -> print_statement .)
    IDENTIFIER      reduce using rule 9 (statement -> print_statement .)
    IF              reduce using rule 9 (statement -> print_statement .)
    WHILE           reduce using rule 9 (statement -> print_statement .)
    FOR             reduce using rule 9 (statement -> print_statement .)
    PRINT           reduce using rule 9 (statement -> print_statement .)
    MODEL           reduce using rule 9 (statement -> print_statement .)
    FUN             reduce using rule 9 (statement -> print_statement .)
    RETURN          reduce using rule 9 (statement -> print_statement .)
    CONTINUE        reduce using rule 9 (statement -> print_statement .)
    BREAK           reduce using rule 9 (statement -> print_statement .)
    $end            reduce using rule 9 (statement -> print_statement .)
    RBRACE          reduce using rule 9 (statement -> print_statement .)


state 10

    (10) statement -> model_declaration .

    NEWLINE         reduce using rule 10 (statement -> model_declaration .)
    VAR             reduce using rule 10 (statement -> model_declaration .)
    IDENTIFIER      reduce using rule 10 (statement -> model_declaration .)
    IF              reduce using rule 10 (statement -> model_declaration .)
    WHILE           reduce using rule 10 (statement -> model_declaration .)
    FOR             reduce using rule 10 (statement -> model_declaration .)
    PRINT           reduce using rule 10 (statement -> model_declaration .)
    MODEL           reduce using rule 10 (statement -> model_declaration .)
    FUN             reduce using rule 10 (statement -> model_declaration .)
    RETURN          reduce using rule 10 (statement -> model_declaration .)
    CONTINUE        reduce using rule 10 (statement -> model_declaration .)
    BREAK           reduce using rule 10 (statement -> model_declaration .)
    $end            reduce using rule 10 (statement -> model_declaration .)
    RBRACE          reduce using rule 10 (statement -> model_declaration .)


state 11

    (11) statement -> model_operation .

    NEWLINE         reduce using rule 11 (statement -> model_operation .)
    VAR             reduce using rule 11 (statement -> model_operation .)
    IDENTIFIER      reduce using rule 11 (statement -> model_operation .)
    IF              reduce using rule 11 (statement -> model_operation .)
    WHILE           reduce using rule 11 (statement -> model_operation .)
    FOR             reduce using rule 11 (statement -> model_operation .)
    PRINT           reduce using rule 11 (statement -> model_operation .)
    MODEL           reduce using rule 11 (statement -> model_operation .)
    FUN             reduce using rule 11 (statement -> model_operation .)
    RETURN          reduce using rule 11 (statement -> model_operation .)
    CONTINUE        reduce using rule 11 (statement -> model_operation .)
    BREAK           reduce using rule 11 (statement -> model_operation .)
    $end            reduce using rule 11 (statement -> model_operation .)
    RBRACE          reduce using rule 11 (statement -> model_operation .)


state 12

    (12) statement -> function_declaration .

    NEWLINE         reduce using rule 12 (statement -> function_declaration .)
    VAR             reduce using rule 12 (statement -> function_declaration .)
    IDENTIFIER      reduce using rule 12 (statement -> function_declaration .)
    IF              reduce using rule 12 (statement -> function_declaration .)
    WHILE           reduce using rule 12 (statement -> function_declaration .)
    FOR             reduce using rule 12 (statement -> function_declaration .)
    PRINT           reduce using rule 12 (statement -> function_declaration .)
    MODEL           reduce using rule 12 (statement -> function_declaration .)
    FUN             reduce using rule 12 (statement -> function_declaration .)
    RETURN          reduce using rule 12 (statement -> function_declaration .)
    CONTINUE        reduce using rule 12 (statement -> function_declaration .)
    BREAK           reduce using rule 12 (statement -> function_declaration .)
    $end            reduce using rule 12 (statement -> function_declaration .)
    RBRACE          reduce using rule 12 (statement -> function_declaration .)


state 13

    (13) statement -> return_statement .

    NEWLINE         reduce using rule 13 (statement -> return_statement .)
    VAR             reduce using rule 13 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 13 (statement -> return_statement .)
    IF              reduce using rule 13 (statement -> return_statement .)
    WHILE           reduce using rule 13 (statement -> return_statement .)
    FOR             reduce using rule 13 (statement -> return_statement .)
    PRINT           reduce using rule 13 (statement -> return_statement .)
    MODEL           reduce using rule 13 (statement -> return_statement .)
    FUN             reduce using rule 13 (statement -> return_statement .)
    RETURN          reduce using rule 13 (statement -> return_statement .)
    CONTINUE        reduce using rule 13 (statement -> return_statement .)
    BREAK           reduce using rule 13 (statement -> return_statement .)
    $end            reduce using rule 13 (statement -> return_statement .)
    RBRACE          reduce using rule 13 (statement -> return_statement .)


state 14

    (14) statement -> continue_statement .

    NEWLINE         reduce using rule 14 (statement -> continue_statement .)
    VAR             reduce using rule 14 (statement -> continue_statement .)
    IDENTIFIER      reduce using rule 14 (statement -> continue_statement .)
    IF              reduce using rule 14 (statement -> continue_statement .)
    WHILE           reduce using rule 14 (statement -> continue_statement .)
    FOR             reduce using rule 14 (statement -> continue_statement .)
    PRINT           reduce using rule 14 (statement -> continue_statement .)
    MODEL           reduce using rule 14 (statement -> continue_statement .)
    FUN             reduce using rule 14 (statement -> continue_statement .)
    RETURN          reduce using rule 14 (statement -> continue_statement .)
    CONTINUE        reduce using rule 14 (statement -> continue_statement .)
    BREAK           reduce using rule 14 (statement -> continue_statement .)
    $end            reduce using rule 14 (statement -> continue_statement .)
    RBRACE          reduce using rule 14 (statement -> continue_statement .)


state 15

    (15) statement -> break_statement .

    NEWLINE         reduce using rule 15 (statement -> break_statement .)
    VAR             reduce using rule 15 (statement -> break_statement .)
    IDENTIFIER      reduce using rule 15 (statement -> break_statement .)
    IF              reduce using rule 15 (statement -> break_statement .)
    WHILE           reduce using rule 15 (statement -> break_statement .)
    FOR             reduce using rule 15 (statement -> break_statement .)
    PRINT           reduce using rule 15 (statement -> break_statement .)
    MODEL           reduce using rule 15 (statement -> break_statement .)
    FUN             reduce using rule 15 (statement -> break_statement .)
    RETURN          reduce using rule 15 (statement -> break_statement .)
    CONTINUE        reduce using rule 15 (statement -> break_statement .)
    BREAK           reduce using rule 15 (statement -> break_statement .)
    $end            reduce using rule 15 (statement -> break_statement .)
    RBRACE          reduce using rule 15 (statement -> break_statement .)


state 16

    (16) statement -> variable_query .

    NEWLINE         reduce using rule 16 (statement -> variable_query .)
    VAR             reduce using rule 16 (statement -> variable_query .)
    IDENTIFIER      reduce using rule 16 (statement -> variable_query .)
    IF              reduce using rule 16 (statement -> variable_query .)
    WHILE           reduce using rule 16 (statement -> variable_query .)
    FOR             reduce using rule 16 (statement -> variable_query .)
    PRINT           reduce using rule 16 (statement -> variable_query .)
    MODEL           reduce using rule 16 (statement -> variable_query .)
    FUN             reduce using rule 16 (statement -> variable_query .)
    RETURN          reduce using rule 16 (statement -> variable_query .)
    CONTINUE        reduce using rule 16 (statement -> variable_query .)
    BREAK           reduce using rule 16 (statement -> variable_query .)
    $end            reduce using rule 16 (statement -> variable_query .)
    RBRACE          reduce using rule 16 (statement -> variable_query .)


state 17

    (17) statement -> NEWLINE .

    NEWLINE         reduce using rule 17 (statement -> NEWLINE .)
    VAR             reduce using rule 17 (statement -> NEWLINE .)
    IDENTIFIER      reduce using rule 17 (statement -> NEWLINE .)
    IF              reduce using rule 17 (statement -> NEWLINE .)
    WHILE           reduce using rule 17 (statement -> NEWLINE .)
    FOR             reduce using rule 17 (statement -> NEWLINE .)
    PRINT           reduce using rule 17 (statement -> NEWLINE .)
    MODEL           reduce using rule 17 (statement -> NEWLINE .)
    FUN             reduce using rule 17 (statement -> NEWLINE .)
    RETURN          reduce using rule 17 (statement -> NEWLINE .)
    CONTINUE        reduce using rule 17 (statement -> NEWLINE .)
    BREAK           reduce using rule 17 (statement -> NEWLINE .)
    $end            reduce using rule 17 (statement -> NEWLINE .)
    RBRACE          reduce using rule 17 (statement -> NEWLINE .)


state 18

    (18) var_declaration -> VAR . IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> VAR . IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> VAR . IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> VAR . IDENTIFIER EQ identifier_expression SEMICOLON

    IDENTIFIER      shift and go to state 30


state 19

    (22) assignment -> IDENTIFIER . EQ numvar_expression SEMICOLON
    (23) assignment -> IDENTIFIER . EQ bool_expression SEMICOLON
    (24) assignment -> IDENTIFIER . EQ string_expression SEMICOLON
    (25) assignment -> IDENTIFIER . EQ identifier_expression SEMICOLON
    (42) model_operation -> IDENTIFIER . DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (26) variable_query -> IDENTIFIER . SEMICOLON

    EQ              shift and go to state 31
    DOT             shift and go to state 33
    SEMICOLON       shift and go to state 32


state 20

    (27) if_statement -> IF . LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause

    LPAREN          shift and go to state 34


state 21

    (32) while_statement -> WHILE . LPAREN condition RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 35


state 22

    (33) for_statement -> FOR . LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 36


state 23

    (37) print_statement -> PRINT . LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> PRINT . LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> PRINT . LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> PRINT . LPAREN identifier_expression RPAREN SEMICOLON

    LPAREN          shift and go to state 37


state 24

    (41) model_declaration -> MODEL . IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON

    IDENTIFIER      shift and go to state 38


state 25

    (43) function_declaration -> FUN . IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE

    IDENTIFIER      shift and go to state 39


state 26

    (47) return_statement -> RETURN . numvar_expression SEMICOLON
    (48) return_statement -> RETURN . bool_expression SEMICOLON
    (49) return_statement -> RETURN . string_expression SEMICOLON
    (50) return_statement -> RETURN . identifier_expression SEMICOLON
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL
    (75) string_expression -> . STRING
    (76) identifier_expression -> . IDENTIFIER
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NOT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    NUMBER          shift and go to state 49

    numvar_expression              shift and go to state 40
    bool_expression                shift and go to state 41
    string_expression              shift and go to state 42
    identifier_expression          shift and go to state 43
    numvar                         shift and go to state 44

state 27

    (51) continue_statement -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 50


state 28

    (52) break_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 51


state 29

    (2) statement_list -> statement_list statement .

    NEWLINE         reduce using rule 2 (statement_list -> statement_list statement .)
    VAR             reduce using rule 2 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    MODEL           reduce using rule 2 (statement_list -> statement_list statement .)
    FUN             reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 2 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)


state 30

    (18) var_declaration -> VAR IDENTIFIER . EQ numvar_expression SEMICOLON
    (19) var_declaration -> VAR IDENTIFIER . EQ bool_expression SEMICOLON
    (20) var_declaration -> VAR IDENTIFIER . EQ string_expression SEMICOLON
    (21) var_declaration -> VAR IDENTIFIER . EQ identifier_expression SEMICOLON

    EQ              shift and go to state 52


state 31

    (22) assignment -> IDENTIFIER EQ . numvar_expression SEMICOLON
    (23) assignment -> IDENTIFIER EQ . bool_expression SEMICOLON
    (24) assignment -> IDENTIFIER EQ . string_expression SEMICOLON
    (25) assignment -> IDENTIFIER EQ . identifier_expression SEMICOLON
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL
    (75) string_expression -> . STRING
    (76) identifier_expression -> . IDENTIFIER
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NOT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    NUMBER          shift and go to state 49

    numvar_expression              shift and go to state 53
    bool_expression                shift and go to state 54
    string_expression              shift and go to state 55
    identifier_expression          shift and go to state 56
    numvar                         shift and go to state 44

state 32

    (26) variable_query -> IDENTIFIER SEMICOLON .

    NEWLINE         reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    VAR             reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    IF              reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    MODEL           reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    FUN             reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    CONTINUE        reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    $end            reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 26 (variable_query -> IDENTIFIER SEMICOLON .)


state 33

    (42) model_operation -> IDENTIFIER DOT . IDENTIFIER LPAREN RPAREN SEMICOLON

    IDENTIFIER      shift and go to state 57


state 34

    (27) if_statement -> IF LPAREN . condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (77) condition -> . comparison_expression
    (78) condition -> . bool_expression
    (65) comparison_expression -> . numvar_expression EQ numvar_expression
    (66) comparison_expression -> . numvar_expression NE numvar_expression
    (67) comparison_expression -> . numvar_expression EE numvar_expression
    (68) comparison_expression -> . numvar_expression LT numvar_expression
    (69) comparison_expression -> . numvar_expression LTE numvar_expression
    (70) comparison_expression -> . numvar_expression GT numvar_expression
    (71) comparison_expression -> . numvar_expression GTE numvar_expression
    (72) comparison_expression -> . bool_expression EQ bool_expression
    (73) comparison_expression -> . bool_expression NE bool_expression
    (74) comparison_expression -> . bool_expression EE bool_expression
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NOT             shift and go to state 45
    BOOL            shift and go to state 46
    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    condition                      shift and go to state 58
    comparison_expression          shift and go to state 59
    bool_expression                shift and go to state 60
    numvar_expression              shift and go to state 61
    numvar                         shift and go to state 44

state 35

    (32) while_statement -> WHILE LPAREN . condition RPAREN LBRACE statement_list RBRACE
    (77) condition -> . comparison_expression
    (78) condition -> . bool_expression
    (65) comparison_expression -> . numvar_expression EQ numvar_expression
    (66) comparison_expression -> . numvar_expression NE numvar_expression
    (67) comparison_expression -> . numvar_expression EE numvar_expression
    (68) comparison_expression -> . numvar_expression LT numvar_expression
    (69) comparison_expression -> . numvar_expression LTE numvar_expression
    (70) comparison_expression -> . numvar_expression GT numvar_expression
    (71) comparison_expression -> . numvar_expression GTE numvar_expression
    (72) comparison_expression -> . bool_expression EQ bool_expression
    (73) comparison_expression -> . bool_expression NE bool_expression
    (74) comparison_expression -> . bool_expression EE bool_expression
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NOT             shift and go to state 45
    BOOL            shift and go to state 46
    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    condition                      shift and go to state 63
    comparison_expression          shift and go to state 59
    bool_expression                shift and go to state 60
    numvar_expression              shift and go to state 61
    numvar                         shift and go to state 44

state 36

    (33) for_statement -> FOR LPAREN . for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (34) for_initialization -> . var_declaration
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON

    VAR             shift and go to state 18

    for_initialization             shift and go to state 64
    var_declaration                shift and go to state 65

state 37

    (37) print_statement -> PRINT LPAREN . numvar_expression RPAREN SEMICOLON
    (38) print_statement -> PRINT LPAREN . bool_expression RPAREN SEMICOLON
    (39) print_statement -> PRINT LPAREN . string_expression RPAREN SEMICOLON
    (40) print_statement -> PRINT LPAREN . identifier_expression RPAREN SEMICOLON
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL
    (75) string_expression -> . STRING
    (76) identifier_expression -> . IDENTIFIER
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NOT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    NUMBER          shift and go to state 49

    numvar_expression              shift and go to state 66
    bool_expression                shift and go to state 67
    string_expression              shift and go to state 68
    identifier_expression          shift and go to state 69
    numvar                         shift and go to state 44

state 38

    (41) model_declaration -> MODEL IDENTIFIER . EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON

    EQ              shift and go to state 70


state 39

    (43) function_declaration -> FUN IDENTIFIER . LPAREN parameter_list RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 71


state 40

    (47) return_statement -> RETURN numvar_expression . SEMICOLON
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 41

    (48) return_statement -> RETURN bool_expression . SEMICOLON
    (61) bool_expression -> bool_expression . AND bool_expression
    (62) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       shift and go to state 78
    AND             shift and go to state 79
    OR              shift and go to state 80


state 42

    (49) return_statement -> RETURN string_expression . SEMICOLON

    SEMICOLON       shift and go to state 81


state 43

    (50) return_statement -> RETURN identifier_expression . SEMICOLON

    SEMICOLON       shift and go to state 82


state 44

    (58) numvar_expression -> numvar .

    SEMICOLON       reduce using rule 58 (numvar_expression -> numvar .)
    PLUS            reduce using rule 58 (numvar_expression -> numvar .)
    MINUS           reduce using rule 58 (numvar_expression -> numvar .)
    MUL             reduce using rule 58 (numvar_expression -> numvar .)
    DIV             reduce using rule 58 (numvar_expression -> numvar .)
    POW             reduce using rule 58 (numvar_expression -> numvar .)
    EQ              reduce using rule 58 (numvar_expression -> numvar .)
    NE              reduce using rule 58 (numvar_expression -> numvar .)
    EE              reduce using rule 58 (numvar_expression -> numvar .)
    LT              reduce using rule 58 (numvar_expression -> numvar .)
    LTE             reduce using rule 58 (numvar_expression -> numvar .)
    GT              reduce using rule 58 (numvar_expression -> numvar .)
    GTE             reduce using rule 58 (numvar_expression -> numvar .)
    RPAREN          reduce using rule 58 (numvar_expression -> numvar .)
    RBRACKET        reduce using rule 58 (numvar_expression -> numvar .)
    COMMA           reduce using rule 58 (numvar_expression -> numvar .)


state 45

    (63) bool_expression -> NOT . bool_expression
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL

    NOT             shift and go to state 45
    BOOL            shift and go to state 46

    bool_expression                shift and go to state 83

state 46

    (64) bool_expression -> BOOL .

    SEMICOLON       reduce using rule 64 (bool_expression -> BOOL .)
    AND             reduce using rule 64 (bool_expression -> BOOL .)
    OR              reduce using rule 64 (bool_expression -> BOOL .)
    EQ              reduce using rule 64 (bool_expression -> BOOL .)
    NE              reduce using rule 64 (bool_expression -> BOOL .)
    EE              reduce using rule 64 (bool_expression -> BOOL .)
    RPAREN          reduce using rule 64 (bool_expression -> BOOL .)


state 47

    (75) string_expression -> STRING .

    SEMICOLON       reduce using rule 75 (string_expression -> STRING .)
    RPAREN          reduce using rule 75 (string_expression -> STRING .)


state 48

    (76) identifier_expression -> IDENTIFIER .
    (60) numvar -> IDENTIFIER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 60 (numvar -> IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 60 (numvar -> IDENTIFIER .)
    SEMICOLON       reduce using rule 60 (numvar -> IDENTIFIER .)
    PLUS            reduce using rule 60 (numvar -> IDENTIFIER .)
    MINUS           reduce using rule 60 (numvar -> IDENTIFIER .)
    MUL             reduce using rule 60 (numvar -> IDENTIFIER .)
    DIV             reduce using rule 60 (numvar -> IDENTIFIER .)
    POW             reduce using rule 60 (numvar -> IDENTIFIER .)
    RPAREN          reduce using rule 60 (numvar -> IDENTIFIER .)

  ! SEMICOLON       [ reduce using rule 76 (identifier_expression -> IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 76 (identifier_expression -> IDENTIFIER .) ]


state 49

    (59) numvar -> NUMBER .

    SEMICOLON       reduce using rule 59 (numvar -> NUMBER .)
    PLUS            reduce using rule 59 (numvar -> NUMBER .)
    MINUS           reduce using rule 59 (numvar -> NUMBER .)
    MUL             reduce using rule 59 (numvar -> NUMBER .)
    DIV             reduce using rule 59 (numvar -> NUMBER .)
    POW             reduce using rule 59 (numvar -> NUMBER .)
    EQ              reduce using rule 59 (numvar -> NUMBER .)
    NE              reduce using rule 59 (numvar -> NUMBER .)
    EE              reduce using rule 59 (numvar -> NUMBER .)
    LT              reduce using rule 59 (numvar -> NUMBER .)
    LTE             reduce using rule 59 (numvar -> NUMBER .)
    GT              reduce using rule 59 (numvar -> NUMBER .)
    GTE             reduce using rule 59 (numvar -> NUMBER .)
    RPAREN          reduce using rule 59 (numvar -> NUMBER .)
    RBRACKET        reduce using rule 59 (numvar -> NUMBER .)
    COMMA           reduce using rule 59 (numvar -> NUMBER .)


state 50

    (51) continue_statement -> CONTINUE SEMICOLON .

    NEWLINE         reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    VAR             reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    IDENTIFIER      reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    IF              reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    PRINT           reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    MODEL           reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    FUN             reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    $end            reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)
    RBRACE          reduce using rule 51 (continue_statement -> CONTINUE SEMICOLON .)


state 51

    (52) break_statement -> BREAK SEMICOLON .

    NEWLINE         reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    VAR             reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    IF              reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    PRINT           reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    MODEL           reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    FUN             reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    $end            reduce using rule 52 (break_statement -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 52 (break_statement -> BREAK SEMICOLON .)


state 52

    (18) var_declaration -> VAR IDENTIFIER EQ . numvar_expression SEMICOLON
    (19) var_declaration -> VAR IDENTIFIER EQ . bool_expression SEMICOLON
    (20) var_declaration -> VAR IDENTIFIER EQ . string_expression SEMICOLON
    (21) var_declaration -> VAR IDENTIFIER EQ . identifier_expression SEMICOLON
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL
    (75) string_expression -> . STRING
    (76) identifier_expression -> . IDENTIFIER
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NOT             shift and go to state 45
    BOOL            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    NUMBER          shift and go to state 49

    numvar_expression              shift and go to state 84
    bool_expression                shift and go to state 85
    string_expression              shift and go to state 86
    identifier_expression          shift and go to state 87
    numvar                         shift and go to state 44

state 53

    (22) assignment -> IDENTIFIER EQ numvar_expression . SEMICOLON
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       shift and go to state 88
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 54

    (23) assignment -> IDENTIFIER EQ bool_expression . SEMICOLON
    (61) bool_expression -> bool_expression . AND bool_expression
    (62) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       shift and go to state 89
    AND             shift and go to state 79
    OR              shift and go to state 80


state 55

    (24) assignment -> IDENTIFIER EQ string_expression . SEMICOLON

    SEMICOLON       shift and go to state 90


state 56

    (25) assignment -> IDENTIFIER EQ identifier_expression . SEMICOLON

    SEMICOLON       shift and go to state 91


state 57

    (42) model_operation -> IDENTIFIER DOT IDENTIFIER . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 92


state 58

    (27) if_statement -> IF LPAREN condition . RPAREN LBRACE statement_list RBRACE elif_clause else_clause

    RPAREN          shift and go to state 93


state 59

    (77) condition -> comparison_expression .

    RPAREN          reduce using rule 77 (condition -> comparison_expression .)
    SEMICOLON       reduce using rule 77 (condition -> comparison_expression .)


state 60

    (78) condition -> bool_expression .
    (72) comparison_expression -> bool_expression . EQ bool_expression
    (73) comparison_expression -> bool_expression . NE bool_expression
    (74) comparison_expression -> bool_expression . EE bool_expression
    (61) bool_expression -> bool_expression . AND bool_expression
    (62) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 78 (condition -> bool_expression .)
    SEMICOLON       reduce using rule 78 (condition -> bool_expression .)
    EQ              shift and go to state 94
    NE              shift and go to state 95
    EE              shift and go to state 96
    AND             shift and go to state 79
    OR              shift and go to state 80


state 61

    (65) comparison_expression -> numvar_expression . EQ numvar_expression
    (66) comparison_expression -> numvar_expression . NE numvar_expression
    (67) comparison_expression -> numvar_expression . EE numvar_expression
    (68) comparison_expression -> numvar_expression . LT numvar_expression
    (69) comparison_expression -> numvar_expression . LTE numvar_expression
    (70) comparison_expression -> numvar_expression . GT numvar_expression
    (71) comparison_expression -> numvar_expression . GTE numvar_expression
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    EQ              shift and go to state 97
    NE              shift and go to state 98
    EE              shift and go to state 99
    LT              shift and go to state 100
    LTE             shift and go to state 101
    GT              shift and go to state 102
    GTE             shift and go to state 103
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 62

    (60) numvar -> IDENTIFIER .

    EQ              reduce using rule 60 (numvar -> IDENTIFIER .)
    NE              reduce using rule 60 (numvar -> IDENTIFIER .)
    EE              reduce using rule 60 (numvar -> IDENTIFIER .)
    LT              reduce using rule 60 (numvar -> IDENTIFIER .)
    LTE             reduce using rule 60 (numvar -> IDENTIFIER .)
    GT              reduce using rule 60 (numvar -> IDENTIFIER .)
    GTE             reduce using rule 60 (numvar -> IDENTIFIER .)
    PLUS            reduce using rule 60 (numvar -> IDENTIFIER .)
    MINUS           reduce using rule 60 (numvar -> IDENTIFIER .)
    MUL             reduce using rule 60 (numvar -> IDENTIFIER .)
    DIV             reduce using rule 60 (numvar -> IDENTIFIER .)
    POW             reduce using rule 60 (numvar -> IDENTIFIER .)
    SEMICOLON       reduce using rule 60 (numvar -> IDENTIFIER .)
    RPAREN          reduce using rule 60 (numvar -> IDENTIFIER .)
    RBRACKET        reduce using rule 60 (numvar -> IDENTIFIER .)
    COMMA           reduce using rule 60 (numvar -> IDENTIFIER .)


state 63

    (32) while_statement -> WHILE LPAREN condition . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 104


state 64

    (33) for_statement -> FOR LPAREN for_initialization . condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (77) condition -> . comparison_expression
    (78) condition -> . bool_expression
    (65) comparison_expression -> . numvar_expression EQ numvar_expression
    (66) comparison_expression -> . numvar_expression NE numvar_expression
    (67) comparison_expression -> . numvar_expression EE numvar_expression
    (68) comparison_expression -> . numvar_expression LT numvar_expression
    (69) comparison_expression -> . numvar_expression LTE numvar_expression
    (70) comparison_expression -> . numvar_expression GT numvar_expression
    (71) comparison_expression -> . numvar_expression GTE numvar_expression
    (72) comparison_expression -> . bool_expression EQ bool_expression
    (73) comparison_expression -> . bool_expression NE bool_expression
    (74) comparison_expression -> . bool_expression EE bool_expression
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NOT             shift and go to state 45
    BOOL            shift and go to state 46
    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    condition                      shift and go to state 105
    comparison_expression          shift and go to state 59
    bool_expression                shift and go to state 60
    numvar_expression              shift and go to state 61
    numvar                         shift and go to state 44

state 65

    (34) for_initialization -> var_declaration .

    NOT             reduce using rule 34 (for_initialization -> var_declaration .)
    BOOL            reduce using rule 34 (for_initialization -> var_declaration .)
    NUMBER          reduce using rule 34 (for_initialization -> var_declaration .)
    IDENTIFIER      reduce using rule 34 (for_initialization -> var_declaration .)


state 66

    (37) print_statement -> PRINT LPAREN numvar_expression . RPAREN SEMICOLON
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          shift and go to state 106
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 67

    (38) print_statement -> PRINT LPAREN bool_expression . RPAREN SEMICOLON
    (61) bool_expression -> bool_expression . AND bool_expression
    (62) bool_expression -> bool_expression . OR bool_expression

    RPAREN          shift and go to state 107
    AND             shift and go to state 79
    OR              shift and go to state 80


state 68

    (39) print_statement -> PRINT LPAREN string_expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 108


state 69

    (40) print_statement -> PRINT LPAREN identifier_expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 109


state 70

    (41) model_declaration -> MODEL IDENTIFIER EQ . LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON

    LPAREN          shift and go to state 110


state 71

    (43) function_declaration -> FUN IDENTIFIER LPAREN . parameter_list RPAREN LBRACE statement_list RBRACE
    (44) parameter_list -> . parameter_list COMMA IDENTIFIER
    (45) parameter_list -> . IDENTIFIER
    (46) parameter_list -> . empty
    (88) empty -> .

    IDENTIFIER      shift and go to state 111
    RPAREN          reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)

    parameter_list                 shift and go to state 112
    empty                          shift and go to state 113

state 72

    (47) return_statement -> RETURN numvar_expression SEMICOLON .

    NEWLINE         reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    VAR             reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    IF              reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    WHILE           reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    FOR             reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    PRINT           reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    MODEL           reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    FUN             reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    RETURN          reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    CONTINUE        reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    BREAK           reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    $end            reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)
    RBRACE          reduce using rule 47 (return_statement -> RETURN numvar_expression SEMICOLON .)


state 73

    (53) numvar_expression -> numvar_expression PLUS . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 114
    numvar                         shift and go to state 44

state 74

    (54) numvar_expression -> numvar_expression MINUS . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 115
    numvar                         shift and go to state 44

state 75

    (55) numvar_expression -> numvar_expression MUL . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 116
    numvar                         shift and go to state 44

state 76

    (56) numvar_expression -> numvar_expression DIV . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 117
    numvar                         shift and go to state 44

state 77

    (57) numvar_expression -> numvar_expression POW . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 118
    numvar                         shift and go to state 44

state 78

    (48) return_statement -> RETURN bool_expression SEMICOLON .

    NEWLINE         reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    VAR             reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    IF              reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    WHILE           reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    FOR             reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    PRINT           reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    MODEL           reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    FUN             reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    RETURN          reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    CONTINUE        reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    BREAK           reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    $end            reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)
    RBRACE          reduce using rule 48 (return_statement -> RETURN bool_expression SEMICOLON .)


state 79

    (61) bool_expression -> bool_expression AND . bool_expression
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL

    NOT             shift and go to state 45
    BOOL            shift and go to state 46

    bool_expression                shift and go to state 119

state 80

    (62) bool_expression -> bool_expression OR . bool_expression
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL

    NOT             shift and go to state 45
    BOOL            shift and go to state 46

    bool_expression                shift and go to state 120

state 81

    (49) return_statement -> RETURN string_expression SEMICOLON .

    NEWLINE         reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    VAR             reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    IF              reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    WHILE           reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    FOR             reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    PRINT           reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    MODEL           reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    FUN             reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    RETURN          reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    CONTINUE        reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    BREAK           reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    $end            reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)
    RBRACE          reduce using rule 49 (return_statement -> RETURN string_expression SEMICOLON .)


state 82

    (50) return_statement -> RETURN identifier_expression SEMICOLON .

    NEWLINE         reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    VAR             reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    IF              reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    WHILE           reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    FOR             reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    PRINT           reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    MODEL           reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    FUN             reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    RETURN          reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    CONTINUE        reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    BREAK           reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    $end            reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)
    RBRACE          reduce using rule 50 (return_statement -> RETURN identifier_expression SEMICOLON .)


state 83

    (63) bool_expression -> NOT bool_expression .
    (61) bool_expression -> bool_expression . AND bool_expression
    (62) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       reduce using rule 63 (bool_expression -> NOT bool_expression .)
    AND             reduce using rule 63 (bool_expression -> NOT bool_expression .)
    OR              reduce using rule 63 (bool_expression -> NOT bool_expression .)
    EQ              reduce using rule 63 (bool_expression -> NOT bool_expression .)
    NE              reduce using rule 63 (bool_expression -> NOT bool_expression .)
    EE              reduce using rule 63 (bool_expression -> NOT bool_expression .)
    RPAREN          reduce using rule 63 (bool_expression -> NOT bool_expression .)

  ! AND             [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]


state 84

    (18) var_declaration -> VAR IDENTIFIER EQ numvar_expression . SEMICOLON
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       shift and go to state 121
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 85

    (19) var_declaration -> VAR IDENTIFIER EQ bool_expression . SEMICOLON
    (61) bool_expression -> bool_expression . AND bool_expression
    (62) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       shift and go to state 122
    AND             shift and go to state 79
    OR              shift and go to state 80


state 86

    (20) var_declaration -> VAR IDENTIFIER EQ string_expression . SEMICOLON

    SEMICOLON       shift and go to state 123


state 87

    (21) var_declaration -> VAR IDENTIFIER EQ identifier_expression . SEMICOLON

    SEMICOLON       shift and go to state 124


state 88

    (22) assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .

    NEWLINE         reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    VAR             reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    IF              reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    WHILE           reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    FOR             reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    PRINT           reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    MODEL           reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    FUN             reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    RETURN          reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    CONTINUE        reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    BREAK           reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    $end            reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    RBRACE          reduce using rule 22 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)


state 89

    (23) assignment -> IDENTIFIER EQ bool_expression SEMICOLON .

    NEWLINE         reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    VAR             reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    IF              reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    WHILE           reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    FOR             reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    PRINT           reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    MODEL           reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    FUN             reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    RETURN          reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    CONTINUE        reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    BREAK           reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    $end            reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    RBRACE          reduce using rule 23 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)


state 90

    (24) assignment -> IDENTIFIER EQ string_expression SEMICOLON .

    NEWLINE         reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    VAR             reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    IF              reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    WHILE           reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    FOR             reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    PRINT           reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    MODEL           reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    FUN             reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    RETURN          reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    CONTINUE        reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    BREAK           reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    $end            reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    RBRACE          reduce using rule 24 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)


state 91

    (25) assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .

    NEWLINE         reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    VAR             reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    IF              reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    WHILE           reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    FOR             reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    PRINT           reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    MODEL           reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    FUN             reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    RETURN          reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    CONTINUE        reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    BREAK           reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    $end            reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    RBRACE          reduce using rule 25 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)


state 92

    (42) model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 125


state 93

    (27) if_statement -> IF LPAREN condition RPAREN . LBRACE statement_list RBRACE elif_clause else_clause

    LBRACE          shift and go to state 126


state 94

    (72) comparison_expression -> bool_expression EQ . bool_expression
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL

    NOT             shift and go to state 45
    BOOL            shift and go to state 46

    bool_expression                shift and go to state 127

state 95

    (73) comparison_expression -> bool_expression NE . bool_expression
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL

    NOT             shift and go to state 45
    BOOL            shift and go to state 46

    bool_expression                shift and go to state 128

state 96

    (74) comparison_expression -> bool_expression EE . bool_expression
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL

    NOT             shift and go to state 45
    BOOL            shift and go to state 46

    bool_expression                shift and go to state 129

state 97

    (65) comparison_expression -> numvar_expression EQ . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 130
    numvar                         shift and go to state 44

state 98

    (66) comparison_expression -> numvar_expression NE . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 131
    numvar                         shift and go to state 44

state 99

    (67) comparison_expression -> numvar_expression EE . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 132
    numvar                         shift and go to state 44

state 100

    (68) comparison_expression -> numvar_expression LT . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 133
    numvar                         shift and go to state 44

state 101

    (69) comparison_expression -> numvar_expression LTE . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 134
    numvar                         shift and go to state 44

state 102

    (70) comparison_expression -> numvar_expression GT . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 135
    numvar                         shift and go to state 44

state 103

    (71) comparison_expression -> numvar_expression GTE . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 136
    numvar                         shift and go to state 44

state 104

    (32) while_statement -> WHILE LPAREN condition RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 137


state 105

    (33) for_statement -> FOR LPAREN for_initialization condition . SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    SEMICOLON       shift and go to state 138


state 106

    (37) print_statement -> PRINT LPAREN numvar_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 139


state 107

    (38) print_statement -> PRINT LPAREN bool_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 140


state 108

    (39) print_statement -> PRINT LPAREN string_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 141


state 109

    (40) print_statement -> PRINT LPAREN identifier_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 142


state 110

    (41) model_declaration -> MODEL IDENTIFIER EQ LPAREN . NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON

    NUMBER          shift and go to state 143


state 111

    (45) parameter_list -> IDENTIFIER .

    RPAREN          reduce using rule 45 (parameter_list -> IDENTIFIER .)
    COMMA           reduce using rule 45 (parameter_list -> IDENTIFIER .)


state 112

    (43) function_declaration -> FUN IDENTIFIER LPAREN parameter_list . RPAREN LBRACE statement_list RBRACE
    (44) parameter_list -> parameter_list . COMMA IDENTIFIER

    RPAREN          shift and go to state 144
    COMMA           shift and go to state 145


state 113

    (46) parameter_list -> empty .

    RPAREN          reduce using rule 46 (parameter_list -> empty .)
    COMMA           reduce using rule 46 (parameter_list -> empty .)


state 114

    (53) numvar_expression -> numvar_expression PLUS numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    PLUS            reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    MINUS           reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    EQ              reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    NE              reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    EE              reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    LT              reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    LTE             reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    GT              reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    GTE             reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    RPAREN          reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    RBRACKET        reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    COMMA           reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77

  ! MUL             [ reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .) ]
  ! DIV             [ reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .) ]
  ! POW             [ reduce using rule 53 (numvar_expression -> numvar_expression PLUS numvar_expression .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]


state 115

    (54) numvar_expression -> numvar_expression MINUS numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    PLUS            reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    MINUS           reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    EQ              reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    NE              reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    EE              reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    LT              reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    LTE             reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    GT              reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    GTE             reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    RPAREN          reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    RBRACKET        reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    COMMA           reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77

  ! MUL             [ reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .) ]
  ! DIV             [ reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .) ]
  ! POW             [ reduce using rule 54 (numvar_expression -> numvar_expression MINUS numvar_expression .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]


state 116

    (55) numvar_expression -> numvar_expression MUL numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    PLUS            reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    MINUS           reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    MUL             reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    DIV             reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    EQ              reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    NE              reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    EE              reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    LT              reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    LTE             reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    GT              reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    GTE             reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    RPAREN          reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    RBRACKET        reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    COMMA           reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .)
    POW             shift and go to state 77

  ! POW             [ reduce using rule 55 (numvar_expression -> numvar_expression MUL numvar_expression .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]
  ! MUL             [ shift and go to state 75 ]
  ! DIV             [ shift and go to state 76 ]


state 117

    (56) numvar_expression -> numvar_expression DIV numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    PLUS            reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    MINUS           reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    MUL             reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    DIV             reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    EQ              reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    NE              reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    EE              reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    LT              reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    LTE             reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    GT              reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    GTE             reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    RPAREN          reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    RBRACKET        reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    COMMA           reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .)
    POW             shift and go to state 77

  ! POW             [ reduce using rule 56 (numvar_expression -> numvar_expression DIV numvar_expression .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]
  ! MUL             [ shift and go to state 75 ]
  ! DIV             [ shift and go to state 76 ]


state 118

    (57) numvar_expression -> numvar_expression POW numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    PLUS            reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    MINUS           reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    MUL             reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    DIV             reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    EQ              reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    NE              reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    EE              reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    LT              reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    LTE             reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    GT              reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    GTE             reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    RPAREN          reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    RBRACKET        reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    COMMA           reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .)
    POW             shift and go to state 77

  ! POW             [ reduce using rule 57 (numvar_expression -> numvar_expression POW numvar_expression .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! MINUS           [ shift and go to state 74 ]
  ! MUL             [ shift and go to state 75 ]
  ! DIV             [ shift and go to state 76 ]


state 119

    (61) bool_expression -> bool_expression AND bool_expression .
    (61) bool_expression -> bool_expression . AND bool_expression
    (62) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       reduce using rule 61 (bool_expression -> bool_expression AND bool_expression .)
    AND             reduce using rule 61 (bool_expression -> bool_expression AND bool_expression .)
    OR              reduce using rule 61 (bool_expression -> bool_expression AND bool_expression .)
    EQ              reduce using rule 61 (bool_expression -> bool_expression AND bool_expression .)
    NE              reduce using rule 61 (bool_expression -> bool_expression AND bool_expression .)
    EE              reduce using rule 61 (bool_expression -> bool_expression AND bool_expression .)
    RPAREN          reduce using rule 61 (bool_expression -> bool_expression AND bool_expression .)

  ! AND             [ shift and go to state 79 ]
  ! OR              [ shift and go to state 80 ]


state 120

    (62) bool_expression -> bool_expression OR bool_expression .
    (61) bool_expression -> bool_expression . AND bool_expression
    (62) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       reduce using rule 62 (bool_expression -> bool_expression OR bool_expression .)
    OR              reduce using rule 62 (bool_expression -> bool_expression OR bool_expression .)
    EQ              reduce using rule 62 (bool_expression -> bool_expression OR bool_expression .)
    NE              reduce using rule 62 (bool_expression -> bool_expression OR bool_expression .)
    EE              reduce using rule 62 (bool_expression -> bool_expression OR bool_expression .)
    RPAREN          reduce using rule 62 (bool_expression -> bool_expression OR bool_expression .)
    AND             shift and go to state 79

  ! AND             [ reduce using rule 62 (bool_expression -> bool_expression OR bool_expression .) ]
  ! OR              [ shift and go to state 80 ]


state 121

    (18) var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .

    NEWLINE         reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    VAR             reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    IF              reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    WHILE           reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    FOR             reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    PRINT           reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    MODEL           reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    FUN             reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    RETURN          reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    CONTINUE        reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    BREAK           reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    $end            reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    NOT             reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    BOOL            reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    NUMBER          reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    RBRACE          reduce using rule 18 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)


state 122

    (19) var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .

    NEWLINE         reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    VAR             reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    IF              reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    WHILE           reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    FOR             reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    PRINT           reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    MODEL           reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    FUN             reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    RETURN          reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    CONTINUE        reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    BREAK           reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    $end            reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    NOT             reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    BOOL            reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    NUMBER          reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    RBRACE          reduce using rule 19 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)


state 123

    (20) var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .

    NEWLINE         reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    VAR             reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    IF              reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    WHILE           reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    FOR             reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    PRINT           reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    MODEL           reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    FUN             reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    RETURN          reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    CONTINUE        reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    BREAK           reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    $end            reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    NOT             reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    BOOL            reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    NUMBER          reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    RBRACE          reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)


state 124

    (21) var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .

    NEWLINE         reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    VAR             reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    IF              reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    WHILE           reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    FOR             reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    PRINT           reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    MODEL           reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    FUN             reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    RETURN          reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    CONTINUE        reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    BREAK           reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    $end            reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    NOT             reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    BOOL            reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    NUMBER          reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    RBRACE          reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)


state 125

    (42) model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 146


state 126

    (27) if_statement -> IF LPAREN condition RPAREN LBRACE . statement_list RBRACE elif_clause else_clause
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement_list                 shift and go to state 147
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 127

    (72) comparison_expression -> bool_expression EQ bool_expression .
    (61) bool_expression -> bool_expression . AND bool_expression
    (62) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 72 (comparison_expression -> bool_expression EQ bool_expression .)
    SEMICOLON       reduce using rule 72 (comparison_expression -> bool_expression EQ bool_expression .)
    AND             shift and go to state 79
    OR              shift and go to state 80


state 128

    (73) comparison_expression -> bool_expression NE bool_expression .
    (61) bool_expression -> bool_expression . AND bool_expression
    (62) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 73 (comparison_expression -> bool_expression NE bool_expression .)
    SEMICOLON       reduce using rule 73 (comparison_expression -> bool_expression NE bool_expression .)
    AND             shift and go to state 79
    OR              shift and go to state 80


state 129

    (74) comparison_expression -> bool_expression EE bool_expression .
    (61) bool_expression -> bool_expression . AND bool_expression
    (62) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 74 (comparison_expression -> bool_expression EE bool_expression .)
    SEMICOLON       reduce using rule 74 (comparison_expression -> bool_expression EE bool_expression .)
    AND             shift and go to state 79
    OR              shift and go to state 80


state 130

    (65) comparison_expression -> numvar_expression EQ numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 65 (comparison_expression -> numvar_expression EQ numvar_expression .)
    SEMICOLON       reduce using rule 65 (comparison_expression -> numvar_expression EQ numvar_expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 131

    (66) comparison_expression -> numvar_expression NE numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 66 (comparison_expression -> numvar_expression NE numvar_expression .)
    SEMICOLON       reduce using rule 66 (comparison_expression -> numvar_expression NE numvar_expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 132

    (67) comparison_expression -> numvar_expression EE numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 67 (comparison_expression -> numvar_expression EE numvar_expression .)
    SEMICOLON       reduce using rule 67 (comparison_expression -> numvar_expression EE numvar_expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 133

    (68) comparison_expression -> numvar_expression LT numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 68 (comparison_expression -> numvar_expression LT numvar_expression .)
    SEMICOLON       reduce using rule 68 (comparison_expression -> numvar_expression LT numvar_expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 134

    (69) comparison_expression -> numvar_expression LTE numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 69 (comparison_expression -> numvar_expression LTE numvar_expression .)
    SEMICOLON       reduce using rule 69 (comparison_expression -> numvar_expression LTE numvar_expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 135

    (70) comparison_expression -> numvar_expression GT numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 70 (comparison_expression -> numvar_expression GT numvar_expression .)
    SEMICOLON       reduce using rule 70 (comparison_expression -> numvar_expression GT numvar_expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 136

    (71) comparison_expression -> numvar_expression GTE numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 71 (comparison_expression -> numvar_expression GTE numvar_expression .)
    SEMICOLON       reduce using rule 71 (comparison_expression -> numvar_expression GTE numvar_expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 137

    (32) while_statement -> WHILE LPAREN condition RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement_list                 shift and go to state 148
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 138

    (33) for_statement -> FOR LPAREN for_initialization condition SEMICOLON . for_update RPAREN LBRACE statement_list RBRACE
    (35) for_update -> . IDENTIFIER EQ numvar_expression
    (36) for_update -> . empty
    (88) empty -> .

    IDENTIFIER      shift and go to state 150
    RPAREN          reduce using rule 88 (empty -> .)

    for_update                     shift and go to state 149
    empty                          shift and go to state 151

state 139

    (37) print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .

    NEWLINE         reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    VAR             reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    IF              reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    FOR             reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    MODEL           reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    FUN             reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    $end            reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 37 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)


state 140

    (38) print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .

    NEWLINE         reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    VAR             reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    IF              reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    FOR             reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    MODEL           reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    FUN             reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    $end            reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 38 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)


state 141

    (39) print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .

    NEWLINE         reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    VAR             reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    IF              reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    FOR             reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    MODEL           reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    FUN             reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    $end            reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 39 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)


state 142

    (40) print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .

    NEWLINE         reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    VAR             reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    IF              reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    FOR             reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    MODEL           reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    FUN             reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    $end            reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 40 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)


state 143

    (41) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER . COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON

    COMMA           shift and go to state 152


state 144

    (43) function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 153


state 145

    (44) parameter_list -> parameter_list COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 154


state 146

    (42) model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .

    NEWLINE         reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    MODEL           reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    FUN             reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 42 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)


state 147

    (27) if_statement -> IF LPAREN condition RPAREN LBRACE statement_list . RBRACE elif_clause else_clause
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    RBRACE          shift and go to state 155
    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement                      shift and go to state 29
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 148

    (32) while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    RBRACE          shift and go to state 156
    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement                      shift and go to state 29
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 149

    (33) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 157


state 150

    (35) for_update -> IDENTIFIER . EQ numvar_expression

    EQ              shift and go to state 158


state 151

    (36) for_update -> empty .

    RPAREN          reduce using rule 36 (for_update -> empty .)


state 152

    (41) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA . NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON

    NUMBER          shift and go to state 159


state 153

    (43) function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement_list                 shift and go to state 160
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 154

    (44) parameter_list -> parameter_list COMMA IDENTIFIER .

    RPAREN          reduce using rule 44 (parameter_list -> parameter_list COMMA IDENTIFIER .)
    COMMA           reduce using rule 44 (parameter_list -> parameter_list COMMA IDENTIFIER .)


state 155

    (27) if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE . elif_clause else_clause
    (28) elif_clause -> . ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause
    (29) elif_clause -> . empty
    (88) empty -> .

    ELIF            shift and go to state 162
    ELSE            reduce using rule 88 (empty -> .)
    NEWLINE         reduce using rule 88 (empty -> .)
    VAR             reduce using rule 88 (empty -> .)
    IDENTIFIER      reduce using rule 88 (empty -> .)
    IF              reduce using rule 88 (empty -> .)
    WHILE           reduce using rule 88 (empty -> .)
    FOR             reduce using rule 88 (empty -> .)
    PRINT           reduce using rule 88 (empty -> .)
    MODEL           reduce using rule 88 (empty -> .)
    FUN             reduce using rule 88 (empty -> .)
    RETURN          reduce using rule 88 (empty -> .)
    CONTINUE        reduce using rule 88 (empty -> .)
    BREAK           reduce using rule 88 (empty -> .)
    $end            reduce using rule 88 (empty -> .)
    RBRACE          reduce using rule 88 (empty -> .)

    elif_clause                    shift and go to state 161
    empty                          shift and go to state 163

state 156

    (32) while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .

    NEWLINE         reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    VAR             reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    MODEL           reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    FUN             reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 32 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)


state 157

    (33) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 164


state 158

    (35) for_update -> IDENTIFIER EQ . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 165
    numvar                         shift and go to state 44

state 159

    (41) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER . COMMA NUMBER COMMA matrix RPAREN SEMICOLON

    COMMA           shift and go to state 166


state 160

    (43) function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    RBRACE          shift and go to state 167
    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement                      shift and go to state 29
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 161

    (27) if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause . else_clause
    (30) else_clause -> . ELSE LBRACE statement_list RBRACE
    (31) else_clause -> . empty
    (88) empty -> .

    ELSE            shift and go to state 169
    NEWLINE         reduce using rule 88 (empty -> .)
    VAR             reduce using rule 88 (empty -> .)
    IDENTIFIER      reduce using rule 88 (empty -> .)
    IF              reduce using rule 88 (empty -> .)
    WHILE           reduce using rule 88 (empty -> .)
    FOR             reduce using rule 88 (empty -> .)
    PRINT           reduce using rule 88 (empty -> .)
    MODEL           reduce using rule 88 (empty -> .)
    FUN             reduce using rule 88 (empty -> .)
    RETURN          reduce using rule 88 (empty -> .)
    CONTINUE        reduce using rule 88 (empty -> .)
    BREAK           reduce using rule 88 (empty -> .)
    $end            reduce using rule 88 (empty -> .)
    RBRACE          reduce using rule 88 (empty -> .)

    else_clause                    shift and go to state 168
    empty                          shift and go to state 170

state 162

    (28) elif_clause -> ELIF . LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause

    LPAREN          shift and go to state 171


state 163

    (29) elif_clause -> empty .

    ELSE            reduce using rule 29 (elif_clause -> empty .)
    NEWLINE         reduce using rule 29 (elif_clause -> empty .)
    VAR             reduce using rule 29 (elif_clause -> empty .)
    IDENTIFIER      reduce using rule 29 (elif_clause -> empty .)
    IF              reduce using rule 29 (elif_clause -> empty .)
    WHILE           reduce using rule 29 (elif_clause -> empty .)
    FOR             reduce using rule 29 (elif_clause -> empty .)
    PRINT           reduce using rule 29 (elif_clause -> empty .)
    MODEL           reduce using rule 29 (elif_clause -> empty .)
    FUN             reduce using rule 29 (elif_clause -> empty .)
    RETURN          reduce using rule 29 (elif_clause -> empty .)
    CONTINUE        reduce using rule 29 (elif_clause -> empty .)
    BREAK           reduce using rule 29 (elif_clause -> empty .)
    $end            reduce using rule 29 (elif_clause -> empty .)
    RBRACE          reduce using rule 29 (elif_clause -> empty .)


state 164

    (33) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement_list                 shift and go to state 172
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 165

    (35) for_update -> IDENTIFIER EQ numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 35 (for_update -> IDENTIFIER EQ numvar_expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 166

    (41) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA . NUMBER COMMA matrix RPAREN SEMICOLON

    NUMBER          shift and go to state 173


state 167

    (43) function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .

    NEWLINE         reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    VAR             reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    MODEL           reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    FUN             reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 43 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)


state 168

    (27) if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .

    NEWLINE         reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    VAR             reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    IDENTIFIER      reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    IF              reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    WHILE           reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    FOR             reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    PRINT           reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    MODEL           reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    FUN             reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    RETURN          reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    CONTINUE        reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    BREAK           reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    $end            reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    RBRACE          reduce using rule 27 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)


state 169

    (30) else_clause -> ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 174


state 170

    (31) else_clause -> empty .

    NEWLINE         reduce using rule 31 (else_clause -> empty .)
    VAR             reduce using rule 31 (else_clause -> empty .)
    IDENTIFIER      reduce using rule 31 (else_clause -> empty .)
    IF              reduce using rule 31 (else_clause -> empty .)
    WHILE           reduce using rule 31 (else_clause -> empty .)
    FOR             reduce using rule 31 (else_clause -> empty .)
    PRINT           reduce using rule 31 (else_clause -> empty .)
    MODEL           reduce using rule 31 (else_clause -> empty .)
    FUN             reduce using rule 31 (else_clause -> empty .)
    RETURN          reduce using rule 31 (else_clause -> empty .)
    CONTINUE        reduce using rule 31 (else_clause -> empty .)
    BREAK           reduce using rule 31 (else_clause -> empty .)
    $end            reduce using rule 31 (else_clause -> empty .)
    RBRACE          reduce using rule 31 (else_clause -> empty .)


state 171

    (28) elif_clause -> ELIF LPAREN . condition RPAREN LBRACE statement_list RBRACE elif_clause
    (77) condition -> . comparison_expression
    (78) condition -> . bool_expression
    (65) comparison_expression -> . numvar_expression EQ numvar_expression
    (66) comparison_expression -> . numvar_expression NE numvar_expression
    (67) comparison_expression -> . numvar_expression EE numvar_expression
    (68) comparison_expression -> . numvar_expression LT numvar_expression
    (69) comparison_expression -> . numvar_expression LTE numvar_expression
    (70) comparison_expression -> . numvar_expression GT numvar_expression
    (71) comparison_expression -> . numvar_expression GTE numvar_expression
    (72) comparison_expression -> . bool_expression EQ bool_expression
    (73) comparison_expression -> . bool_expression NE bool_expression
    (74) comparison_expression -> . bool_expression EE bool_expression
    (61) bool_expression -> . bool_expression AND bool_expression
    (62) bool_expression -> . bool_expression OR bool_expression
    (63) bool_expression -> . NOT bool_expression
    (64) bool_expression -> . BOOL
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NOT             shift and go to state 45
    BOOL            shift and go to state 46
    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    condition                      shift and go to state 175
    comparison_expression          shift and go to state 59
    bool_expression                shift and go to state 60
    numvar_expression              shift and go to state 61
    numvar                         shift and go to state 44

state 172

    (33) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    RBRACE          shift and go to state 176
    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement                      shift and go to state 29
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 173

    (41) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER . COMMA matrix RPAREN SEMICOLON

    COMMA           shift and go to state 177


state 174

    (30) else_clause -> ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement_list                 shift and go to state 178
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 175

    (28) elif_clause -> ELIF LPAREN condition . RPAREN LBRACE statement_list RBRACE elif_clause

    RPAREN          shift and go to state 179


state 176

    (33) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .

    NEWLINE         reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    VAR             reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    MODEL           reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    FUN             reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 33 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)


state 177

    (41) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA . matrix RPAREN SEMICOLON
    (83) matrix -> . LBRACKET arrays RBRACKET

    LBRACKET        shift and go to state 181

    matrix                         shift and go to state 180

state 178

    (30) else_clause -> ELSE LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    RBRACE          shift and go to state 182
    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement                      shift and go to state 29
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 179

    (28) elif_clause -> ELIF LPAREN condition RPAREN . LBRACE statement_list RBRACE elif_clause

    LBRACE          shift and go to state 183


state 180

    (41) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix . RPAREN SEMICOLON

    RPAREN          shift and go to state 184


state 181

    (83) matrix -> LBRACKET . arrays RBRACKET
    (84) arrays -> . arrays COMMA array
    (85) arrays -> . array
    (86) arrays -> . empty
    (79) array -> . LBRACKET elements RBRACKET
    (88) empty -> .

    LBRACKET        shift and go to state 185
    RBRACKET        reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)

    arrays                         shift and go to state 186
    array                          shift and go to state 187
    empty                          shift and go to state 188

state 182

    (30) else_clause -> ELSE LBRACE statement_list RBRACE .

    NEWLINE         reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    VAR             reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    MODEL           reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    FUN             reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 30 (else_clause -> ELSE LBRACE statement_list RBRACE .)


state 183

    (28) elif_clause -> ELIF LPAREN condition RPAREN LBRACE . statement_list RBRACE elif_clause
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement_list                 shift and go to state 189
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 184

    (41) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 190


state 185

    (79) array -> LBRACKET . elements RBRACKET
    (80) elements -> . elements COMMA numvar_expression
    (81) elements -> . numvar_expression
    (82) elements -> . empty
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (88) empty -> .
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    RBRACKET        reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    elements                       shift and go to state 191
    numvar_expression              shift and go to state 192
    empty                          shift and go to state 193
    numvar                         shift and go to state 44

state 186

    (83) matrix -> LBRACKET arrays . RBRACKET
    (84) arrays -> arrays . COMMA array

    RBRACKET        shift and go to state 194
    COMMA           shift and go to state 195


state 187

    (85) arrays -> array .

    RBRACKET        reduce using rule 85 (arrays -> array .)
    COMMA           reduce using rule 85 (arrays -> array .)


state 188

    (86) arrays -> empty .

    RBRACKET        reduce using rule 86 (arrays -> empty .)
    COMMA           reduce using rule 86 (arrays -> empty .)


state 189

    (28) elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list . RBRACE elif_clause
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . function_declaration
    (13) statement -> . return_statement
    (14) statement -> . continue_statement
    (15) statement -> . break_statement
    (16) statement -> . variable_query
    (17) statement -> . NEWLINE
    (18) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (19) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (20) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (22) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (23) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (24) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (25) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (27) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (32) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (33) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (37) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (38) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (39) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (40) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (41) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON
    (42) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (43) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (47) return_statement -> . RETURN numvar_expression SEMICOLON
    (48) return_statement -> . RETURN bool_expression SEMICOLON
    (49) return_statement -> . RETURN string_expression SEMICOLON
    (50) return_statement -> . RETURN identifier_expression SEMICOLON
    (51) continue_statement -> . CONTINUE SEMICOLON
    (52) break_statement -> . BREAK SEMICOLON
    (26) variable_query -> . IDENTIFIER SEMICOLON

    RBRACE          shift and go to state 196
    NEWLINE         shift and go to state 17
    VAR             shift and go to state 18
    IDENTIFIER      shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    MODEL           shift and go to state 24
    FUN             shift and go to state 25
    RETURN          shift and go to state 26
    CONTINUE        shift and go to state 27
    BREAK           shift and go to state 28

    statement                      shift and go to state 29
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    function_declaration           shift and go to state 12
    return_statement               shift and go to state 13
    continue_statement             shift and go to state 14
    break_statement                shift and go to state 15
    variable_query                 shift and go to state 16

state 190

    (41) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .

    NEWLINE         reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    VAR             reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    IF              reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    WHILE           reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    FOR             reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    PRINT           reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    MODEL           reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    FUN             reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    RETURN          reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    BREAK           reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    $end            reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)
    RBRACE          reduce using rule 41 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA NUMBER COMMA NUMBER COMMA matrix RPAREN SEMICOLON .)


state 191

    (79) array -> LBRACKET elements . RBRACKET
    (80) elements -> elements . COMMA numvar_expression

    RBRACKET        shift and go to state 197
    COMMA           shift and go to state 198


state 192

    (81) elements -> numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    RBRACKET        reduce using rule 81 (elements -> numvar_expression .)
    COMMA           reduce using rule 81 (elements -> numvar_expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77


state 193

    (82) elements -> empty .

    RBRACKET        reduce using rule 82 (elements -> empty .)
    COMMA           reduce using rule 82 (elements -> empty .)


state 194

    (83) matrix -> LBRACKET arrays RBRACKET .

    RPAREN          reduce using rule 83 (matrix -> LBRACKET arrays RBRACKET .)


state 195

    (84) arrays -> arrays COMMA . array
    (79) array -> . LBRACKET elements RBRACKET

    LBRACKET        shift and go to state 185

    array                          shift and go to state 199

state 196

    (28) elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE . elif_clause
    (28) elif_clause -> . ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause
    (29) elif_clause -> . empty
    (88) empty -> .

    ELIF            shift and go to state 162
    ELSE            reduce using rule 88 (empty -> .)
    NEWLINE         reduce using rule 88 (empty -> .)
    VAR             reduce using rule 88 (empty -> .)
    IDENTIFIER      reduce using rule 88 (empty -> .)
    IF              reduce using rule 88 (empty -> .)
    WHILE           reduce using rule 88 (empty -> .)
    FOR             reduce using rule 88 (empty -> .)
    PRINT           reduce using rule 88 (empty -> .)
    MODEL           reduce using rule 88 (empty -> .)
    FUN             reduce using rule 88 (empty -> .)
    RETURN          reduce using rule 88 (empty -> .)
    CONTINUE        reduce using rule 88 (empty -> .)
    BREAK           reduce using rule 88 (empty -> .)
    $end            reduce using rule 88 (empty -> .)
    RBRACE          reduce using rule 88 (empty -> .)

    elif_clause                    shift and go to state 200
    empty                          shift and go to state 163

state 197

    (79) array -> LBRACKET elements RBRACKET .

    RBRACKET        reduce using rule 79 (array -> LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 79 (array -> LBRACKET elements RBRACKET .)


state 198

    (80) elements -> elements COMMA . numvar_expression
    (53) numvar_expression -> . numvar_expression PLUS numvar_expression
    (54) numvar_expression -> . numvar_expression MINUS numvar_expression
    (55) numvar_expression -> . numvar_expression MUL numvar_expression
    (56) numvar_expression -> . numvar_expression DIV numvar_expression
    (57) numvar_expression -> . numvar_expression POW numvar_expression
    (58) numvar_expression -> . numvar
    (59) numvar -> . NUMBER
    (60) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 49
    IDENTIFIER      shift and go to state 62

    numvar_expression              shift and go to state 201
    numvar                         shift and go to state 44

state 199

    (84) arrays -> arrays COMMA array .

    RBRACKET        reduce using rule 84 (arrays -> arrays COMMA array .)
    COMMA           reduce using rule 84 (arrays -> arrays COMMA array .)


state 200

    (28) elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .

    ELSE            reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    NEWLINE         reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    VAR             reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    IDENTIFIER      reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    IF              reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    WHILE           reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    FOR             reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    PRINT           reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    MODEL           reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    FUN             reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    RETURN          reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    CONTINUE        reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    BREAK           reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    $end            reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    RBRACE          reduce using rule 28 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)


state 201

    (80) elements -> elements COMMA numvar_expression .
    (53) numvar_expression -> numvar_expression . PLUS numvar_expression
    (54) numvar_expression -> numvar_expression . MINUS numvar_expression
    (55) numvar_expression -> numvar_expression . MUL numvar_expression
    (56) numvar_expression -> numvar_expression . DIV numvar_expression
    (57) numvar_expression -> numvar_expression . POW numvar_expression

    RBRACKET        reduce using rule 80 (elements -> elements COMMA numvar_expression .)
    COMMA           reduce using rule 80 (elements -> elements COMMA numvar_expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    POW             shift and go to state 77

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 48 resolved using rule (numvar -> IDENTIFIER)
WARNING: rejected rule (identifier_expression -> IDENTIFIER) in state 48
WARNING: Rule (identifier_expression -> IDENTIFIER) is never reduced
