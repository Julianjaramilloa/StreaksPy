Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> var_declaration
Rule 5     statement -> assignment
Rule 6     statement -> if_statement
Rule 7     statement -> while_statement
Rule 8     statement -> for_statement
Rule 9     statement -> print_statement
Rule 10    statement -> model_declaration
Rule 11    statement -> model_operation
Rule 12    statement -> model_assign_r
Rule 13    statement -> function_declaration
Rule 14    statement -> return_statement
Rule 15    statement -> continue_statement
Rule 16    statement -> break_statement
Rule 17    statement -> variable_query
Rule 18    statement -> comment_expression
Rule 19    statement -> NEWLINE
Rule 20    var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON
Rule 21    var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON
Rule 22    var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON
Rule 23    var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON
Rule 24    var_declaration -> VAR IDENTIFIER EQ array SEMICOLON
Rule 25    var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON
Rule 26    assignment -> IDENTIFIER EQ numvar_expression SEMICOLON
Rule 27    assignment -> IDENTIFIER EQ bool_expression SEMICOLON
Rule 28    assignment -> IDENTIFIER EQ string_expression SEMICOLON
Rule 29    assignment -> IDENTIFIER EQ identifier_expression SEMICOLON
Rule 30    assignment -> IDENTIFIER EQ array SEMICOLON
Rule 31    assignment -> IDENTIFIER EQ matrix SEMICOLON
Rule 32    variable_query -> IDENTIFIER SEMICOLON
Rule 33    if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
Rule 34    elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause
Rule 35    elif_clause -> empty
Rule 36    else_clause -> ELSE LBRACE statement_list RBRACE
Rule 37    else_clause -> empty
Rule 38    while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
Rule 39    for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
Rule 40    for_initialization -> var_declaration
Rule 41    for_update -> IDENTIFIER EQ numvar_expression
Rule 42    for_update -> empty
Rule 43    print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON
Rule 44    print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON
Rule 45    print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON
Rule 46    print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON
Rule 47    model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
Rule 48    model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
Rule 49    model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
Rule 50    model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
Rule 51    function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
Rule 52    parameter_list -> parameter_list COMMA IDENTIFIER
Rule 53    parameter_list -> IDENTIFIER
Rule 54    parameter_list -> empty
Rule 55    return_statement -> RETURN numvar_expression SEMICOLON
Rule 56    return_statement -> RETURN bool_expression SEMICOLON
Rule 57    return_statement -> RETURN string_expression SEMICOLON
Rule 58    return_statement -> RETURN identifier_expression SEMICOLON
Rule 59    continue_statement -> CONTINUE SEMICOLON
Rule 60    break_statement -> BREAK SEMICOLON
Rule 61    numvar_expression -> numvar_expression PLUS numvar_expression
Rule 62    numvar_expression -> numvar_expression MINUS numvar_expression
Rule 63    numvar_expression -> numvar_expression MUL numvar_expression
Rule 64    numvar_expression -> numvar_expression DIV numvar_expression
Rule 65    numvar_expression -> numvar_expression POW numvar_expression
Rule 66    numvar_expression -> numvar
Rule 67    numvar -> NUMBER
Rule 68    numvar -> IDENTIFIER
Rule 69    bool_expression -> bool_expression AND bool_expression
Rule 70    bool_expression -> bool_expression OR bool_expression
Rule 71    bool_expression -> NOT bool_expression
Rule 72    bool_expression -> BOOL
Rule 73    comparison_expression -> numvar_expression EQ numvar_expression
Rule 74    comparison_expression -> numvar_expression NE numvar_expression
Rule 75    comparison_expression -> numvar_expression EE numvar_expression
Rule 76    comparison_expression -> numvar_expression LT numvar_expression
Rule 77    comparison_expression -> numvar_expression LTE numvar_expression
Rule 78    comparison_expression -> numvar_expression GT numvar_expression
Rule 79    comparison_expression -> numvar_expression GTE numvar_expression
Rule 80    comparison_expression -> bool_expression EQ bool_expression
Rule 81    comparison_expression -> bool_expression NE bool_expression
Rule 82    comparison_expression -> bool_expression EE bool_expression
Rule 83    string_expression -> STRING
Rule 84    identifier_expression -> IDENTIFIER
Rule 85    condition -> comparison_expression
Rule 86    condition -> bool_expression
Rule 87    array -> LBRACKET elements RBRACKET
Rule 88    elements -> elements COMMA numvar_expression
Rule 89    elements -> numvar_expression
Rule 90    elements -> empty
Rule 91    matrix -> LBRACKET arrays RBRACKET
Rule 92    arrays -> arrays COMMA array
Rule 93    arrays -> array
Rule 94    arrays -> empty
Rule 95    comment_expression -> COMMENT STRING
Rule 96    empty -> <empty>

Terminals, with rules where they appear

AND                  : 69
BOOL                 : 72
BREAK                : 60
COMMA                : 47 47 47 52 88 92
COMMENT              : 95
CONTINUE             : 59
DIV                  : 64
DOT                  : 48 49 50
EE                   : 75 82
ELIF                 : 34
ELSE                 : 36
EQ                   : 20 21 22 23 24 25 26 27 28 29 30 31 41 47 49 50 73 80
FOR                  : 39
FUN                  : 51
GT                   : 78
GTE                  : 79
IDENTIFIER           : 20 21 22 23 24 25 26 27 28 29 30 31 32 41 47 48 48 49 49 50 50 51 52 53 68 84
IF                   : 33
LBRACE               : 33 34 36 38 39 51
LBRACKET             : 47 87 91
LPAREN               : 33 34 38 39 43 44 45 46 47 48 51
LT                   : 76
LTE                  : 77
MINUS                : 62
MODEL                : 47
MUL                  : 63
NE                   : 74 81
NEWLINE              : 19
NOT                  : 71
NUMBER               : 47 67
OR                   : 70
PLUS                 : 61
POW                  : 65
PRINT                : 43 44 45 46
RBRACE               : 33 34 36 38 39 51
RBRACKET             : 47 87 91
RETURN               : 55 56 57 58
RPAREN               : 33 34 38 39 43 44 45 46 47 48 51
SEMICOLON            : 20 21 22 23 24 25 26 27 28 29 30 31 32 39 43 44 45 46 47 48 49 50 55 56 57 58 59 60
STRING               : 83 95
VAR                  : 20 21 22 23 24 25
WHILE                : 38
error                : 

Nonterminals, with rules where they appear

array                : 24 30 47 47 49 92 93
arrays               : 91 92
assignment           : 5
bool_expression      : 21 27 44 56 69 69 70 70 71 80 80 81 81 82 82 86
break_statement      : 16
comment_expression   : 18
comparison_expression : 85
condition            : 33 34 38 39
continue_statement   : 15
elements             : 87 88
elif_clause          : 33 34
else_clause          : 33
empty                : 35 37 42 54 90 94
for_initialization   : 39
for_statement        : 8
for_update           : 39
function_declaration : 13
identifier_expression : 23 29 46 58
if_statement         : 6
matrix               : 25 31 47 50
model_assign_r       : 12
model_declaration    : 10
model_operation      : 11
numvar               : 66
numvar_expression    : 20 26 41 43 55 61 61 62 62 63 63 64 64 65 65 73 73 74 74 75 75 76 76 77 77 78 78 79 79 88 89
parameter_list       : 51 52
print_statement      : 9
program              : 0
return_statement     : 14
statement            : 2 3
statement_list       : 1 2 33 34 36 38 39 51
string_expression    : 22 28 45 57
var_declaration      : 4 40
variable_query       : 17
while_statement      : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    $end            reduce using rule 1 (program -> statement_list .)
    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 3

    (3) statement_list -> statement .

    NEWLINE         reduce using rule 3 (statement_list -> statement .)
    VAR             reduce using rule 3 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    WHILE           reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    PRINT           reduce using rule 3 (statement_list -> statement .)
    MODEL           reduce using rule 3 (statement_list -> statement .)
    FUN             reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    CONTINUE        reduce using rule 3 (statement_list -> statement .)
    BREAK           reduce using rule 3 (statement_list -> statement .)
    COMMENT         reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> var_declaration .

    NEWLINE         reduce using rule 4 (statement -> var_declaration .)
    VAR             reduce using rule 4 (statement -> var_declaration .)
    IDENTIFIER      reduce using rule 4 (statement -> var_declaration .)
    IF              reduce using rule 4 (statement -> var_declaration .)
    WHILE           reduce using rule 4 (statement -> var_declaration .)
    FOR             reduce using rule 4 (statement -> var_declaration .)
    PRINT           reduce using rule 4 (statement -> var_declaration .)
    MODEL           reduce using rule 4 (statement -> var_declaration .)
    FUN             reduce using rule 4 (statement -> var_declaration .)
    RETURN          reduce using rule 4 (statement -> var_declaration .)
    CONTINUE        reduce using rule 4 (statement -> var_declaration .)
    BREAK           reduce using rule 4 (statement -> var_declaration .)
    COMMENT         reduce using rule 4 (statement -> var_declaration .)
    $end            reduce using rule 4 (statement -> var_declaration .)
    RBRACE          reduce using rule 4 (statement -> var_declaration .)


state 5

    (5) statement -> assignment .

    NEWLINE         reduce using rule 5 (statement -> assignment .)
    VAR             reduce using rule 5 (statement -> assignment .)
    IDENTIFIER      reduce using rule 5 (statement -> assignment .)
    IF              reduce using rule 5 (statement -> assignment .)
    WHILE           reduce using rule 5 (statement -> assignment .)
    FOR             reduce using rule 5 (statement -> assignment .)
    PRINT           reduce using rule 5 (statement -> assignment .)
    MODEL           reduce using rule 5 (statement -> assignment .)
    FUN             reduce using rule 5 (statement -> assignment .)
    RETURN          reduce using rule 5 (statement -> assignment .)
    CONTINUE        reduce using rule 5 (statement -> assignment .)
    BREAK           reduce using rule 5 (statement -> assignment .)
    COMMENT         reduce using rule 5 (statement -> assignment .)
    $end            reduce using rule 5 (statement -> assignment .)
    RBRACE          reduce using rule 5 (statement -> assignment .)


state 6

    (6) statement -> if_statement .

    NEWLINE         reduce using rule 6 (statement -> if_statement .)
    VAR             reduce using rule 6 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    WHILE           reduce using rule 6 (statement -> if_statement .)
    FOR             reduce using rule 6 (statement -> if_statement .)
    PRINT           reduce using rule 6 (statement -> if_statement .)
    MODEL           reduce using rule 6 (statement -> if_statement .)
    FUN             reduce using rule 6 (statement -> if_statement .)
    RETURN          reduce using rule 6 (statement -> if_statement .)
    CONTINUE        reduce using rule 6 (statement -> if_statement .)
    BREAK           reduce using rule 6 (statement -> if_statement .)
    COMMENT         reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RBRACE          reduce using rule 6 (statement -> if_statement .)


state 7

    (7) statement -> while_statement .

    NEWLINE         reduce using rule 7 (statement -> while_statement .)
    VAR             reduce using rule 7 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 7 (statement -> while_statement .)
    IF              reduce using rule 7 (statement -> while_statement .)
    WHILE           reduce using rule 7 (statement -> while_statement .)
    FOR             reduce using rule 7 (statement -> while_statement .)
    PRINT           reduce using rule 7 (statement -> while_statement .)
    MODEL           reduce using rule 7 (statement -> while_statement .)
    FUN             reduce using rule 7 (statement -> while_statement .)
    RETURN          reduce using rule 7 (statement -> while_statement .)
    CONTINUE        reduce using rule 7 (statement -> while_statement .)
    BREAK           reduce using rule 7 (statement -> while_statement .)
    COMMENT         reduce using rule 7 (statement -> while_statement .)
    $end            reduce using rule 7 (statement -> while_statement .)
    RBRACE          reduce using rule 7 (statement -> while_statement .)


state 8

    (8) statement -> for_statement .

    NEWLINE         reduce using rule 8 (statement -> for_statement .)
    VAR             reduce using rule 8 (statement -> for_statement .)
    IDENTIFIER      reduce using rule 8 (statement -> for_statement .)
    IF              reduce using rule 8 (statement -> for_statement .)
    WHILE           reduce using rule 8 (statement -> for_statement .)
    FOR             reduce using rule 8 (statement -> for_statement .)
    PRINT           reduce using rule 8 (statement -> for_statement .)
    MODEL           reduce using rule 8 (statement -> for_statement .)
    FUN             reduce using rule 8 (statement -> for_statement .)
    RETURN          reduce using rule 8 (statement -> for_statement .)
    CONTINUE        reduce using rule 8 (statement -> for_statement .)
    BREAK           reduce using rule 8 (statement -> for_statement .)
    COMMENT         reduce using rule 8 (statement -> for_statement .)
    $end            reduce using rule 8 (statement -> for_statement .)
    RBRACE          reduce using rule 8 (statement -> for_statement .)


state 9

    (9) statement -> print_statement .

    NEWLINE         reduce using rule 9 (statement -> print_statement .)
    VAR             reduce using rule 9 (statement -> print_statement .)
    IDENTIFIER      reduce using rule 9 (statement -> print_statement .)
    IF              reduce using rule 9 (statement -> print_statement .)
    WHILE           reduce using rule 9 (statement -> print_statement .)
    FOR             reduce using rule 9 (statement -> print_statement .)
    PRINT           reduce using rule 9 (statement -> print_statement .)
    MODEL           reduce using rule 9 (statement -> print_statement .)
    FUN             reduce using rule 9 (statement -> print_statement .)
    RETURN          reduce using rule 9 (statement -> print_statement .)
    CONTINUE        reduce using rule 9 (statement -> print_statement .)
    BREAK           reduce using rule 9 (statement -> print_statement .)
    COMMENT         reduce using rule 9 (statement -> print_statement .)
    $end            reduce using rule 9 (statement -> print_statement .)
    RBRACE          reduce using rule 9 (statement -> print_statement .)


state 10

    (10) statement -> model_declaration .

    NEWLINE         reduce using rule 10 (statement -> model_declaration .)
    VAR             reduce using rule 10 (statement -> model_declaration .)
    IDENTIFIER      reduce using rule 10 (statement -> model_declaration .)
    IF              reduce using rule 10 (statement -> model_declaration .)
    WHILE           reduce using rule 10 (statement -> model_declaration .)
    FOR             reduce using rule 10 (statement -> model_declaration .)
    PRINT           reduce using rule 10 (statement -> model_declaration .)
    MODEL           reduce using rule 10 (statement -> model_declaration .)
    FUN             reduce using rule 10 (statement -> model_declaration .)
    RETURN          reduce using rule 10 (statement -> model_declaration .)
    CONTINUE        reduce using rule 10 (statement -> model_declaration .)
    BREAK           reduce using rule 10 (statement -> model_declaration .)
    COMMENT         reduce using rule 10 (statement -> model_declaration .)
    $end            reduce using rule 10 (statement -> model_declaration .)
    RBRACE          reduce using rule 10 (statement -> model_declaration .)


state 11

    (11) statement -> model_operation .

    NEWLINE         reduce using rule 11 (statement -> model_operation .)
    VAR             reduce using rule 11 (statement -> model_operation .)
    IDENTIFIER      reduce using rule 11 (statement -> model_operation .)
    IF              reduce using rule 11 (statement -> model_operation .)
    WHILE           reduce using rule 11 (statement -> model_operation .)
    FOR             reduce using rule 11 (statement -> model_operation .)
    PRINT           reduce using rule 11 (statement -> model_operation .)
    MODEL           reduce using rule 11 (statement -> model_operation .)
    FUN             reduce using rule 11 (statement -> model_operation .)
    RETURN          reduce using rule 11 (statement -> model_operation .)
    CONTINUE        reduce using rule 11 (statement -> model_operation .)
    BREAK           reduce using rule 11 (statement -> model_operation .)
    COMMENT         reduce using rule 11 (statement -> model_operation .)
    $end            reduce using rule 11 (statement -> model_operation .)
    RBRACE          reduce using rule 11 (statement -> model_operation .)


state 12

    (12) statement -> model_assign_r .

    NEWLINE         reduce using rule 12 (statement -> model_assign_r .)
    VAR             reduce using rule 12 (statement -> model_assign_r .)
    IDENTIFIER      reduce using rule 12 (statement -> model_assign_r .)
    IF              reduce using rule 12 (statement -> model_assign_r .)
    WHILE           reduce using rule 12 (statement -> model_assign_r .)
    FOR             reduce using rule 12 (statement -> model_assign_r .)
    PRINT           reduce using rule 12 (statement -> model_assign_r .)
    MODEL           reduce using rule 12 (statement -> model_assign_r .)
    FUN             reduce using rule 12 (statement -> model_assign_r .)
    RETURN          reduce using rule 12 (statement -> model_assign_r .)
    CONTINUE        reduce using rule 12 (statement -> model_assign_r .)
    BREAK           reduce using rule 12 (statement -> model_assign_r .)
    COMMENT         reduce using rule 12 (statement -> model_assign_r .)
    $end            reduce using rule 12 (statement -> model_assign_r .)
    RBRACE          reduce using rule 12 (statement -> model_assign_r .)


state 13

    (13) statement -> function_declaration .

    NEWLINE         reduce using rule 13 (statement -> function_declaration .)
    VAR             reduce using rule 13 (statement -> function_declaration .)
    IDENTIFIER      reduce using rule 13 (statement -> function_declaration .)
    IF              reduce using rule 13 (statement -> function_declaration .)
    WHILE           reduce using rule 13 (statement -> function_declaration .)
    FOR             reduce using rule 13 (statement -> function_declaration .)
    PRINT           reduce using rule 13 (statement -> function_declaration .)
    MODEL           reduce using rule 13 (statement -> function_declaration .)
    FUN             reduce using rule 13 (statement -> function_declaration .)
    RETURN          reduce using rule 13 (statement -> function_declaration .)
    CONTINUE        reduce using rule 13 (statement -> function_declaration .)
    BREAK           reduce using rule 13 (statement -> function_declaration .)
    COMMENT         reduce using rule 13 (statement -> function_declaration .)
    $end            reduce using rule 13 (statement -> function_declaration .)
    RBRACE          reduce using rule 13 (statement -> function_declaration .)


state 14

    (14) statement -> return_statement .

    NEWLINE         reduce using rule 14 (statement -> return_statement .)
    VAR             reduce using rule 14 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 14 (statement -> return_statement .)
    IF              reduce using rule 14 (statement -> return_statement .)
    WHILE           reduce using rule 14 (statement -> return_statement .)
    FOR             reduce using rule 14 (statement -> return_statement .)
    PRINT           reduce using rule 14 (statement -> return_statement .)
    MODEL           reduce using rule 14 (statement -> return_statement .)
    FUN             reduce using rule 14 (statement -> return_statement .)
    RETURN          reduce using rule 14 (statement -> return_statement .)
    CONTINUE        reduce using rule 14 (statement -> return_statement .)
    BREAK           reduce using rule 14 (statement -> return_statement .)
    COMMENT         reduce using rule 14 (statement -> return_statement .)
    $end            reduce using rule 14 (statement -> return_statement .)
    RBRACE          reduce using rule 14 (statement -> return_statement .)


state 15

    (15) statement -> continue_statement .

    NEWLINE         reduce using rule 15 (statement -> continue_statement .)
    VAR             reduce using rule 15 (statement -> continue_statement .)
    IDENTIFIER      reduce using rule 15 (statement -> continue_statement .)
    IF              reduce using rule 15 (statement -> continue_statement .)
    WHILE           reduce using rule 15 (statement -> continue_statement .)
    FOR             reduce using rule 15 (statement -> continue_statement .)
    PRINT           reduce using rule 15 (statement -> continue_statement .)
    MODEL           reduce using rule 15 (statement -> continue_statement .)
    FUN             reduce using rule 15 (statement -> continue_statement .)
    RETURN          reduce using rule 15 (statement -> continue_statement .)
    CONTINUE        reduce using rule 15 (statement -> continue_statement .)
    BREAK           reduce using rule 15 (statement -> continue_statement .)
    COMMENT         reduce using rule 15 (statement -> continue_statement .)
    $end            reduce using rule 15 (statement -> continue_statement .)
    RBRACE          reduce using rule 15 (statement -> continue_statement .)


state 16

    (16) statement -> break_statement .

    NEWLINE         reduce using rule 16 (statement -> break_statement .)
    VAR             reduce using rule 16 (statement -> break_statement .)
    IDENTIFIER      reduce using rule 16 (statement -> break_statement .)
    IF              reduce using rule 16 (statement -> break_statement .)
    WHILE           reduce using rule 16 (statement -> break_statement .)
    FOR             reduce using rule 16 (statement -> break_statement .)
    PRINT           reduce using rule 16 (statement -> break_statement .)
    MODEL           reduce using rule 16 (statement -> break_statement .)
    FUN             reduce using rule 16 (statement -> break_statement .)
    RETURN          reduce using rule 16 (statement -> break_statement .)
    CONTINUE        reduce using rule 16 (statement -> break_statement .)
    BREAK           reduce using rule 16 (statement -> break_statement .)
    COMMENT         reduce using rule 16 (statement -> break_statement .)
    $end            reduce using rule 16 (statement -> break_statement .)
    RBRACE          reduce using rule 16 (statement -> break_statement .)


state 17

    (17) statement -> variable_query .

    NEWLINE         reduce using rule 17 (statement -> variable_query .)
    VAR             reduce using rule 17 (statement -> variable_query .)
    IDENTIFIER      reduce using rule 17 (statement -> variable_query .)
    IF              reduce using rule 17 (statement -> variable_query .)
    WHILE           reduce using rule 17 (statement -> variable_query .)
    FOR             reduce using rule 17 (statement -> variable_query .)
    PRINT           reduce using rule 17 (statement -> variable_query .)
    MODEL           reduce using rule 17 (statement -> variable_query .)
    FUN             reduce using rule 17 (statement -> variable_query .)
    RETURN          reduce using rule 17 (statement -> variable_query .)
    CONTINUE        reduce using rule 17 (statement -> variable_query .)
    BREAK           reduce using rule 17 (statement -> variable_query .)
    COMMENT         reduce using rule 17 (statement -> variable_query .)
    $end            reduce using rule 17 (statement -> variable_query .)
    RBRACE          reduce using rule 17 (statement -> variable_query .)


state 18

    (18) statement -> comment_expression .

    NEWLINE         reduce using rule 18 (statement -> comment_expression .)
    VAR             reduce using rule 18 (statement -> comment_expression .)
    IDENTIFIER      reduce using rule 18 (statement -> comment_expression .)
    IF              reduce using rule 18 (statement -> comment_expression .)
    WHILE           reduce using rule 18 (statement -> comment_expression .)
    FOR             reduce using rule 18 (statement -> comment_expression .)
    PRINT           reduce using rule 18 (statement -> comment_expression .)
    MODEL           reduce using rule 18 (statement -> comment_expression .)
    FUN             reduce using rule 18 (statement -> comment_expression .)
    RETURN          reduce using rule 18 (statement -> comment_expression .)
    CONTINUE        reduce using rule 18 (statement -> comment_expression .)
    BREAK           reduce using rule 18 (statement -> comment_expression .)
    COMMENT         reduce using rule 18 (statement -> comment_expression .)
    $end            reduce using rule 18 (statement -> comment_expression .)
    RBRACE          reduce using rule 18 (statement -> comment_expression .)


state 19

    (19) statement -> NEWLINE .

    NEWLINE         reduce using rule 19 (statement -> NEWLINE .)
    VAR             reduce using rule 19 (statement -> NEWLINE .)
    IDENTIFIER      reduce using rule 19 (statement -> NEWLINE .)
    IF              reduce using rule 19 (statement -> NEWLINE .)
    WHILE           reduce using rule 19 (statement -> NEWLINE .)
    FOR             reduce using rule 19 (statement -> NEWLINE .)
    PRINT           reduce using rule 19 (statement -> NEWLINE .)
    MODEL           reduce using rule 19 (statement -> NEWLINE .)
    FUN             reduce using rule 19 (statement -> NEWLINE .)
    RETURN          reduce using rule 19 (statement -> NEWLINE .)
    CONTINUE        reduce using rule 19 (statement -> NEWLINE .)
    BREAK           reduce using rule 19 (statement -> NEWLINE .)
    COMMENT         reduce using rule 19 (statement -> NEWLINE .)
    $end            reduce using rule 19 (statement -> NEWLINE .)
    RBRACE          reduce using rule 19 (statement -> NEWLINE .)


state 20

    (20) var_declaration -> VAR . IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> VAR . IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> VAR . IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> VAR . IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> VAR . IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> VAR . IDENTIFIER EQ matrix SEMICOLON

    IDENTIFIER      shift and go to state 33


state 21

    (26) assignment -> IDENTIFIER . EQ numvar_expression SEMICOLON
    (27) assignment -> IDENTIFIER . EQ bool_expression SEMICOLON
    (28) assignment -> IDENTIFIER . EQ string_expression SEMICOLON
    (29) assignment -> IDENTIFIER . EQ identifier_expression SEMICOLON
    (30) assignment -> IDENTIFIER . EQ array SEMICOLON
    (31) assignment -> IDENTIFIER . EQ matrix SEMICOLON
    (48) model_operation -> IDENTIFIER . DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> IDENTIFIER . DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> IDENTIFIER . DOT IDENTIFIER EQ matrix SEMICOLON
    (32) variable_query -> IDENTIFIER . SEMICOLON

    EQ              shift and go to state 34
    DOT             shift and go to state 36
    SEMICOLON       shift and go to state 35


state 22

    (33) if_statement -> IF . LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause

    LPAREN          shift and go to state 37


state 23

    (38) while_statement -> WHILE . LPAREN condition RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 38


state 24

    (39) for_statement -> FOR . LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 39


state 25

    (43) print_statement -> PRINT . LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> PRINT . LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> PRINT . LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> PRINT . LPAREN identifier_expression RPAREN SEMICOLON

    LPAREN          shift and go to state 40


state 26

    (47) model_declaration -> MODEL . IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON

    IDENTIFIER      shift and go to state 41


state 27

    (51) function_declaration -> FUN . IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE

    IDENTIFIER      shift and go to state 42


state 28

    (55) return_statement -> RETURN . numvar_expression SEMICOLON
    (56) return_statement -> RETURN . bool_expression SEMICOLON
    (57) return_statement -> RETURN . string_expression SEMICOLON
    (58) return_statement -> RETURN . identifier_expression SEMICOLON
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL
    (83) string_expression -> . STRING
    (84) identifier_expression -> . IDENTIFIER
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    STRING          shift and go to state 50
    IDENTIFIER      shift and go to state 51
    NUMBER          shift and go to state 52

    numvar_expression              shift and go to state 43
    bool_expression                shift and go to state 44
    string_expression              shift and go to state 45
    identifier_expression          shift and go to state 46
    numvar                         shift and go to state 47

state 29

    (59) continue_statement -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 53


state 30

    (60) break_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 54


state 31

    (95) comment_expression -> COMMENT . STRING

    STRING          shift and go to state 55


state 32

    (2) statement_list -> statement_list statement .

    NEWLINE         reduce using rule 2 (statement_list -> statement_list statement .)
    VAR             reduce using rule 2 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    MODEL           reduce using rule 2 (statement_list -> statement_list statement .)
    FUN             reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 2 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 2 (statement_list -> statement_list statement .)
    COMMENT         reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)


state 33

    (20) var_declaration -> VAR IDENTIFIER . EQ numvar_expression SEMICOLON
    (21) var_declaration -> VAR IDENTIFIER . EQ bool_expression SEMICOLON
    (22) var_declaration -> VAR IDENTIFIER . EQ string_expression SEMICOLON
    (23) var_declaration -> VAR IDENTIFIER . EQ identifier_expression SEMICOLON
    (24) var_declaration -> VAR IDENTIFIER . EQ array SEMICOLON
    (25) var_declaration -> VAR IDENTIFIER . EQ matrix SEMICOLON

    EQ              shift and go to state 56


state 34

    (26) assignment -> IDENTIFIER EQ . numvar_expression SEMICOLON
    (27) assignment -> IDENTIFIER EQ . bool_expression SEMICOLON
    (28) assignment -> IDENTIFIER EQ . string_expression SEMICOLON
    (29) assignment -> IDENTIFIER EQ . identifier_expression SEMICOLON
    (30) assignment -> IDENTIFIER EQ . array SEMICOLON
    (31) assignment -> IDENTIFIER EQ . matrix SEMICOLON
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL
    (83) string_expression -> . STRING
    (84) identifier_expression -> . IDENTIFIER
    (87) array -> . LBRACKET elements RBRACKET
    (91) matrix -> . LBRACKET arrays RBRACKET
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    STRING          shift and go to state 50
    IDENTIFIER      shift and go to state 51
    LBRACKET        shift and go to state 63
    NUMBER          shift and go to state 52

    numvar_expression              shift and go to state 57
    bool_expression                shift and go to state 58
    string_expression              shift and go to state 59
    identifier_expression          shift and go to state 60
    array                          shift and go to state 61
    matrix                         shift and go to state 62
    numvar                         shift and go to state 47

state 35

    (32) variable_query -> IDENTIFIER SEMICOLON .

    NEWLINE         reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    VAR             reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    IF              reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    FOR             reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    MODEL           reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    FUN             reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    CONTINUE        reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    BREAK           reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    COMMENT         reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    $end            reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 32 (variable_query -> IDENTIFIER SEMICOLON .)


state 36

    (48) model_operation -> IDENTIFIER DOT . IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> IDENTIFIER DOT . IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> IDENTIFIER DOT . IDENTIFIER EQ matrix SEMICOLON

    IDENTIFIER      shift and go to state 64


state 37

    (33) if_statement -> IF LPAREN . condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (85) condition -> . comparison_expression
    (86) condition -> . bool_expression
    (73) comparison_expression -> . numvar_expression EQ numvar_expression
    (74) comparison_expression -> . numvar_expression NE numvar_expression
    (75) comparison_expression -> . numvar_expression EE numvar_expression
    (76) comparison_expression -> . numvar_expression LT numvar_expression
    (77) comparison_expression -> . numvar_expression LTE numvar_expression
    (78) comparison_expression -> . numvar_expression GT numvar_expression
    (79) comparison_expression -> . numvar_expression GTE numvar_expression
    (80) comparison_expression -> . bool_expression EQ bool_expression
    (81) comparison_expression -> . bool_expression NE bool_expression
    (82) comparison_expression -> . bool_expression EE bool_expression
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    condition                      shift and go to state 65
    comparison_expression          shift and go to state 66
    bool_expression                shift and go to state 67
    numvar_expression              shift and go to state 68
    numvar                         shift and go to state 47

state 38

    (38) while_statement -> WHILE LPAREN . condition RPAREN LBRACE statement_list RBRACE
    (85) condition -> . comparison_expression
    (86) condition -> . bool_expression
    (73) comparison_expression -> . numvar_expression EQ numvar_expression
    (74) comparison_expression -> . numvar_expression NE numvar_expression
    (75) comparison_expression -> . numvar_expression EE numvar_expression
    (76) comparison_expression -> . numvar_expression LT numvar_expression
    (77) comparison_expression -> . numvar_expression LTE numvar_expression
    (78) comparison_expression -> . numvar_expression GT numvar_expression
    (79) comparison_expression -> . numvar_expression GTE numvar_expression
    (80) comparison_expression -> . bool_expression EQ bool_expression
    (81) comparison_expression -> . bool_expression NE bool_expression
    (82) comparison_expression -> . bool_expression EE bool_expression
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    condition                      shift and go to state 70
    comparison_expression          shift and go to state 66
    bool_expression                shift and go to state 67
    numvar_expression              shift and go to state 68
    numvar                         shift and go to state 47

state 39

    (39) for_statement -> FOR LPAREN . for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (40) for_initialization -> . var_declaration
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON

    VAR             shift and go to state 20

    for_initialization             shift and go to state 71
    var_declaration                shift and go to state 72

state 40

    (43) print_statement -> PRINT LPAREN . numvar_expression RPAREN SEMICOLON
    (44) print_statement -> PRINT LPAREN . bool_expression RPAREN SEMICOLON
    (45) print_statement -> PRINT LPAREN . string_expression RPAREN SEMICOLON
    (46) print_statement -> PRINT LPAREN . identifier_expression RPAREN SEMICOLON
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL
    (83) string_expression -> . STRING
    (84) identifier_expression -> . IDENTIFIER
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    STRING          shift and go to state 50
    IDENTIFIER      shift and go to state 51
    NUMBER          shift and go to state 52

    numvar_expression              shift and go to state 73
    bool_expression                shift and go to state 74
    string_expression              shift and go to state 75
    identifier_expression          shift and go to state 76
    numvar                         shift and go to state 47

state 41

    (47) model_declaration -> MODEL IDENTIFIER . EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON

    EQ              shift and go to state 77


state 42

    (51) function_declaration -> FUN IDENTIFIER . LPAREN parameter_list RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 78


state 43

    (55) return_statement -> RETURN numvar_expression . SEMICOLON
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       shift and go to state 79
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 44

    (56) return_statement -> RETURN bool_expression . SEMICOLON
    (69) bool_expression -> bool_expression . AND bool_expression
    (70) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       shift and go to state 85
    AND             shift and go to state 86
    OR              shift and go to state 87


state 45

    (57) return_statement -> RETURN string_expression . SEMICOLON

    SEMICOLON       shift and go to state 88


state 46

    (58) return_statement -> RETURN identifier_expression . SEMICOLON

    SEMICOLON       shift and go to state 89


state 47

    (66) numvar_expression -> numvar .

    SEMICOLON       reduce using rule 66 (numvar_expression -> numvar .)
    PLUS            reduce using rule 66 (numvar_expression -> numvar .)
    MINUS           reduce using rule 66 (numvar_expression -> numvar .)
    MUL             reduce using rule 66 (numvar_expression -> numvar .)
    DIV             reduce using rule 66 (numvar_expression -> numvar .)
    POW             reduce using rule 66 (numvar_expression -> numvar .)
    EQ              reduce using rule 66 (numvar_expression -> numvar .)
    NE              reduce using rule 66 (numvar_expression -> numvar .)
    EE              reduce using rule 66 (numvar_expression -> numvar .)
    LT              reduce using rule 66 (numvar_expression -> numvar .)
    LTE             reduce using rule 66 (numvar_expression -> numvar .)
    GT              reduce using rule 66 (numvar_expression -> numvar .)
    GTE             reduce using rule 66 (numvar_expression -> numvar .)
    RPAREN          reduce using rule 66 (numvar_expression -> numvar .)
    RBRACKET        reduce using rule 66 (numvar_expression -> numvar .)
    COMMA           reduce using rule 66 (numvar_expression -> numvar .)


state 48

    (71) bool_expression -> NOT . bool_expression
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL

    NOT             shift and go to state 48
    BOOL            shift and go to state 49

    bool_expression                shift and go to state 90

state 49

    (72) bool_expression -> BOOL .

    SEMICOLON       reduce using rule 72 (bool_expression -> BOOL .)
    AND             reduce using rule 72 (bool_expression -> BOOL .)
    OR              reduce using rule 72 (bool_expression -> BOOL .)
    EQ              reduce using rule 72 (bool_expression -> BOOL .)
    NE              reduce using rule 72 (bool_expression -> BOOL .)
    EE              reduce using rule 72 (bool_expression -> BOOL .)
    RPAREN          reduce using rule 72 (bool_expression -> BOOL .)


state 50

    (83) string_expression -> STRING .

    SEMICOLON       reduce using rule 83 (string_expression -> STRING .)
    RPAREN          reduce using rule 83 (string_expression -> STRING .)


state 51

    (84) identifier_expression -> IDENTIFIER .
    (68) numvar -> IDENTIFIER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 68 (numvar -> IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 68 (numvar -> IDENTIFIER .)
    SEMICOLON       reduce using rule 68 (numvar -> IDENTIFIER .)
    PLUS            reduce using rule 68 (numvar -> IDENTIFIER .)
    MINUS           reduce using rule 68 (numvar -> IDENTIFIER .)
    MUL             reduce using rule 68 (numvar -> IDENTIFIER .)
    DIV             reduce using rule 68 (numvar -> IDENTIFIER .)
    POW             reduce using rule 68 (numvar -> IDENTIFIER .)
    RPAREN          reduce using rule 68 (numvar -> IDENTIFIER .)

  ! SEMICOLON       [ reduce using rule 84 (identifier_expression -> IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 84 (identifier_expression -> IDENTIFIER .) ]


state 52

    (67) numvar -> NUMBER .

    SEMICOLON       reduce using rule 67 (numvar -> NUMBER .)
    PLUS            reduce using rule 67 (numvar -> NUMBER .)
    MINUS           reduce using rule 67 (numvar -> NUMBER .)
    MUL             reduce using rule 67 (numvar -> NUMBER .)
    DIV             reduce using rule 67 (numvar -> NUMBER .)
    POW             reduce using rule 67 (numvar -> NUMBER .)
    EQ              reduce using rule 67 (numvar -> NUMBER .)
    NE              reduce using rule 67 (numvar -> NUMBER .)
    EE              reduce using rule 67 (numvar -> NUMBER .)
    LT              reduce using rule 67 (numvar -> NUMBER .)
    LTE             reduce using rule 67 (numvar -> NUMBER .)
    GT              reduce using rule 67 (numvar -> NUMBER .)
    GTE             reduce using rule 67 (numvar -> NUMBER .)
    RPAREN          reduce using rule 67 (numvar -> NUMBER .)
    RBRACKET        reduce using rule 67 (numvar -> NUMBER .)
    COMMA           reduce using rule 67 (numvar -> NUMBER .)


state 53

    (59) continue_statement -> CONTINUE SEMICOLON .

    NEWLINE         reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    VAR             reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    IDENTIFIER      reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    IF              reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    PRINT           reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    MODEL           reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    FUN             reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    COMMENT         reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    $end            reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)
    RBRACE          reduce using rule 59 (continue_statement -> CONTINUE SEMICOLON .)


state 54

    (60) break_statement -> BREAK SEMICOLON .

    NEWLINE         reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    VAR             reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    IF              reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    PRINT           reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    MODEL           reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    FUN             reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    COMMENT         reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    $end            reduce using rule 60 (break_statement -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 60 (break_statement -> BREAK SEMICOLON .)


state 55

    (95) comment_expression -> COMMENT STRING .

    NEWLINE         reduce using rule 95 (comment_expression -> COMMENT STRING .)
    VAR             reduce using rule 95 (comment_expression -> COMMENT STRING .)
    IDENTIFIER      reduce using rule 95 (comment_expression -> COMMENT STRING .)
    IF              reduce using rule 95 (comment_expression -> COMMENT STRING .)
    WHILE           reduce using rule 95 (comment_expression -> COMMENT STRING .)
    FOR             reduce using rule 95 (comment_expression -> COMMENT STRING .)
    PRINT           reduce using rule 95 (comment_expression -> COMMENT STRING .)
    MODEL           reduce using rule 95 (comment_expression -> COMMENT STRING .)
    FUN             reduce using rule 95 (comment_expression -> COMMENT STRING .)
    RETURN          reduce using rule 95 (comment_expression -> COMMENT STRING .)
    CONTINUE        reduce using rule 95 (comment_expression -> COMMENT STRING .)
    BREAK           reduce using rule 95 (comment_expression -> COMMENT STRING .)
    COMMENT         reduce using rule 95 (comment_expression -> COMMENT STRING .)
    $end            reduce using rule 95 (comment_expression -> COMMENT STRING .)
    RBRACE          reduce using rule 95 (comment_expression -> COMMENT STRING .)


state 56

    (20) var_declaration -> VAR IDENTIFIER EQ . numvar_expression SEMICOLON
    (21) var_declaration -> VAR IDENTIFIER EQ . bool_expression SEMICOLON
    (22) var_declaration -> VAR IDENTIFIER EQ . string_expression SEMICOLON
    (23) var_declaration -> VAR IDENTIFIER EQ . identifier_expression SEMICOLON
    (24) var_declaration -> VAR IDENTIFIER EQ . array SEMICOLON
    (25) var_declaration -> VAR IDENTIFIER EQ . matrix SEMICOLON
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL
    (83) string_expression -> . STRING
    (84) identifier_expression -> . IDENTIFIER
    (87) array -> . LBRACKET elements RBRACKET
    (91) matrix -> . LBRACKET arrays RBRACKET
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    STRING          shift and go to state 50
    IDENTIFIER      shift and go to state 51
    LBRACKET        shift and go to state 63
    NUMBER          shift and go to state 52

    numvar_expression              shift and go to state 91
    bool_expression                shift and go to state 92
    string_expression              shift and go to state 93
    identifier_expression          shift and go to state 94
    array                          shift and go to state 95
    matrix                         shift and go to state 96
    numvar                         shift and go to state 47

state 57

    (26) assignment -> IDENTIFIER EQ numvar_expression . SEMICOLON
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       shift and go to state 97
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 58

    (27) assignment -> IDENTIFIER EQ bool_expression . SEMICOLON
    (69) bool_expression -> bool_expression . AND bool_expression
    (70) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       shift and go to state 98
    AND             shift and go to state 86
    OR              shift and go to state 87


state 59

    (28) assignment -> IDENTIFIER EQ string_expression . SEMICOLON

    SEMICOLON       shift and go to state 99


state 60

    (29) assignment -> IDENTIFIER EQ identifier_expression . SEMICOLON

    SEMICOLON       shift and go to state 100


state 61

    (30) assignment -> IDENTIFIER EQ array . SEMICOLON

    SEMICOLON       shift and go to state 101


state 62

    (31) assignment -> IDENTIFIER EQ matrix . SEMICOLON

    SEMICOLON       shift and go to state 102


state 63

    (87) array -> LBRACKET . elements RBRACKET
    (91) matrix -> LBRACKET . arrays RBRACKET
    (88) elements -> . elements COMMA numvar_expression
    (89) elements -> . numvar_expression
    (90) elements -> . empty
    (92) arrays -> . arrays COMMA array
    (93) arrays -> . array
    (94) arrays -> . empty
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (96) empty -> .
    (87) array -> . LBRACKET elements RBRACKET
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    RBRACKET        reduce using rule 96 (empty -> .)
    COMMA           reduce using rule 96 (empty -> .)
    LBRACKET        shift and go to state 103
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    elements                       shift and go to state 104
    arrays                         shift and go to state 105
    numvar_expression              shift and go to state 106
    empty                          shift and go to state 107
    array                          shift and go to state 108
    numvar                         shift and go to state 47

state 64

    (48) model_operation -> IDENTIFIER DOT IDENTIFIER . LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> IDENTIFIER DOT IDENTIFIER . EQ array SEMICOLON
    (50) model_assign_r -> IDENTIFIER DOT IDENTIFIER . EQ matrix SEMICOLON

    LPAREN          shift and go to state 109
    EQ              shift and go to state 110


state 65

    (33) if_statement -> IF LPAREN condition . RPAREN LBRACE statement_list RBRACE elif_clause else_clause

    RPAREN          shift and go to state 111


state 66

    (85) condition -> comparison_expression .

    RPAREN          reduce using rule 85 (condition -> comparison_expression .)
    SEMICOLON       reduce using rule 85 (condition -> comparison_expression .)


state 67

    (86) condition -> bool_expression .
    (80) comparison_expression -> bool_expression . EQ bool_expression
    (81) comparison_expression -> bool_expression . NE bool_expression
    (82) comparison_expression -> bool_expression . EE bool_expression
    (69) bool_expression -> bool_expression . AND bool_expression
    (70) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 86 (condition -> bool_expression .)
    SEMICOLON       reduce using rule 86 (condition -> bool_expression .)
    EQ              shift and go to state 112
    NE              shift and go to state 113
    EE              shift and go to state 114
    AND             shift and go to state 86
    OR              shift and go to state 87


state 68

    (73) comparison_expression -> numvar_expression . EQ numvar_expression
    (74) comparison_expression -> numvar_expression . NE numvar_expression
    (75) comparison_expression -> numvar_expression . EE numvar_expression
    (76) comparison_expression -> numvar_expression . LT numvar_expression
    (77) comparison_expression -> numvar_expression . LTE numvar_expression
    (78) comparison_expression -> numvar_expression . GT numvar_expression
    (79) comparison_expression -> numvar_expression . GTE numvar_expression
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    EQ              shift and go to state 115
    NE              shift and go to state 116
    EE              shift and go to state 117
    LT              shift and go to state 118
    LTE             shift and go to state 119
    GT              shift and go to state 120
    GTE             shift and go to state 121
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 69

    (68) numvar -> IDENTIFIER .

    EQ              reduce using rule 68 (numvar -> IDENTIFIER .)
    NE              reduce using rule 68 (numvar -> IDENTIFIER .)
    EE              reduce using rule 68 (numvar -> IDENTIFIER .)
    LT              reduce using rule 68 (numvar -> IDENTIFIER .)
    LTE             reduce using rule 68 (numvar -> IDENTIFIER .)
    GT              reduce using rule 68 (numvar -> IDENTIFIER .)
    GTE             reduce using rule 68 (numvar -> IDENTIFIER .)
    PLUS            reduce using rule 68 (numvar -> IDENTIFIER .)
    MINUS           reduce using rule 68 (numvar -> IDENTIFIER .)
    MUL             reduce using rule 68 (numvar -> IDENTIFIER .)
    DIV             reduce using rule 68 (numvar -> IDENTIFIER .)
    POW             reduce using rule 68 (numvar -> IDENTIFIER .)
    RBRACKET        reduce using rule 68 (numvar -> IDENTIFIER .)
    COMMA           reduce using rule 68 (numvar -> IDENTIFIER .)
    SEMICOLON       reduce using rule 68 (numvar -> IDENTIFIER .)
    RPAREN          reduce using rule 68 (numvar -> IDENTIFIER .)


state 70

    (38) while_statement -> WHILE LPAREN condition . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 122


state 71

    (39) for_statement -> FOR LPAREN for_initialization . condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (85) condition -> . comparison_expression
    (86) condition -> . bool_expression
    (73) comparison_expression -> . numvar_expression EQ numvar_expression
    (74) comparison_expression -> . numvar_expression NE numvar_expression
    (75) comparison_expression -> . numvar_expression EE numvar_expression
    (76) comparison_expression -> . numvar_expression LT numvar_expression
    (77) comparison_expression -> . numvar_expression LTE numvar_expression
    (78) comparison_expression -> . numvar_expression GT numvar_expression
    (79) comparison_expression -> . numvar_expression GTE numvar_expression
    (80) comparison_expression -> . bool_expression EQ bool_expression
    (81) comparison_expression -> . bool_expression NE bool_expression
    (82) comparison_expression -> . bool_expression EE bool_expression
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    condition                      shift and go to state 123
    comparison_expression          shift and go to state 66
    bool_expression                shift and go to state 67
    numvar_expression              shift and go to state 68
    numvar                         shift and go to state 47

state 72

    (40) for_initialization -> var_declaration .

    NOT             reduce using rule 40 (for_initialization -> var_declaration .)
    BOOL            reduce using rule 40 (for_initialization -> var_declaration .)
    NUMBER          reduce using rule 40 (for_initialization -> var_declaration .)
    IDENTIFIER      reduce using rule 40 (for_initialization -> var_declaration .)


state 73

    (43) print_statement -> PRINT LPAREN numvar_expression . RPAREN SEMICOLON
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          shift and go to state 124
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 74

    (44) print_statement -> PRINT LPAREN bool_expression . RPAREN SEMICOLON
    (69) bool_expression -> bool_expression . AND bool_expression
    (70) bool_expression -> bool_expression . OR bool_expression

    RPAREN          shift and go to state 125
    AND             shift and go to state 86
    OR              shift and go to state 87


state 75

    (45) print_statement -> PRINT LPAREN string_expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 126


state 76

    (46) print_statement -> PRINT LPAREN identifier_expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 127


state 77

    (47) model_declaration -> MODEL IDENTIFIER EQ . LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON

    LPAREN          shift and go to state 128


state 78

    (51) function_declaration -> FUN IDENTIFIER LPAREN . parameter_list RPAREN LBRACE statement_list RBRACE
    (52) parameter_list -> . parameter_list COMMA IDENTIFIER
    (53) parameter_list -> . IDENTIFIER
    (54) parameter_list -> . empty
    (96) empty -> .

    IDENTIFIER      shift and go to state 129
    RPAREN          reduce using rule 96 (empty -> .)
    COMMA           reduce using rule 96 (empty -> .)

    parameter_list                 shift and go to state 130
    empty                          shift and go to state 131

state 79

    (55) return_statement -> RETURN numvar_expression SEMICOLON .

    NEWLINE         reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    VAR             reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    IF              reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    WHILE           reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    FOR             reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    PRINT           reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    MODEL           reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    FUN             reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    RETURN          reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    CONTINUE        reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    BREAK           reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    COMMENT         reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    $end            reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)
    RBRACE          reduce using rule 55 (return_statement -> RETURN numvar_expression SEMICOLON .)


state 80

    (61) numvar_expression -> numvar_expression PLUS . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 132
    numvar                         shift and go to state 47

state 81

    (62) numvar_expression -> numvar_expression MINUS . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 133
    numvar                         shift and go to state 47

state 82

    (63) numvar_expression -> numvar_expression MUL . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 134
    numvar                         shift and go to state 47

state 83

    (64) numvar_expression -> numvar_expression DIV . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 135
    numvar                         shift and go to state 47

state 84

    (65) numvar_expression -> numvar_expression POW . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 136
    numvar                         shift and go to state 47

state 85

    (56) return_statement -> RETURN bool_expression SEMICOLON .

    NEWLINE         reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    VAR             reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    IF              reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    WHILE           reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    FOR             reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    PRINT           reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    MODEL           reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    FUN             reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    RETURN          reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    CONTINUE        reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    BREAK           reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    COMMENT         reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    $end            reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)
    RBRACE          reduce using rule 56 (return_statement -> RETURN bool_expression SEMICOLON .)


state 86

    (69) bool_expression -> bool_expression AND . bool_expression
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL

    NOT             shift and go to state 48
    BOOL            shift and go to state 49

    bool_expression                shift and go to state 137

state 87

    (70) bool_expression -> bool_expression OR . bool_expression
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL

    NOT             shift and go to state 48
    BOOL            shift and go to state 49

    bool_expression                shift and go to state 138

state 88

    (57) return_statement -> RETURN string_expression SEMICOLON .

    NEWLINE         reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    VAR             reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    IF              reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    WHILE           reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    FOR             reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    PRINT           reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    MODEL           reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    FUN             reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    RETURN          reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    CONTINUE        reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    BREAK           reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    COMMENT         reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    $end            reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)
    RBRACE          reduce using rule 57 (return_statement -> RETURN string_expression SEMICOLON .)


state 89

    (58) return_statement -> RETURN identifier_expression SEMICOLON .

    NEWLINE         reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    VAR             reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    IF              reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    WHILE           reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    FOR             reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    PRINT           reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    MODEL           reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    FUN             reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    RETURN          reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    CONTINUE        reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    BREAK           reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    COMMENT         reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    $end            reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)
    RBRACE          reduce using rule 58 (return_statement -> RETURN identifier_expression SEMICOLON .)


state 90

    (71) bool_expression -> NOT bool_expression .
    (69) bool_expression -> bool_expression . AND bool_expression
    (70) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       reduce using rule 71 (bool_expression -> NOT bool_expression .)
    AND             reduce using rule 71 (bool_expression -> NOT bool_expression .)
    OR              reduce using rule 71 (bool_expression -> NOT bool_expression .)
    EQ              reduce using rule 71 (bool_expression -> NOT bool_expression .)
    NE              reduce using rule 71 (bool_expression -> NOT bool_expression .)
    EE              reduce using rule 71 (bool_expression -> NOT bool_expression .)
    RPAREN          reduce using rule 71 (bool_expression -> NOT bool_expression .)

  ! AND             [ shift and go to state 86 ]
  ! OR              [ shift and go to state 87 ]


state 91

    (20) var_declaration -> VAR IDENTIFIER EQ numvar_expression . SEMICOLON
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       shift and go to state 139
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 92

    (21) var_declaration -> VAR IDENTIFIER EQ bool_expression . SEMICOLON
    (69) bool_expression -> bool_expression . AND bool_expression
    (70) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       shift and go to state 140
    AND             shift and go to state 86
    OR              shift and go to state 87


state 93

    (22) var_declaration -> VAR IDENTIFIER EQ string_expression . SEMICOLON

    SEMICOLON       shift and go to state 141


state 94

    (23) var_declaration -> VAR IDENTIFIER EQ identifier_expression . SEMICOLON

    SEMICOLON       shift and go to state 142


state 95

    (24) var_declaration -> VAR IDENTIFIER EQ array . SEMICOLON

    SEMICOLON       shift and go to state 143


state 96

    (25) var_declaration -> VAR IDENTIFIER EQ matrix . SEMICOLON

    SEMICOLON       shift and go to state 144


state 97

    (26) assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .

    NEWLINE         reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    VAR             reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    IF              reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    WHILE           reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    FOR             reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    PRINT           reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    MODEL           reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    FUN             reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    RETURN          reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    CONTINUE        reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    BREAK           reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    COMMENT         reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    $end            reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)
    RBRACE          reduce using rule 26 (assignment -> IDENTIFIER EQ numvar_expression SEMICOLON .)


state 98

    (27) assignment -> IDENTIFIER EQ bool_expression SEMICOLON .

    NEWLINE         reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    VAR             reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    IF              reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    WHILE           reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    FOR             reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    PRINT           reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    MODEL           reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    FUN             reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    RETURN          reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    CONTINUE        reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    BREAK           reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    COMMENT         reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    $end            reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)
    RBRACE          reduce using rule 27 (assignment -> IDENTIFIER EQ bool_expression SEMICOLON .)


state 99

    (28) assignment -> IDENTIFIER EQ string_expression SEMICOLON .

    NEWLINE         reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    VAR             reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    IF              reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    WHILE           reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    FOR             reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    PRINT           reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    MODEL           reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    FUN             reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    RETURN          reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    CONTINUE        reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    BREAK           reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    COMMENT         reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    $end            reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)
    RBRACE          reduce using rule 28 (assignment -> IDENTIFIER EQ string_expression SEMICOLON .)


state 100

    (29) assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .

    NEWLINE         reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    VAR             reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    IF              reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    WHILE           reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    FOR             reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    PRINT           reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    MODEL           reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    FUN             reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    RETURN          reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    CONTINUE        reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    BREAK           reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    COMMENT         reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    $end            reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)
    RBRACE          reduce using rule 29 (assignment -> IDENTIFIER EQ identifier_expression SEMICOLON .)


state 101

    (30) assignment -> IDENTIFIER EQ array SEMICOLON .

    NEWLINE         reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    VAR             reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    IDENTIFIER      reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    IF              reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    WHILE           reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    FOR             reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    PRINT           reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    MODEL           reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    FUN             reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    RETURN          reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    CONTINUE        reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    BREAK           reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    COMMENT         reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    $end            reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)
    RBRACE          reduce using rule 30 (assignment -> IDENTIFIER EQ array SEMICOLON .)


state 102

    (31) assignment -> IDENTIFIER EQ matrix SEMICOLON .

    NEWLINE         reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    VAR             reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    IDENTIFIER      reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    IF              reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    WHILE           reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    FOR             reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    PRINT           reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    MODEL           reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    FUN             reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    RETURN          reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    CONTINUE        reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    BREAK           reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    COMMENT         reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    $end            reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)
    RBRACE          reduce using rule 31 (assignment -> IDENTIFIER EQ matrix SEMICOLON .)


state 103

    (87) array -> LBRACKET . elements RBRACKET
    (88) elements -> . elements COMMA numvar_expression
    (89) elements -> . numvar_expression
    (90) elements -> . empty
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (96) empty -> .
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    RBRACKET        reduce using rule 96 (empty -> .)
    COMMA           reduce using rule 96 (empty -> .)
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    elements                       shift and go to state 104
    numvar_expression              shift and go to state 106
    empty                          shift and go to state 145
    numvar                         shift and go to state 47

state 104

    (87) array -> LBRACKET elements . RBRACKET
    (88) elements -> elements . COMMA numvar_expression

    RBRACKET        shift and go to state 146
    COMMA           shift and go to state 147


state 105

    (91) matrix -> LBRACKET arrays . RBRACKET
    (92) arrays -> arrays . COMMA array

    RBRACKET        shift and go to state 148
    COMMA           shift and go to state 149


state 106

    (89) elements -> numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    RBRACKET        reduce using rule 89 (elements -> numvar_expression .)
    COMMA           reduce using rule 89 (elements -> numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 107

    (90) elements -> empty .
    (94) arrays -> empty .

  ! reduce/reduce conflict for RBRACKET resolved using rule 90 (elements -> empty .)
  ! reduce/reduce conflict for COMMA resolved using rule 90 (elements -> empty .)
    RBRACKET        reduce using rule 90 (elements -> empty .)
    COMMA           reduce using rule 90 (elements -> empty .)

  ! RBRACKET        [ reduce using rule 94 (arrays -> empty .) ]
  ! COMMA           [ reduce using rule 94 (arrays -> empty .) ]


state 108

    (93) arrays -> array .

    RBRACKET        reduce using rule 93 (arrays -> array .)
    COMMA           reduce using rule 93 (arrays -> array .)


state 109

    (48) model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 150


state 110

    (49) model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ . array SEMICOLON
    (50) model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ . matrix SEMICOLON
    (87) array -> . LBRACKET elements RBRACKET
    (91) matrix -> . LBRACKET arrays RBRACKET

    LBRACKET        shift and go to state 63

    array                          shift and go to state 151
    matrix                         shift and go to state 152

state 111

    (33) if_statement -> IF LPAREN condition RPAREN . LBRACE statement_list RBRACE elif_clause else_clause

    LBRACE          shift and go to state 153


state 112

    (80) comparison_expression -> bool_expression EQ . bool_expression
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL

    NOT             shift and go to state 48
    BOOL            shift and go to state 49

    bool_expression                shift and go to state 154

state 113

    (81) comparison_expression -> bool_expression NE . bool_expression
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL

    NOT             shift and go to state 48
    BOOL            shift and go to state 49

    bool_expression                shift and go to state 155

state 114

    (82) comparison_expression -> bool_expression EE . bool_expression
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL

    NOT             shift and go to state 48
    BOOL            shift and go to state 49

    bool_expression                shift and go to state 156

state 115

    (73) comparison_expression -> numvar_expression EQ . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 157
    numvar                         shift and go to state 47

state 116

    (74) comparison_expression -> numvar_expression NE . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 158
    numvar                         shift and go to state 47

state 117

    (75) comparison_expression -> numvar_expression EE . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 159
    numvar                         shift and go to state 47

state 118

    (76) comparison_expression -> numvar_expression LT . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 160
    numvar                         shift and go to state 47

state 119

    (77) comparison_expression -> numvar_expression LTE . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 161
    numvar                         shift and go to state 47

state 120

    (78) comparison_expression -> numvar_expression GT . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 162
    numvar                         shift and go to state 47

state 121

    (79) comparison_expression -> numvar_expression GTE . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 163
    numvar                         shift and go to state 47

state 122

    (38) while_statement -> WHILE LPAREN condition RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 164


state 123

    (39) for_statement -> FOR LPAREN for_initialization condition . SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    SEMICOLON       shift and go to state 165


state 124

    (43) print_statement -> PRINT LPAREN numvar_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 166


state 125

    (44) print_statement -> PRINT LPAREN bool_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 167


state 126

    (45) print_statement -> PRINT LPAREN string_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 168


state 127

    (46) print_statement -> PRINT LPAREN identifier_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 169


state 128

    (47) model_declaration -> MODEL IDENTIFIER EQ LPAREN . NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON

    NUMBER          shift and go to state 170


state 129

    (53) parameter_list -> IDENTIFIER .

    RPAREN          reduce using rule 53 (parameter_list -> IDENTIFIER .)
    COMMA           reduce using rule 53 (parameter_list -> IDENTIFIER .)


state 130

    (51) function_declaration -> FUN IDENTIFIER LPAREN parameter_list . RPAREN LBRACE statement_list RBRACE
    (52) parameter_list -> parameter_list . COMMA IDENTIFIER

    RPAREN          shift and go to state 171
    COMMA           shift and go to state 172


state 131

    (54) parameter_list -> empty .

    RPAREN          reduce using rule 54 (parameter_list -> empty .)
    COMMA           reduce using rule 54 (parameter_list -> empty .)


state 132

    (61) numvar_expression -> numvar_expression PLUS numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    PLUS            reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    MINUS           reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    EQ              reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    NE              reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    EE              reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    LT              reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    LTE             reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    GT              reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    GTE             reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    RPAREN          reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    RBRACKET        reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    COMMA           reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .)
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84

  ! MUL             [ reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .) ]
  ! DIV             [ reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .) ]
  ! POW             [ reduce using rule 61 (numvar_expression -> numvar_expression PLUS numvar_expression .) ]
  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]


state 133

    (62) numvar_expression -> numvar_expression MINUS numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    PLUS            reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    MINUS           reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    EQ              reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    NE              reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    EE              reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    LT              reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    LTE             reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    GT              reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    GTE             reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    RPAREN          reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    RBRACKET        reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    COMMA           reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .)
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84

  ! MUL             [ reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .) ]
  ! DIV             [ reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .) ]
  ! POW             [ reduce using rule 62 (numvar_expression -> numvar_expression MINUS numvar_expression .) ]
  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]


state 134

    (63) numvar_expression -> numvar_expression MUL numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    PLUS            reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    MINUS           reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    MUL             reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    DIV             reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    EQ              reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    NE              reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    EE              reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    LT              reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    LTE             reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    GT              reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    GTE             reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    RPAREN          reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    RBRACKET        reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    COMMA           reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .)
    POW             shift and go to state 84

  ! POW             [ reduce using rule 63 (numvar_expression -> numvar_expression MUL numvar_expression .) ]
  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]
  ! MUL             [ shift and go to state 82 ]
  ! DIV             [ shift and go to state 83 ]


state 135

    (64) numvar_expression -> numvar_expression DIV numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    PLUS            reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    MINUS           reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    MUL             reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    DIV             reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    EQ              reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    NE              reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    EE              reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    LT              reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    LTE             reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    GT              reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    GTE             reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    RPAREN          reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    RBRACKET        reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    COMMA           reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .)
    POW             shift and go to state 84

  ! POW             [ reduce using rule 64 (numvar_expression -> numvar_expression DIV numvar_expression .) ]
  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]
  ! MUL             [ shift and go to state 82 ]
  ! DIV             [ shift and go to state 83 ]


state 136

    (65) numvar_expression -> numvar_expression POW numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    SEMICOLON       reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    PLUS            reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    MINUS           reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    MUL             reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    DIV             reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    EQ              reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    NE              reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    EE              reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    LT              reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    LTE             reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    GT              reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    GTE             reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    RPAREN          reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    RBRACKET        reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    COMMA           reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .)
    POW             shift and go to state 84

  ! POW             [ reduce using rule 65 (numvar_expression -> numvar_expression POW numvar_expression .) ]
  ! PLUS            [ shift and go to state 80 ]
  ! MINUS           [ shift and go to state 81 ]
  ! MUL             [ shift and go to state 82 ]
  ! DIV             [ shift and go to state 83 ]


state 137

    (69) bool_expression -> bool_expression AND bool_expression .
    (69) bool_expression -> bool_expression . AND bool_expression
    (70) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       reduce using rule 69 (bool_expression -> bool_expression AND bool_expression .)
    AND             reduce using rule 69 (bool_expression -> bool_expression AND bool_expression .)
    OR              reduce using rule 69 (bool_expression -> bool_expression AND bool_expression .)
    EQ              reduce using rule 69 (bool_expression -> bool_expression AND bool_expression .)
    NE              reduce using rule 69 (bool_expression -> bool_expression AND bool_expression .)
    EE              reduce using rule 69 (bool_expression -> bool_expression AND bool_expression .)
    RPAREN          reduce using rule 69 (bool_expression -> bool_expression AND bool_expression .)

  ! AND             [ shift and go to state 86 ]
  ! OR              [ shift and go to state 87 ]


state 138

    (70) bool_expression -> bool_expression OR bool_expression .
    (69) bool_expression -> bool_expression . AND bool_expression
    (70) bool_expression -> bool_expression . OR bool_expression

    SEMICOLON       reduce using rule 70 (bool_expression -> bool_expression OR bool_expression .)
    OR              reduce using rule 70 (bool_expression -> bool_expression OR bool_expression .)
    EQ              reduce using rule 70 (bool_expression -> bool_expression OR bool_expression .)
    NE              reduce using rule 70 (bool_expression -> bool_expression OR bool_expression .)
    EE              reduce using rule 70 (bool_expression -> bool_expression OR bool_expression .)
    RPAREN          reduce using rule 70 (bool_expression -> bool_expression OR bool_expression .)
    AND             shift and go to state 86

  ! AND             [ reduce using rule 70 (bool_expression -> bool_expression OR bool_expression .) ]
  ! OR              [ shift and go to state 87 ]


state 139

    (20) var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .

    NEWLINE         reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    VAR             reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    IF              reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    WHILE           reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    FOR             reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    PRINT           reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    MODEL           reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    FUN             reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    RETURN          reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    CONTINUE        reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    BREAK           reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    COMMENT         reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    $end            reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    NOT             reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    BOOL            reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    NUMBER          reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)
    RBRACE          reduce using rule 20 (var_declaration -> VAR IDENTIFIER EQ numvar_expression SEMICOLON .)


state 140

    (21) var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .

    NEWLINE         reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    VAR             reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    IF              reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    WHILE           reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    FOR             reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    PRINT           reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    MODEL           reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    FUN             reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    RETURN          reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    CONTINUE        reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    BREAK           reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    COMMENT         reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    $end            reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    NOT             reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    BOOL            reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    NUMBER          reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)
    RBRACE          reduce using rule 21 (var_declaration -> VAR IDENTIFIER EQ bool_expression SEMICOLON .)


state 141

    (22) var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .

    NEWLINE         reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    VAR             reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    IF              reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    WHILE           reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    FOR             reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    PRINT           reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    MODEL           reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    FUN             reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    RETURN          reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    CONTINUE        reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    BREAK           reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    COMMENT         reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    $end            reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    NOT             reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    BOOL            reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    NUMBER          reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)
    RBRACE          reduce using rule 22 (var_declaration -> VAR IDENTIFIER EQ string_expression SEMICOLON .)


state 142

    (23) var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .

    NEWLINE         reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    VAR             reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    IDENTIFIER      reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    IF              reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    WHILE           reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    FOR             reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    PRINT           reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    MODEL           reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    FUN             reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    RETURN          reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    CONTINUE        reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    BREAK           reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    COMMENT         reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    $end            reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    NOT             reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    BOOL            reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    NUMBER          reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)
    RBRACE          reduce using rule 23 (var_declaration -> VAR IDENTIFIER EQ identifier_expression SEMICOLON .)


state 143

    (24) var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .

    NEWLINE         reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    VAR             reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    IDENTIFIER      reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    IF              reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    WHILE           reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    FOR             reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    PRINT           reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    MODEL           reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    FUN             reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    RETURN          reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    CONTINUE        reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    BREAK           reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    COMMENT         reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    $end            reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    NOT             reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    BOOL            reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    NUMBER          reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)
    RBRACE          reduce using rule 24 (var_declaration -> VAR IDENTIFIER EQ array SEMICOLON .)


state 144

    (25) var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .

    NEWLINE         reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    VAR             reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    IDENTIFIER      reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    IF              reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    WHILE           reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    FOR             reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    PRINT           reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    MODEL           reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    FUN             reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    RETURN          reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    CONTINUE        reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    BREAK           reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    COMMENT         reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    $end            reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    NOT             reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    BOOL            reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    NUMBER          reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)
    RBRACE          reduce using rule 25 (var_declaration -> VAR IDENTIFIER EQ matrix SEMICOLON .)


state 145

    (90) elements -> empty .

    RBRACKET        reduce using rule 90 (elements -> empty .)
    COMMA           reduce using rule 90 (elements -> empty .)


state 146

    (87) array -> LBRACKET elements RBRACKET .

    SEMICOLON       reduce using rule 87 (array -> LBRACKET elements RBRACKET .)
    RBRACKET        reduce using rule 87 (array -> LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 87 (array -> LBRACKET elements RBRACKET .)


state 147

    (88) elements -> elements COMMA . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 173
    numvar                         shift and go to state 47

state 148

    (91) matrix -> LBRACKET arrays RBRACKET .

    SEMICOLON       reduce using rule 91 (matrix -> LBRACKET arrays RBRACKET .)
    RBRACKET        reduce using rule 91 (matrix -> LBRACKET arrays RBRACKET .)


state 149

    (92) arrays -> arrays COMMA . array
    (87) array -> . LBRACKET elements RBRACKET

    LBRACKET        shift and go to state 103

    array                          shift and go to state 174

state 150

    (48) model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 175


state 151

    (49) model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array . SEMICOLON

    SEMICOLON       shift and go to state 176


state 152

    (50) model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix . SEMICOLON

    SEMICOLON       shift and go to state 177


state 153

    (33) if_statement -> IF LPAREN condition RPAREN LBRACE . statement_list RBRACE elif_clause else_clause
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement_list                 shift and go to state 178
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 154

    (80) comparison_expression -> bool_expression EQ bool_expression .
    (69) bool_expression -> bool_expression . AND bool_expression
    (70) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 80 (comparison_expression -> bool_expression EQ bool_expression .)
    SEMICOLON       reduce using rule 80 (comparison_expression -> bool_expression EQ bool_expression .)
    AND             shift and go to state 86
    OR              shift and go to state 87


state 155

    (81) comparison_expression -> bool_expression NE bool_expression .
    (69) bool_expression -> bool_expression . AND bool_expression
    (70) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 81 (comparison_expression -> bool_expression NE bool_expression .)
    SEMICOLON       reduce using rule 81 (comparison_expression -> bool_expression NE bool_expression .)
    AND             shift and go to state 86
    OR              shift and go to state 87


state 156

    (82) comparison_expression -> bool_expression EE bool_expression .
    (69) bool_expression -> bool_expression . AND bool_expression
    (70) bool_expression -> bool_expression . OR bool_expression

    RPAREN          reduce using rule 82 (comparison_expression -> bool_expression EE bool_expression .)
    SEMICOLON       reduce using rule 82 (comparison_expression -> bool_expression EE bool_expression .)
    AND             shift and go to state 86
    OR              shift and go to state 87


state 157

    (73) comparison_expression -> numvar_expression EQ numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 73 (comparison_expression -> numvar_expression EQ numvar_expression .)
    SEMICOLON       reduce using rule 73 (comparison_expression -> numvar_expression EQ numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 158

    (74) comparison_expression -> numvar_expression NE numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 74 (comparison_expression -> numvar_expression NE numvar_expression .)
    SEMICOLON       reduce using rule 74 (comparison_expression -> numvar_expression NE numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 159

    (75) comparison_expression -> numvar_expression EE numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 75 (comparison_expression -> numvar_expression EE numvar_expression .)
    SEMICOLON       reduce using rule 75 (comparison_expression -> numvar_expression EE numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 160

    (76) comparison_expression -> numvar_expression LT numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 76 (comparison_expression -> numvar_expression LT numvar_expression .)
    SEMICOLON       reduce using rule 76 (comparison_expression -> numvar_expression LT numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 161

    (77) comparison_expression -> numvar_expression LTE numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 77 (comparison_expression -> numvar_expression LTE numvar_expression .)
    SEMICOLON       reduce using rule 77 (comparison_expression -> numvar_expression LTE numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 162

    (78) comparison_expression -> numvar_expression GT numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 78 (comparison_expression -> numvar_expression GT numvar_expression .)
    SEMICOLON       reduce using rule 78 (comparison_expression -> numvar_expression GT numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 163

    (79) comparison_expression -> numvar_expression GTE numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 79 (comparison_expression -> numvar_expression GTE numvar_expression .)
    SEMICOLON       reduce using rule 79 (comparison_expression -> numvar_expression GTE numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 164

    (38) while_statement -> WHILE LPAREN condition RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement_list                 shift and go to state 179
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 165

    (39) for_statement -> FOR LPAREN for_initialization condition SEMICOLON . for_update RPAREN LBRACE statement_list RBRACE
    (41) for_update -> . IDENTIFIER EQ numvar_expression
    (42) for_update -> . empty
    (96) empty -> .

    IDENTIFIER      shift and go to state 181
    RPAREN          reduce using rule 96 (empty -> .)

    for_update                     shift and go to state 180
    empty                          shift and go to state 182

state 166

    (43) print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .

    NEWLINE         reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    VAR             reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    IF              reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    FOR             reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    MODEL           reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    FUN             reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    $end            reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 43 (print_statement -> PRINT LPAREN numvar_expression RPAREN SEMICOLON .)


state 167

    (44) print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .

    NEWLINE         reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    VAR             reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    IF              reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    FOR             reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    MODEL           reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    FUN             reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    $end            reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 44 (print_statement -> PRINT LPAREN bool_expression RPAREN SEMICOLON .)


state 168

    (45) print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .

    NEWLINE         reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    VAR             reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    IF              reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    FOR             reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    MODEL           reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    FUN             reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    $end            reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 45 (print_statement -> PRINT LPAREN string_expression RPAREN SEMICOLON .)


state 169

    (46) print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .

    NEWLINE         reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    VAR             reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    IF              reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    FOR             reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    MODEL           reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    FUN             reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    $end            reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 46 (print_statement -> PRINT LPAREN identifier_expression RPAREN SEMICOLON .)


state 170

    (47) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER . COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON

    COMMA           shift and go to state 183


state 171

    (51) function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 184


state 172

    (52) parameter_list -> parameter_list COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 185


state 173

    (88) elements -> elements COMMA numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    RBRACKET        reduce using rule 88 (elements -> elements COMMA numvar_expression .)
    COMMA           reduce using rule 88 (elements -> elements COMMA numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 174

    (92) arrays -> arrays COMMA array .

    RBRACKET        reduce using rule 92 (arrays -> arrays COMMA array .)
    COMMA           reduce using rule 92 (arrays -> arrays COMMA array .)


state 175

    (48) model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .

    NEWLINE         reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    MODEL           reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    FUN             reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    COMMENT         reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 48 (model_operation -> IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON .)


state 176

    (49) model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .

    NEWLINE         reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    VAR             reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    IDENTIFIER      reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    IF              reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    WHILE           reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    FOR             reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    PRINT           reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    MODEL           reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    FUN             reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    RETURN          reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    CONTINUE        reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    BREAK           reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    COMMENT         reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    $end            reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)
    RBRACE          reduce using rule 49 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON .)


state 177

    (50) model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .

    NEWLINE         reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    VAR             reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    IDENTIFIER      reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    IF              reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    WHILE           reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    FOR             reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    PRINT           reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    MODEL           reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    FUN             reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    RETURN          reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    CONTINUE        reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    BREAK           reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    COMMENT         reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    $end            reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)
    RBRACE          reduce using rule 50 (model_assign_r -> IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON .)


state 178

    (33) if_statement -> IF LPAREN condition RPAREN LBRACE statement_list . RBRACE elif_clause else_clause
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    RBRACE          shift and go to state 186
    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 179

    (38) while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    RBRACE          shift and go to state 187
    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 180

    (39) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 188


state 181

    (41) for_update -> IDENTIFIER . EQ numvar_expression

    EQ              shift and go to state 189


state 182

    (42) for_update -> empty .

    RPAREN          reduce using rule 42 (for_update -> empty .)


state 183

    (47) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA . array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (87) array -> . LBRACKET elements RBRACKET

    LBRACKET        shift and go to state 103

    array                          shift and go to state 190

state 184

    (51) function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement_list                 shift and go to state 191
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 185

    (52) parameter_list -> parameter_list COMMA IDENTIFIER .

    RPAREN          reduce using rule 52 (parameter_list -> parameter_list COMMA IDENTIFIER .)
    COMMA           reduce using rule 52 (parameter_list -> parameter_list COMMA IDENTIFIER .)


state 186

    (33) if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE . elif_clause else_clause
    (34) elif_clause -> . ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause
    (35) elif_clause -> . empty
    (96) empty -> .

    ELIF            shift and go to state 193
    ELSE            reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)
    VAR             reduce using rule 96 (empty -> .)
    IDENTIFIER      reduce using rule 96 (empty -> .)
    IF              reduce using rule 96 (empty -> .)
    WHILE           reduce using rule 96 (empty -> .)
    FOR             reduce using rule 96 (empty -> .)
    PRINT           reduce using rule 96 (empty -> .)
    MODEL           reduce using rule 96 (empty -> .)
    FUN             reduce using rule 96 (empty -> .)
    RETURN          reduce using rule 96 (empty -> .)
    CONTINUE        reduce using rule 96 (empty -> .)
    BREAK           reduce using rule 96 (empty -> .)
    COMMENT         reduce using rule 96 (empty -> .)
    $end            reduce using rule 96 (empty -> .)
    RBRACE          reduce using rule 96 (empty -> .)

    elif_clause                    shift and go to state 192
    empty                          shift and go to state 194

state 187

    (38) while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .

    NEWLINE         reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    VAR             reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    MODEL           reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    FUN             reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    COMMENT         reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 38 (while_statement -> WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE .)


state 188

    (39) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 195


state 189

    (41) for_update -> IDENTIFIER EQ . numvar_expression
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    numvar_expression              shift and go to state 196
    numvar                         shift and go to state 47

state 190

    (47) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array . COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON

    COMMA           shift and go to state 197


state 191

    (51) function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    RBRACE          shift and go to state 198
    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 192

    (33) if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause . else_clause
    (36) else_clause -> . ELSE LBRACE statement_list RBRACE
    (37) else_clause -> . empty
    (96) empty -> .

    ELSE            shift and go to state 200
    NEWLINE         reduce using rule 96 (empty -> .)
    VAR             reduce using rule 96 (empty -> .)
    IDENTIFIER      reduce using rule 96 (empty -> .)
    IF              reduce using rule 96 (empty -> .)
    WHILE           reduce using rule 96 (empty -> .)
    FOR             reduce using rule 96 (empty -> .)
    PRINT           reduce using rule 96 (empty -> .)
    MODEL           reduce using rule 96 (empty -> .)
    FUN             reduce using rule 96 (empty -> .)
    RETURN          reduce using rule 96 (empty -> .)
    CONTINUE        reduce using rule 96 (empty -> .)
    BREAK           reduce using rule 96 (empty -> .)
    COMMENT         reduce using rule 96 (empty -> .)
    $end            reduce using rule 96 (empty -> .)
    RBRACE          reduce using rule 96 (empty -> .)

    else_clause                    shift and go to state 199
    empty                          shift and go to state 201

state 193

    (34) elif_clause -> ELIF . LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause

    LPAREN          shift and go to state 202


state 194

    (35) elif_clause -> empty .

    ELSE            reduce using rule 35 (elif_clause -> empty .)
    NEWLINE         reduce using rule 35 (elif_clause -> empty .)
    VAR             reduce using rule 35 (elif_clause -> empty .)
    IDENTIFIER      reduce using rule 35 (elif_clause -> empty .)
    IF              reduce using rule 35 (elif_clause -> empty .)
    WHILE           reduce using rule 35 (elif_clause -> empty .)
    FOR             reduce using rule 35 (elif_clause -> empty .)
    PRINT           reduce using rule 35 (elif_clause -> empty .)
    MODEL           reduce using rule 35 (elif_clause -> empty .)
    FUN             reduce using rule 35 (elif_clause -> empty .)
    RETURN          reduce using rule 35 (elif_clause -> empty .)
    CONTINUE        reduce using rule 35 (elif_clause -> empty .)
    BREAK           reduce using rule 35 (elif_clause -> empty .)
    COMMENT         reduce using rule 35 (elif_clause -> empty .)
    $end            reduce using rule 35 (elif_clause -> empty .)
    RBRACE          reduce using rule 35 (elif_clause -> empty .)


state 195

    (39) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement_list                 shift and go to state 203
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 196

    (41) for_update -> IDENTIFIER EQ numvar_expression .
    (61) numvar_expression -> numvar_expression . PLUS numvar_expression
    (62) numvar_expression -> numvar_expression . MINUS numvar_expression
    (63) numvar_expression -> numvar_expression . MUL numvar_expression
    (64) numvar_expression -> numvar_expression . DIV numvar_expression
    (65) numvar_expression -> numvar_expression . POW numvar_expression

    RPAREN          reduce using rule 41 (for_update -> IDENTIFIER EQ numvar_expression .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    MUL             shift and go to state 82
    DIV             shift and go to state 83
    POW             shift and go to state 84


state 197

    (47) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA . array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (87) array -> . LBRACKET elements RBRACKET

    LBRACKET        shift and go to state 103

    array                          shift and go to state 204

state 198

    (51) function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .

    NEWLINE         reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    VAR             reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    MODEL           reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    FUN             reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    COMMENT         reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 51 (function_declaration -> FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE .)


state 199

    (33) if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .

    NEWLINE         reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    VAR             reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    IDENTIFIER      reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    IF              reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    WHILE           reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    FOR             reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    PRINT           reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    MODEL           reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    FUN             reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    RETURN          reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    CONTINUE        reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    BREAK           reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    COMMENT         reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    $end            reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)
    RBRACE          reduce using rule 33 (if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause .)


state 200

    (36) else_clause -> ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 205


state 201

    (37) else_clause -> empty .

    NEWLINE         reduce using rule 37 (else_clause -> empty .)
    VAR             reduce using rule 37 (else_clause -> empty .)
    IDENTIFIER      reduce using rule 37 (else_clause -> empty .)
    IF              reduce using rule 37 (else_clause -> empty .)
    WHILE           reduce using rule 37 (else_clause -> empty .)
    FOR             reduce using rule 37 (else_clause -> empty .)
    PRINT           reduce using rule 37 (else_clause -> empty .)
    MODEL           reduce using rule 37 (else_clause -> empty .)
    FUN             reduce using rule 37 (else_clause -> empty .)
    RETURN          reduce using rule 37 (else_clause -> empty .)
    CONTINUE        reduce using rule 37 (else_clause -> empty .)
    BREAK           reduce using rule 37 (else_clause -> empty .)
    COMMENT         reduce using rule 37 (else_clause -> empty .)
    $end            reduce using rule 37 (else_clause -> empty .)
    RBRACE          reduce using rule 37 (else_clause -> empty .)


state 202

    (34) elif_clause -> ELIF LPAREN . condition RPAREN LBRACE statement_list RBRACE elif_clause
    (85) condition -> . comparison_expression
    (86) condition -> . bool_expression
    (73) comparison_expression -> . numvar_expression EQ numvar_expression
    (74) comparison_expression -> . numvar_expression NE numvar_expression
    (75) comparison_expression -> . numvar_expression EE numvar_expression
    (76) comparison_expression -> . numvar_expression LT numvar_expression
    (77) comparison_expression -> . numvar_expression LTE numvar_expression
    (78) comparison_expression -> . numvar_expression GT numvar_expression
    (79) comparison_expression -> . numvar_expression GTE numvar_expression
    (80) comparison_expression -> . bool_expression EQ bool_expression
    (81) comparison_expression -> . bool_expression NE bool_expression
    (82) comparison_expression -> . bool_expression EE bool_expression
    (69) bool_expression -> . bool_expression AND bool_expression
    (70) bool_expression -> . bool_expression OR bool_expression
    (71) bool_expression -> . NOT bool_expression
    (72) bool_expression -> . BOOL
    (61) numvar_expression -> . numvar_expression PLUS numvar_expression
    (62) numvar_expression -> . numvar_expression MINUS numvar_expression
    (63) numvar_expression -> . numvar_expression MUL numvar_expression
    (64) numvar_expression -> . numvar_expression DIV numvar_expression
    (65) numvar_expression -> . numvar_expression POW numvar_expression
    (66) numvar_expression -> . numvar
    (67) numvar -> . NUMBER
    (68) numvar -> . IDENTIFIER

    NOT             shift and go to state 48
    BOOL            shift and go to state 49
    NUMBER          shift and go to state 52
    IDENTIFIER      shift and go to state 69

    condition                      shift and go to state 206
    comparison_expression          shift and go to state 66
    bool_expression                shift and go to state 67
    numvar_expression              shift and go to state 68
    numvar                         shift and go to state 47

state 203

    (39) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    RBRACE          shift and go to state 207
    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 204

    (47) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array . COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON

    COMMA           shift and go to state 208


state 205

    (36) else_clause -> ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement_list                 shift and go to state 209
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 206

    (34) elif_clause -> ELIF LPAREN condition . RPAREN LBRACE statement_list RBRACE elif_clause

    RPAREN          shift and go to state 210


state 207

    (39) for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .

    NEWLINE         reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    VAR             reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    MODEL           reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    FUN             reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    COMMENT         reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 39 (for_statement -> FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)


state 208

    (47) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA . LBRACKET matrix RBRACKET RPAREN SEMICOLON

    LBRACKET        shift and go to state 211


state 209

    (36) else_clause -> ELSE LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    RBRACE          shift and go to state 212
    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 210

    (34) elif_clause -> ELIF LPAREN condition RPAREN . LBRACE statement_list RBRACE elif_clause

    LBRACE          shift and go to state 213


state 211

    (47) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET . matrix RBRACKET RPAREN SEMICOLON
    (91) matrix -> . LBRACKET arrays RBRACKET

    LBRACKET        shift and go to state 214

    matrix                         shift and go to state 215

state 212

    (36) else_clause -> ELSE LBRACE statement_list RBRACE .

    NEWLINE         reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    VAR             reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    MODEL           reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    FUN             reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    COMMENT         reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 36 (else_clause -> ELSE LBRACE statement_list RBRACE .)


state 213

    (34) elif_clause -> ELIF LPAREN condition RPAREN LBRACE . statement_list RBRACE elif_clause
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement_list                 shift and go to state 216
    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 214

    (91) matrix -> LBRACKET . arrays RBRACKET
    (92) arrays -> . arrays COMMA array
    (93) arrays -> . array
    (94) arrays -> . empty
    (87) array -> . LBRACKET elements RBRACKET
    (96) empty -> .

    LBRACKET        shift and go to state 103
    RBRACKET        reduce using rule 96 (empty -> .)
    COMMA           reduce using rule 96 (empty -> .)

    arrays                         shift and go to state 105
    array                          shift and go to state 108
    empty                          shift and go to state 217

state 215

    (47) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix . RBRACKET RPAREN SEMICOLON

    RBRACKET        shift and go to state 218


state 216

    (34) elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list . RBRACE elif_clause
    (2) statement_list -> statement_list . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . print_statement
    (10) statement -> . model_declaration
    (11) statement -> . model_operation
    (12) statement -> . model_assign_r
    (13) statement -> . function_declaration
    (14) statement -> . return_statement
    (15) statement -> . continue_statement
    (16) statement -> . break_statement
    (17) statement -> . variable_query
    (18) statement -> . comment_expression
    (19) statement -> . NEWLINE
    (20) var_declaration -> . VAR IDENTIFIER EQ numvar_expression SEMICOLON
    (21) var_declaration -> . VAR IDENTIFIER EQ bool_expression SEMICOLON
    (22) var_declaration -> . VAR IDENTIFIER EQ string_expression SEMICOLON
    (23) var_declaration -> . VAR IDENTIFIER EQ identifier_expression SEMICOLON
    (24) var_declaration -> . VAR IDENTIFIER EQ array SEMICOLON
    (25) var_declaration -> . VAR IDENTIFIER EQ matrix SEMICOLON
    (26) assignment -> . IDENTIFIER EQ numvar_expression SEMICOLON
    (27) assignment -> . IDENTIFIER EQ bool_expression SEMICOLON
    (28) assignment -> . IDENTIFIER EQ string_expression SEMICOLON
    (29) assignment -> . IDENTIFIER EQ identifier_expression SEMICOLON
    (30) assignment -> . IDENTIFIER EQ array SEMICOLON
    (31) assignment -> . IDENTIFIER EQ matrix SEMICOLON
    (33) if_statement -> . IF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause else_clause
    (38) while_statement -> . WHILE LPAREN condition RPAREN LBRACE statement_list RBRACE
    (39) for_statement -> . FOR LPAREN for_initialization condition SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (43) print_statement -> . PRINT LPAREN numvar_expression RPAREN SEMICOLON
    (44) print_statement -> . PRINT LPAREN bool_expression RPAREN SEMICOLON
    (45) print_statement -> . PRINT LPAREN string_expression RPAREN SEMICOLON
    (46) print_statement -> . PRINT LPAREN identifier_expression RPAREN SEMICOLON
    (47) model_declaration -> . MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON
    (48) model_operation -> . IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
    (49) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ array SEMICOLON
    (50) model_assign_r -> . IDENTIFIER DOT IDENTIFIER EQ matrix SEMICOLON
    (51) function_declaration -> . FUN IDENTIFIER LPAREN parameter_list RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN numvar_expression SEMICOLON
    (56) return_statement -> . RETURN bool_expression SEMICOLON
    (57) return_statement -> . RETURN string_expression SEMICOLON
    (58) return_statement -> . RETURN identifier_expression SEMICOLON
    (59) continue_statement -> . CONTINUE SEMICOLON
    (60) break_statement -> . BREAK SEMICOLON
    (32) variable_query -> . IDENTIFIER SEMICOLON
    (95) comment_expression -> . COMMENT STRING

    RBRACE          shift and go to state 219
    NEWLINE         shift and go to state 19
    VAR             shift and go to state 20
    IDENTIFIER      shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    MODEL           shift and go to state 26
    FUN             shift and go to state 27
    RETURN          shift and go to state 28
    CONTINUE        shift and go to state 29
    BREAK           shift and go to state 30
    COMMENT         shift and go to state 31

    statement                      shift and go to state 32
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    print_statement                shift and go to state 9
    model_declaration              shift and go to state 10
    model_operation                shift and go to state 11
    model_assign_r                 shift and go to state 12
    function_declaration           shift and go to state 13
    return_statement               shift and go to state 14
    continue_statement             shift and go to state 15
    break_statement                shift and go to state 16
    variable_query                 shift and go to state 17
    comment_expression             shift and go to state 18

state 217

    (94) arrays -> empty .

    RBRACKET        reduce using rule 94 (arrays -> empty .)
    COMMA           reduce using rule 94 (arrays -> empty .)


state 218

    (47) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET . RPAREN SEMICOLON

    RPAREN          shift and go to state 220


state 219

    (34) elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE . elif_clause
    (34) elif_clause -> . ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause
    (35) elif_clause -> . empty
    (96) empty -> .

    ELIF            shift and go to state 193
    ELSE            reduce using rule 96 (empty -> .)
    NEWLINE         reduce using rule 96 (empty -> .)
    VAR             reduce using rule 96 (empty -> .)
    IDENTIFIER      reduce using rule 96 (empty -> .)
    IF              reduce using rule 96 (empty -> .)
    WHILE           reduce using rule 96 (empty -> .)
    FOR             reduce using rule 96 (empty -> .)
    PRINT           reduce using rule 96 (empty -> .)
    MODEL           reduce using rule 96 (empty -> .)
    FUN             reduce using rule 96 (empty -> .)
    RETURN          reduce using rule 96 (empty -> .)
    CONTINUE        reduce using rule 96 (empty -> .)
    BREAK           reduce using rule 96 (empty -> .)
    COMMENT         reduce using rule 96 (empty -> .)
    $end            reduce using rule 96 (empty -> .)
    RBRACE          reduce using rule 96 (empty -> .)

    elif_clause                    shift and go to state 221
    empty                          shift and go to state 194

state 220

    (47) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 222


state 221

    (34) elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .

    ELSE            reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    NEWLINE         reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    VAR             reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    IDENTIFIER      reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    IF              reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    WHILE           reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    FOR             reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    PRINT           reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    MODEL           reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    FUN             reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    RETURN          reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    CONTINUE        reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    BREAK           reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    COMMENT         reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    $end            reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)
    RBRACE          reduce using rule 34 (elif_clause -> ELIF LPAREN condition RPAREN LBRACE statement_list RBRACE elif_clause .)


state 222

    (47) model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .

    NEWLINE         reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    VAR             reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    IF              reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    WHILE           reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    FOR             reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    PRINT           reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    MODEL           reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    FUN             reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    RETURN          reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    BREAK           reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    COMMENT         reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    $end            reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)
    RBRACE          reduce using rule 47 (model_declaration -> MODEL IDENTIFIER EQ LPAREN NUMBER COMMA array COMMA array COMMA LBRACKET matrix RBRACKET RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 51 resolved using rule (numvar -> IDENTIFIER)
WARNING: rejected rule (identifier_expression -> IDENTIFIER) in state 51
WARNING: reduce/reduce conflict in state 107 resolved using rule (elements -> empty)
WARNING: rejected rule (arrays -> empty) in state 107
WARNING: Rule (identifier_expression -> IDENTIFIER) is never reduced
